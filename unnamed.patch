Index: app/src/main/java/hshealthy/cn/com/digest/Encoder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/digest/Encoder.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/digest/Encoder.java	(revision )
@@ -0,0 +1,9 @@
+package hshealthy.cn.com.digest;
+
+/**
+ * Created by chen.sun on 2017/9/27.
+ */
+
+public interface Encoder {
+    Object encode(Object var1) throws EncoderException;
+}
Index: app/src/main/java/hshealthy/cn/com/digest/EncoderException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/digest/EncoderException.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/digest/EncoderException.java	(revision )
@@ -0,0 +1,13 @@
+package hshealthy.cn.com.digest;
+
+/**
+ * Created by chen.sun on 2017/9/27.
+ */
+
+public class EncoderException extends Exception {
+    private static final long serialVersionUID = 1L;
+
+    public EncoderException(String pMessage) {
+        super(pMessage);
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/base/BaseView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/base/BaseView.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/base/BaseView.java	(revision )
@@ -0,0 +1,8 @@
+package hshealthy.cn.com.base;
+
+/**
+ * MVP --> BaseView
+ * Created by Administrator on 2016/12/15.
+ */
+public interface BaseView {
+}
Index: app/src/main/java/hshealthy/cn/com/model/CollectorBean.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/model/CollectorBean.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/model/CollectorBean.java	(revision )
@@ -0,0 +1,22 @@
+package hshealthy.cn.com.model;
+
+import android.content.Context;
+
+import java.io.Serializable;
+
+/**
+ * Created by 71443 on 2018/5/25.
+ */
+
+public class CollectorBean implements Serializable {
+
+    private Context context;
+
+    public Context getContext() {
+        return context;
+    }
+
+    public void setContext(Context context) {
+        this.context = context;
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/util/WeakReferenceUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/WeakReferenceUtil.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/WeakReferenceUtil.java	(revision )
@@ -0,0 +1,32 @@
+package hshealthy.cn.com.util;
+
+
+import java.lang.ref.WeakReference;
+
+/**
+ *
+ *
+ * Tips:弱引用工具类  new WeakReferenceUtil(T).getWeakT();
+ */
+@SuppressWarnings("unused")
+public class WeakReferenceUtil<T> {
+
+    private WeakReference<T> weakReference;
+
+    /**
+     *
+     */
+    @SuppressWarnings("unused")
+    private WeakReferenceUtil() {
+    }
+    @SuppressWarnings("unused")
+    public WeakReferenceUtil(T t){
+        weakReference =new WeakReference<T>(t);
+    }
+
+    @SuppressWarnings("unused")
+    public T getWeakT(){
+        return weakReference.get();
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/hshealthy/cn/com/base/BasePresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/base/BasePresenter.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/base/BasePresenter.java	(revision )
@@ -0,0 +1,38 @@
+package hshealthy.cn.com.base;
+
+import java.lang.ref.WeakReference;
+
+/**
+ * MVP --> BasePresenter
+ * Created by Administrator on 2016/12/15.
+ */
+public abstract class BasePresenter<M extends BaseModel, V extends BaseView> implements IPresenter {
+    private WeakReference actReference;
+    protected V iView;
+    protected M iModel;
+
+    public M getModel() {
+        iModel = loadModel(); //使用前先进行初始化
+        return iModel;
+    }
+
+    @Override
+    public void attachView(BaseView iView) {
+        actReference = new WeakReference(iView);
+    }
+
+    @Override
+    public void detachView() {
+        if (actReference != null) {
+            actReference.clear();
+            actReference = null;
+        }
+    }
+
+    @Override
+    public V getView() {
+        return (V) actReference.get();
+    }
+
+    public abstract M loadModel();
+}
Index: app/src/main/res/layout/activity_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_home.xml	(revision )
+++ app/src/main/res/layout/activity_home.xml	(revision )
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/activity_main"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <android.support.v4.view.ViewPager
+        android:id="@+id/viewpager"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_above="@+id/bottom_navigation" />
+
+    <android.support.design.widget.BottomNavigationView
+        android:id="@+id/bottom_navigation"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        app:itemIconTint="@drawable/bottom_navigation_selector"
+        app:itemTextColor="@drawable/bottom_navigation_selector"
+        app:menu="@menu/menu_bottom_navigation" />
+
+    <View
+        android:layout_width="match_parent"
+        android:layout_height="5dp"
+        android:layout_above="@id/bottom_navigation"
+        android:background="@drawable/bottom_shadow" />
+
+</RelativeLayout>
Index: app/src/main/java/hshealthy/cn/com/util/NetworkUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/NetworkUtil.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/NetworkUtil.java	(revision )
@@ -0,0 +1,177 @@
+package hshealthy.cn.com.util;
+
+import android.content.Context;
+import android.net.ConnectivityManager;
+import android.net.NetworkInfo;
+import android.telephony.TelephonyManager;
+
+import java.io.IOException;
+import java.net.HttpURLConnection;
+import java.net.InetAddress;
+import java.net.NetworkInterface;
+import java.net.SocketException;
+import java.net.URL;
+import java.util.Enumeration;
+
+/**
+ * 网络相关的工具类
+ */
+public class NetworkUtil {
+
+    public static int NET_CNNT_BAIDU_OK = 1; // NetworkAvailable
+    public static int NET_CNNT_BAIDU_TIMEOUT = 2; // no NetworkAvailable
+    public static int NET_NOT_PREPARE = 3; // Net no ready
+    public static int NET_ERROR = 4; //net error
+    private static int TIMEOUT = 3000; // TIMEOUT
+
+    /**
+     * check NetworkAvailable
+     *
+     * @param context
+     * @return
+     */
+    public static boolean isNetworkAvailable(Context context) {
+        ConnectivityManager manager = (ConnectivityManager) context.getApplicationContext().getSystemService(Context.CONNECTIVITY_SERVICE);
+        if (null == manager)
+            return false;
+        NetworkInfo info = manager.getActiveNetworkInfo();
+        if (null == info || !info.isAvailable())
+            return false;
+        return true;
+    }
+
+    /**
+     * 得到ip地址
+     *
+     * @return
+     */
+    public static String getLocalIpAddress() {
+        String ret = "";
+        try {
+            for (Enumeration<NetworkInterface> en = NetworkInterface.getNetworkInterfaces(); en.hasMoreElements(); ) {
+                NetworkInterface intf = en.nextElement();
+                for (Enumeration<InetAddress> enumIpAddr = intf.getInetAddresses(); enumIpAddr.hasMoreElements(); ) {
+                    InetAddress inetAddress = enumIpAddr.nextElement();
+                    if (!inetAddress.isLoopbackAddress()) {
+                        ret = inetAddress.getHostAddress().toString();
+                    }
+                }
+            }
+        } catch (SocketException ex) {
+            ex.printStackTrace();
+        }
+        return ret;
+    }
+
+    /**
+     * 返回当前网络状态
+     *
+     * @param context
+     * @return
+     */
+    public static int getNetState(Context context) {
+        try {
+            ConnectivityManager connectivity = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
+            if (connectivity != null) {
+                NetworkInfo networkinfo = connectivity.getActiveNetworkInfo();
+                if (networkinfo != null) {
+                    if (networkinfo.isAvailable() && networkinfo.isConnected()) {
+                        if (!connectionNetwork())
+                            return NET_CNNT_BAIDU_TIMEOUT;
+                        else
+                            return NET_CNNT_BAIDU_OK;
+                    } else {
+                        return NET_NOT_PREPARE;
+                    }
+                }
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return NET_ERROR;
+    }
+
+    /**
+     * ping "http://www.baidu.com"
+     *
+     * @return
+     */
+    static private boolean connectionNetwork() {
+        boolean result = false;
+        HttpURLConnection httpUrl = null;
+        try {
+            httpUrl = (HttpURLConnection) new URL("http://www.baidu.com").openConnection();
+            httpUrl.setConnectTimeout(TIMEOUT);
+            httpUrl.connect();
+            result = true;
+        } catch (IOException e) {
+        } finally {
+            if (null != httpUrl) {
+                httpUrl.disconnect();
+            }
+            httpUrl = null;
+        }
+        return result;
+    }
+
+    /**
+     * check is3G
+     *
+     * @param context
+     * @return boolean
+     */
+    public static boolean is3G(Context context) {
+        ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
+        NetworkInfo activeNetInfo = connectivityManager.getActiveNetworkInfo();
+        if (activeNetInfo != null && activeNetInfo.getType() == ConnectivityManager.TYPE_MOBILE) {
+            return true;
+        }
+        return false;
+    }
+
+    /**
+     * isWifi
+     *
+     * @param context
+     * @return boolean
+     */
+    public static boolean isWifi(Context context) {
+        ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
+        NetworkInfo activeNetInfo = connectivityManager.getActiveNetworkInfo();
+        if (activeNetInfo != null && activeNetInfo.getType() == ConnectivityManager.TYPE_WIFI) {
+            return true;
+        }
+        return false;
+    }
+
+    /**
+     * is2G
+     *
+     * @param context
+     * @return boolean
+     */
+    public static boolean is2G(Context context) {
+        ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
+        NetworkInfo activeNetInfo = connectivityManager.getActiveNetworkInfo();
+        if (activeNetInfo != null
+                && (activeNetInfo.getSubtype() == TelephonyManager.NETWORK_TYPE_EDGE
+                || activeNetInfo.getSubtype() == TelephonyManager.NETWORK_TYPE_GPRS
+                || activeNetInfo.getSubtype() == TelephonyManager.NETWORK_TYPE_CDMA)) {
+            return true;
+        }
+        return false;
+    }
+
+    /**
+     * is wifi on
+     */
+    public static boolean isWifiEnabled(Context context) {
+        ConnectivityManager mgrConn = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
+        TelephonyManager mgrTel = (TelephonyManager) context
+                .getSystemService(Context.TELEPHONY_SERVICE);
+        return ((mgrConn.getActiveNetworkInfo() != null
+                && mgrConn.getActiveNetworkInfo().getState() == NetworkInfo.State.CONNECTED)
+                || mgrTel.getNetworkType() == TelephonyManager.NETWORK_TYPE_UMTS);
+    }
+
+} 
\ No newline at end of file
Index: app/src/main/java/hshealthy/cn/com/http/CommonSubscriber.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/http/CommonSubscriber.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/http/CommonSubscriber.java	(revision )
@@ -0,0 +1,41 @@
+package hshealthy.cn.com.http;
+
+import android.content.Context;
+
+import hshealthy.cn.com.base.BaseSubscriber;
+import hshealthy.cn.com.util.LogUtils;
+import hshealthy.cn.com.util.NetworkUtil;
+
+
+/**
+ * CommonSubscriber
+ */
+public abstract class CommonSubscriber<T> extends BaseSubscriber<T> {
+
+    private Context context;
+
+    public CommonSubscriber(Context context) {
+        this.context = context;
+    }
+
+    private static final String TAG = "CommonSubscriber";
+
+    @Override
+    public void onStart() {
+        if (!NetworkUtil.isNetworkAvailable(context)) {
+            LogUtils.e(TAG, "网络不可用");
+        } else {
+            LogUtils.e(TAG, "网络可用");
+        }
+    }
+
+    @Override
+    protected void onError(ApiException e) {
+        LogUtils.e(TAG, "错误信息为 " + "code:" + e.code + "   message:" + e.message);
+    }
+
+    @Override
+    public void onCompleted() {
+        LogUtils.e(TAG, "成功了");
+    }
+}
Index: app/src/main/res/layout/hst_login_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/hst_login_view.xml	(revision )
+++ app/src/main/res/layout/hst_login_view.xml	(revision )
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:paddingLeft="@dimen/dp_15"
+    android:paddingRight="@dimen/dp_15"
+    android:layout_height="match_parent">
+        <RadioGroup
+            android:id="@+id/user_type"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/dp_3"
+            android:layout_marginBottom="@dimen/dp_3"
+            android:orientation="horizontal">
+            <RadioButton
+                android:layout_weight="1"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="@string/my_is_info_user"
+                android:id="@+id/user_rb"/>
+            <RadioButton
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="@string/my_is_doctor"
+                android:layout_weight="1"
+                android:id="@+id/doctor_rb"/>
+        </RadioGroup>
+
+
+
+    <EditText
+        android:id="@+id/user_phone"
+        android:background="@null"
+        android:inputType="phone"
+        android:layout_marginTop="@dimen/dp_15"
+        android:layout_below="@+id/user_type"
+        android:layout_width="match_parent"
+        android:hint="  请输入手机号"
+        android:paddingLeft="@dimen/dp_5"
+        android:layout_height="@dimen/dp_40" />
+
+<LinearLayout
+    android:layout_width="match_parent"
+    android:orientation="horizontal"
+    android:layout_below="@+id/user_phone"
+    android:layout_height="@dimen/dp_40">
+    <EditText
+        android:id="@+id/user_code"
+        android:background="@null"
+        android:inputType="number"
+        android:layout_width="match_parent"
+        android:hint="  验证码"
+        android:layout_weight="1"
+        android:paddingLeft="@dimen/dp_5"
+        android:layout_height="match_parent" />
+
+    <TextView
+        android:id="@+id/bt_code"
+        android:layout_weight="2"
+        android:text="获取验证码"
+        android:textSize="@dimen/sp_16"
+        android:gravity="center_horizontal|center_vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+</LinearLayout>
+
+
+
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision )
+++ app/src/main/res/values/strings.xml	(revision )
@@ -0,0 +1,9 @@
+<resources>
+    <string name="app_name">hshealthy</string>
+    <string name="title_home">Home</string>
+    <string name="title_dashboard">Dashboard</string>
+    <string name="title_notifications">Notifications</string>
+
+    <string name="my_is_info_user">我是普通用户</string>
+    <string name="my_is_doctor">我是专家医生</string>
+</resources>
Index: app/src/main/java/hshealthy/cn/com/base/BaseActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/base/BaseActivity.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/base/BaseActivity.java	(revision )
@@ -0,0 +1,109 @@
+package hshealthy.cn.com.base;
+
+import android.content.Context;
+import android.os.Bundle;
+import android.support.v4.app.FragmentActivity;
+import android.view.View;
+
+import butterknife.ButterKnife;
+import hshealthy.cn.com.util.LogUtils;
+import hshealthy.cn.com.util.ToastUtil;
+import hshealthy.cn.com.util.WeakReferenceUtil;
+
+/**
+ * BaseActivity
+ * Created by Administrator on 2016/12/15.
+ */
+public abstract class BaseActivity<P extends BasePresenter> extends FragmentActivity implements BaseView, View.OnClickListener {
+    protected View view;
+    protected P mPresenter;
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(getView());
+        ButterKnife.bind(this);
+        mPresenter = loadPresenter();
+        initCommonData();
+        initView();
+        initListener();
+        initData();
+    }
+
+    protected abstract P loadPresenter();
+
+    private void initCommonData() {
+
+        if (mPresenter != null)
+            mPresenter.attachView(this);
+    }
+
+    protected abstract void initData();
+
+    protected abstract void initListener();
+
+    protected abstract void initView();
+
+    protected abstract int getLayoutId();
+
+    protected abstract void otherViewClick(View view);
+
+    /**
+     * @return 显示的内容
+     */
+    public View getView() {
+        view = View.inflate(this, getLayoutId(), null);
+        return view;
+    }
+
+    /**
+     * context弱引用 用于外部引用控件
+     *
+     * @return
+     */
+    protected Context getWeakContext() {
+        return new WeakReferenceUtil<BaseActivity>(this).getWeakT();
+    }
+
+    /**
+     * 点击的事件的统一的处理
+     *
+     * @param view
+     */
+    @Override
+    public void onClick(View view) {
+        switch (view.getId()) {
+            default:
+                otherViewClick(view);
+                break;
+        }
+    }
+
+    /**
+     * @param str 显示一个内容为str的toast
+     */
+    public void toast(String str) {
+        ToastUtil.setToast(str);
+    }
+
+    /**
+     * @param contentId 显示一个内容为contentId指定的toast
+     */
+    public void toast(int contentId) {
+        ToastUtil.setToast(contentId);
+    }
+
+    /**
+     * @param str 日志的处理
+     */
+    public void LogE(String str) {
+        LogUtils.e(getClass(), str);
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+        if (mPresenter != null)
+            mPresenter.detachView();
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/util/SpUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/SpUtils.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/SpUtils.java	(revision )
@@ -0,0 +1,227 @@
+package hshealthy.cn.com.util;
+
+import android.content.Context;
+import android.content.SharedPreferences;
+import android.util.Base64;
+
+
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutputStream;
+import java.io.StreamCorruptedException;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+import java.util.Map;
+
+import hshealthy.cn.com.MyApp;
+
+/**
+ * SharedPreferences 相关工具类
+ */
+public class SpUtils {
+    /**
+     * 保存在手机里面的文件名
+     */
+    public static final String FILE_NAME = "123";
+    static Context context = MyApp.getAppContext();
+
+    /**
+     * 保存数据的方法，我们需要拿到保存数据的具体类型，然后根据类型调用不同的保存方法
+     *
+     * @param key
+     * @param object
+     */
+    public static void put(String key, Object object) {
+
+        SharedPreferences sp = context.getSharedPreferences(FILE_NAME, Context.MODE_PRIVATE);
+        SharedPreferences.Editor editor = sp.edit();
+
+        if (object instanceof String) {
+            editor.putString(key, (String) object);
+        } else if (object instanceof Integer) {
+            editor.putInt(key, (Integer) object);
+        } else if (object instanceof Boolean) {
+            editor.putBoolean(key, (Boolean) object);
+        } else if (object instanceof Float) {
+            editor.putFloat(key, (Float) object);
+        } else if (object instanceof Long) {
+            editor.putLong(key, (Long) object);
+        } else {
+            editor.putString(key, object.toString());
+        }
+
+        SharedPreferencesCompat.apply(editor);
+    }
+
+
+    /**
+     * 得到保存数据的方法，我们根据默认值得到保存的数据的具体类型，然后调用相对于的方法获取值
+     *
+     * @param key
+     * @param defaultObject
+     * @return
+     */
+    public static Object get(String key, Object defaultObject) {
+        SharedPreferences sp = context.getSharedPreferences(FILE_NAME, Context.MODE_PRIVATE);
+
+        if (defaultObject instanceof String) {
+            return sp.getString(key, (String) defaultObject);
+        } else if (defaultObject instanceof Integer) {
+            return sp.getInt(key, (Integer) defaultObject);
+        } else if (defaultObject instanceof Boolean) {
+            return sp.getBoolean(key, (Boolean) defaultObject);
+        } else if (defaultObject instanceof Float) {
+            return sp.getFloat(key, (Float) defaultObject);
+        } else if (defaultObject instanceof Long) {
+            return sp.getLong(key, (Long) defaultObject);
+        }
+        return null;
+    }
+
+    /**
+     * 移除某个key值已经对应的值
+     */
+    public static void remove(String key) {
+        SharedPreferences sp = context.getSharedPreferences(FILE_NAME, Context.MODE_PRIVATE);
+        SharedPreferences.Editor editor = sp.edit();
+        editor.remove(key);
+        SharedPreferencesCompat.apply(editor);
+    }
+
+    /**
+     * 清除所有数据
+     */
+    public static void clear() {
+        SharedPreferences sp = context.getSharedPreferences(FILE_NAME, Context.MODE_PRIVATE);
+        SharedPreferences.Editor editor = sp.edit();
+        editor.clear();
+        SharedPreferencesCompat.apply(editor);
+    }
+
+
+    public static void setObject(String key, Object object) {
+        SharedPreferences sp = context.getSharedPreferences(FILE_NAME, Context.MODE_PRIVATE);
+
+        ByteArrayOutputStream baos = new ByteArrayOutputStream();
+        ObjectOutputStream out = null;
+        try {
+            out = new ObjectOutputStream(baos);
+            out.writeObject(object);
+            String objectVal = new String(Base64.encode(baos.toByteArray(), Base64.DEFAULT));
+            SharedPreferences.Editor editor = sp.edit();
+            editor.putString(key, objectVal);
+            editor.commit();
+        } catch (IOException e) {
+            e.printStackTrace();
+        } finally {
+            try {
+                if (baos != null) {
+                    baos.close();
+                }
+                if (out != null) {
+                    out.close();
+                }
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
+    }
+
+    @SuppressWarnings("unchecked")
+    public static <T> T getObject(String key, Class<T> clazz) {
+        SharedPreferences sp = context.getSharedPreferences(FILE_NAME, Context.MODE_PRIVATE);
+
+        if (sp.contains(key)) {
+            String objectVal = sp.getString(key, null);
+            byte[] buffer = Base64.decode(objectVal, Base64.DEFAULT);
+            ByteArrayInputStream bais = new ByteArrayInputStream(buffer);
+            ObjectInputStream ois = null;
+            try {
+                ois = new ObjectInputStream(bais);
+                T t = (T) ois.readObject();
+                return t;
+            } catch (StreamCorruptedException e) {
+                e.printStackTrace();
+            } catch (IOException e) {
+                e.printStackTrace();
+            } catch (ClassNotFoundException e) {
+                e.printStackTrace();
+            } finally {
+                try {
+                    if (bais != null) {
+                        bais.close();
+                    }
+                    if (ois != null) {
+                        ois.close();
+                    }
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+            }
+        }
+        return null;
+    }
+
+
+    /**
+     * 返回所有的键值对
+     *
+     * @return
+     */
+    public static Map<String, ?> getAll() {
+        SharedPreferences sp = context.getSharedPreferences(FILE_NAME, Context.MODE_PRIVATE);
+        return sp.getAll();
+    }
+
+    /**
+     * 创建一个解决SharedPreferencesCompat.apply方法的一个兼容类
+     *
+     * @author zhy
+     */
+    private static class SharedPreferencesCompat {
+        private static final Method sApplyMethod = findApplyMethod();
+
+        /**
+         * 反射查找apply的方法
+         *
+         * @return
+         */
+        @SuppressWarnings({"unchecked", "rawtypes"})
+        private static Method findApplyMethod() {
+            try {
+                Class clz = SharedPreferences.Editor.class;
+                return clz.getMethod("apply");
+            } catch (NoSuchMethodException e) {
+            }
+
+            return null;
+        }
+
+        /**
+         * 如果找到则使用apply执行，否则使用commit
+         *
+         * @param editor
+         */
+        public static void apply(SharedPreferences.Editor editor) {
+            try {
+                if (sApplyMethod != null) {
+                    sApplyMethod.invoke(editor);
+                    return;
+                }
+            } catch (IllegalArgumentException e) {
+            } catch (IllegalAccessException e) {
+            } catch (InvocationTargetException e) {
+            }
+            editor.commit();
+        }
+    }
+
+    //返回String值
+    public static String getString(Context context, String key, String defaultStr) {
+        SharedPreferences sp = context.getSharedPreferences(FILE_NAME, Context.MODE_PRIVATE);
+        return sp.getString(key, defaultStr);
+    }
+
+}
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision )
+++ app/build.gradle	(revision )
@@ -0,0 +1,58 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 26
+    defaultConfig {
+        applicationId "hshealthy.cn.com"
+        minSdkVersion 21
+        targetSdkVersion 26
+        versionCode 1
+        versionName "1.0"
+        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+
+configurations.all {
+    resolutionStrategy {
+        force 'com.android.support:support-annotations:26.1.0'
+    }
+}
+
+
+dependencies {
+    implementation fileTree(dir: 'libs', include: ['*.jar'])
+    implementation 'com.android.support:appcompat-v7:26.1.0'
+    implementation 'com.android.support:design:26.1.0'
+    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
+
+    /*okhttp*/
+    compile 'com.squareup.okhttp3:okhttp:3.3.1'
+    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
+    compile 'com.facebook.stetho:stetho-okhttp3:1.3.1'
+    /*rx-android-java*/
+    compile 'io.reactivex:rxjava:1.1.9'
+    compile 'io.reactivex:rxandroid:1.2.1'
+    /*retrofit*/
+    compile 'com.squareup.retrofit2:retrofit:2.1.0'
+    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
+    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
+    compile 'com.squareup.retrofit2:retrofit-converters:2.1.0'
+    /*gson*/
+    compile 'com.google.code.gson:gson:2.6.2'
+    /*butterknife*/
+    compile 'com.jakewharton:butterknife:7.0.1'
+    compile "com.github.bumptech.glide:glide:${GLIDE_VERSION_4}"
+
+    compile 'com.alibaba:fastjson:1.1.54.android'
+    testImplementation 'junit:junit:4.12'
+    androidTestImplementation 'com.android.support.test:runner:1.0.2'
+    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
+}
Index: app/src/main/java/hshealthy/cn/com/digest/Decoder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/digest/Decoder.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/digest/Decoder.java	(revision )
@@ -0,0 +1,9 @@
+package hshealthy.cn.com.digest;
+
+/**
+ * Created by chen.sun on 2017/9/27.
+ */
+
+public interface Decoder {
+    Object decode(Object var1) throws DecoderException;
+}
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(revision )
+++ app/src/main/res/values/dimens.xml	(revision )
@@ -0,0 +1,67 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+
+    <dimen name="dp_0">0dp</dimen>
+    <dimen name="dp_0.5">0.5dp</dimen>
+    <dimen name="dp_1">1dp</dimen>
+    <dimen name="dp_2">2dp</dimen>
+    <dimen name="dp_3">3dp</dimen>
+    <dimen name="dp_4">4dp</dimen>
+    <dimen name="dp_5">5dp</dimen>
+    <dimen name="dp_7">7dp</dimen>
+    <dimen name="dp_8">8dp</dimen>
+    <dimen name="dp_10">10dp</dimen>
+    <dimen name="dp_11">11dp</dimen>
+    <dimen name="dp_12">12dp</dimen>
+    <dimen name="dp_13">13dp</dimen>
+    <dimen name="dp_14">14dp</dimen>
+    <dimen name="dp_15">15dp</dimen>
+    <dimen name="dp_16">16dp</dimen>
+    <dimen name="dp_17">17dp</dimen>
+    <dimen name="dp_18">18dp</dimen>
+    <dimen name="dp_19">19dp</dimen>
+    <dimen name="dp_20">20dp</dimen>
+    <dimen name="dp_21">21dp</dimen>
+    <dimen name="dp_22">22dp</dimen>
+    <dimen name="dp_23">23dp</dimen>
+    <dimen name="dp_24">24dp</dimen>
+    <dimen name="dp_25">25dp</dimen>
+    <dimen name="dp_26">26dp</dimen>
+    <dimen name="dp_27">27dp</dimen>
+    <dimen name="dp_28">28dp</dimen>
+    <dimen name="dp_29">29dp</dimen>
+    <dimen name="dp_30">30dp</dimen>
+    <dimen name="dp_31">31dp</dimen>
+    <dimen name="dp_35">35dp</dimen>
+    <dimen name="dp_40">40dp</dimen>
+    <dimen name="dp_41">41dp</dimen>
+    <dimen name="dp_45">45dp</dimen>
+    <dimen name="dp_47">47dp</dimen>
+    <dimen name="dp_50">50dp</dimen>
+    <dimen name="dp_54">54dp</dimen>
+    <dimen name="dp_55">55dp</dimen>
+    <dimen name="dp_56">56dp</dimen>
+    <dimen name="dp_60">60dp</dimen>
+    <dimen name="dp_62">62dp</dimen>
+    <dimen name="dp_65">65dp</dimen>
+    <dimen name="dp_70">70dp</dimen>
+    <dimen name="dp_75">75dp</dimen>
+    <dimen name="dp_100">100dp</dimen>
+    <dimen name="dp_250">250dp</dimen>
+
+    <dimen name="sp_8">8sp</dimen>
+    <dimen name="sp_9">9sp</dimen>
+    <dimen name="sp_10">10sp</dimen>
+    <dimen name="sp_11">11sp</dimen>
+    <dimen name="sp_12">12sp</dimen>
+    <dimen name="sp_13">13sp</dimen>
+    <dimen name="sp_14">14sp</dimen>
+    <dimen name="sp_15">15sp</dimen>
+    <dimen name="sp_16">16sp</dimen>
+    <dimen name="sp_17">17sp</dimen>
+    <dimen name="sp_18">18sp</dimen>
+    <dimen name="sp_20">20sp</dimen>
+    <dimen name="sp_22">22sp</dimen>
+</resources>
Index: app/src/main/java/hshealthy/cn/com/digest/Hex.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/digest/Hex.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/digest/Hex.java	(revision )
@@ -0,0 +1,80 @@
+package hshealthy.cn.com.digest;
+
+
+/**
+ * Created by chen.sun on 2017/9/27.
+ */
+public class Hex implements BinaryEncoder, BinaryDecoder {
+    private static final char[] DIGITS = new char[]{'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'};
+
+    public Hex() {
+    }
+
+    public static byte[] decodeHex(char[] data) throws DecoderException {
+        int len = data.length;
+        if((len & 1) != 0) {
+            throw new DecoderException("Odd number of characters.");
+        } else {
+            byte[] out = new byte[len >> 1];
+            int i = 0;
+
+            for(int j = 0; j < len; ++i) {
+                int f = toDigit(data[j], j) << 4;
+                ++j;
+                f |= toDigit(data[j], j);
+                ++j;
+                out[i] = (byte)(f & 255);
+            }
+
+            return out;
+        }
+    }
+
+    protected static int toDigit(char ch, int index) throws DecoderException {
+        int digit = Character.digit(ch, 16);
+        if(digit == -1) {
+            throw new DecoderException("Illegal hexadecimal charcter " + ch + " at index " + index);
+        } else {
+            return digit;
+        }
+    }
+
+    public static char[] encodeHex(byte[] data) {
+        int l = data.length;
+        char[] out = new char[l << 1];
+        int i = 0;
+
+        for(int var4 = 0; i < l; ++i) {
+            out[var4++] = DIGITS[(240 & data[i]) >>> 4];
+            out[var4++] = DIGITS[15 & data[i]];
+        }
+
+        return out;
+    }
+
+    public byte[] decode(byte[] array) throws DecoderException {
+        return decodeHex((new String(array)).toCharArray());
+    }
+
+    public Object decode(Object object) throws DecoderException {
+        try {
+            char[] charArray = object instanceof String?((String)object).toCharArray():(char[])object;
+            return decodeHex(charArray);
+        } catch (ClassCastException var3) {
+            throw new DecoderException(var3.getMessage());
+        }
+    }
+
+    public byte[] encode(byte[] array) {
+        return (new String(encodeHex(array))).getBytes();
+    }
+
+    public Object encode(Object object) throws EncoderException {
+        try {
+            byte[] byteArray = object instanceof String?((String)object).getBytes():(byte[])object;
+            return encodeHex(byteArray);
+        } catch (ClassCastException var3) {
+            throw new EncoderException(var3.getMessage());
+        }
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/util/Log.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/Log.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/Log.java	(revision )
@@ -0,0 +1,184 @@
+package hshealthy.cn.com.util;
+
+import android.widget.Toast;
+
+import java.io.PrintWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+/*
+ *
+ * Log工具类
+ */
+public class Log {
+
+    private static Toast toast = null;
+    /**
+     * isDebug :是用来控制，是否打印日志
+     */
+    private static final boolean isDeBug = true;
+    /**
+     * VERBOSE日志形式的标识符
+     */
+    public static final int VERBOSE = 5;
+    /**
+     * DEBUG日志形式的标识符
+     */
+    public static final int DEBUG = 4;
+    /**
+     * INFO日志形式的标识符
+     */
+    public static final int INFO = 3;
+    /**
+     * WARN日志形式的标识符
+     */
+    public static final int WARN = 2;
+    /**
+     * ERROR日志形式的标识符
+     */
+    public static final int ERROR = 1;
+
+    //规定每段显示的长度
+    private static int LOG_MAXLENGTH = 2000;
+
+
+    /**
+     * 把异常用来输出日志的综合方法
+     *
+     * @param tag       日志标识
+     * @param throwable 抛出的异常
+     * @param type      日志类型
+     */
+    public static void log(String tag, Throwable throwable, int type) {
+        log(tag, exToString(throwable), type);
+    }
+
+    /**
+     * 用来输出日志的综合方法（文本内容）
+     *
+     * @param tag  日志标识
+     * @param msg  要输出的内容
+     * @param type 日志类型
+     */
+    public static void log(String tag, String msg, int type) {
+        switch (type) {
+            case VERBOSE:
+                v(tag, msg);// verbose等级
+                break;
+            case DEBUG:
+                d(tag, msg);// debug等级
+                break;
+            case INFO:
+                i(tag, msg);// info等级
+                break;
+            case WARN:
+                w(tag, msg);// warn等级
+                break;
+            case ERROR:
+                e(tag, msg);// error等级
+                break;
+            default:
+                break;
+        }
+    }
+
+    /**
+     * verbose等级的日志输出
+     *
+     * @param tag 日志标识
+     * @param msg 要输出的内容
+     */
+    public static void v(String tag, String msg) {
+        // 是否开启日志输出
+        if (isDeBug) {
+            android.util.Log.v(tag, msg);
+        }
+
+    }
+
+    /**
+     * debug等级的日志输出
+     *
+     * @param tag 标识
+     * @param msg 内容
+     */
+    public static void d(String tag, String msg) {
+        if (isDeBug) {
+            android.util.Log.d(tag, msg);
+        }
+
+    }
+
+    /**
+     * info等级的日志输出
+     *
+     * @param tag 标识
+     * @param msg 内容
+     */
+    public static void i(String tag, String msg) {
+        if (isDeBug) {
+            android.util.Log.i(tag, msg);
+        }
+
+    }
+
+    /**
+     * warn等级的日志输出
+     *
+     * @param tag 标识
+     * @param msg 内容
+     */
+    public static void w(String tag, String msg) {
+        if (isDeBug) {
+            android.util.Log.w(tag, msg);
+        }
+
+    }
+
+    /**
+     * error等级的日志输出
+     *
+     * @param tag 标识
+     * @param msg 内容
+     */
+    public static void e(String tag, String msg) {
+        if (isDeBug) {
+            android.util.Log.e(tag, msg);
+        }
+
+    }
+
+    /**
+     * 把异常信息转化为字符串
+     *
+     * @param ex 异常信息
+     * @return 异常信息字符串
+     */
+    private static String exToString(Throwable ex) {
+        Writer writer = new StringWriter();
+        PrintWriter printWriter = new PrintWriter(writer);
+        ex.printStackTrace(printWriter);
+        printWriter.close();
+        String result = writer.toString();
+        return result;
+    }
+
+    public static void showLogCompletion(String tag, String msg) {
+        if (tag == null || tag.length() == 0
+                || msg == null || msg.length() == 0 || !isDeBug) {
+            return;
+        }
+        int segmentSize = 1 * 1000;
+        long length = msg.length();
+        if (length <= segmentSize) {// 长度小于等于限制直接打印
+            android.util.Log.e(tag, msg);
+        } else {
+            while (msg.length() > segmentSize) {// 循环分段打印日志
+                String logContent = msg.substring(0, segmentSize);
+                msg = msg.replace(logContent, "");
+                android.util.Log.e(tag, logContent);
+            }
+            android.util.Log.e(tag, msg);// 打印剩余日志
+        }
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/http/HttpService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/http/HttpService.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/http/HttpService.java	(revision )
@@ -0,0 +1,23 @@
+package hshealthy.cn.com.http;
+
+
+import hshealthy.cn.com.base.BaseHttpResult;
+import hshealthy.cn.com.bean.CustomerBean;
+import retrofit2.http.FormUrlEncoded;
+import retrofit2.http.GET;
+import retrofit2.http.POST;
+import retrofit2.http.Query;
+import rx.Observable;
+
+/**
+ * 网络请求的接口
+ * Created by Administrator on 2016/11/9.
+ */
+public interface HttpService {
+
+//    @FormUrlEncoded
+//    @POST("getIpInfo.php")
+//    Observable<BaseHttpResult<IpInfoBean>> getIpInfo(@Field("ip") String ip);
+    @POST("getlogin.php")
+    Observable<BaseHttpResult<CustomerBean>> getIpInfo(@Query("phone") String phone,@Query("code") String code);
+}
Index: app/src/main/java/hshealthy/cn/com/http/ServerException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/http/ServerException.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/http/ServerException.java	(revision )
@@ -0,0 +1,15 @@
+package hshealthy.cn.com.http;
+
+/**
+ * 自定义的服务器异常
+ */
+public class ServerException extends RuntimeException {
+    public int code;
+    public String message;
+
+    public ServerException(int code, String message) {
+        super(message);
+        this.code = code;
+        this.message = message;
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/api/UrlHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/api/UrlHelper.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/api/UrlHelper.java	(revision )
@@ -0,0 +1,19 @@
+package hshealthy.cn.com.api;
+
+/**
+ * 添加所有的接口
+ * Created by Administrator on 2016/12/14.
+ */
+public class UrlHelper {
+    public static String BASE_URL = "http://ip.taobao.com/service/";
+
+    public static final String md5_key = "";
+    /**
+     * des3加密key
+     */
+    public static final String APP_DATA_DES3_SECRET_KEY ="";
+    /**
+     * des3加密vi
+     */
+    public static final String APP_DATA_DES3_VI ="";
+}
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision )
+++ gradle/wrapper/gradle-wrapper.properties	(revision )
@@ -0,0 +1,6 @@
+#Thu May 24 17:02:10 GMT+08:00 2018
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.1-all.zip
Index: app/src/main/java/hshealthy/cn/com/util/ToastUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/ToastUtils.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/ToastUtils.java	(revision )
@@ -0,0 +1,369 @@
+package hshealthy.cn.com.util;
+
+import android.content.Context;
+import android.os.Handler;
+import android.os.Looper;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.ImageView;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.bumptech.glide.Glide;
+
+/**
+ * Tips:通用Util整理
+ */
+
+public class ToastUtils {
+
+    private ToastUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    private static Toast mToast;
+
+    private static Handler sHandler = new Handler(Looper.getMainLooper());
+    private static boolean isJumpWhenMore;
+
+    /**
+     * toast show
+     * @param msg
+     */
+    public static void showToast(String msg){
+        showToast(msg,Toast.LENGTH_SHORT);
+    }
+
+    public static void showToast(String msg, int dur){
+        if (mToast != null)
+            mToast.cancel();
+//            mToast=Toast.makeText(HstationInstance.C(),msg,dur);
+            mToast.show();
+    }
+
+
+    /**
+     * 吐司初始化
+     *
+     * @param isJumpWhenMore 当连续弹出吐司时，是要弹出新吐司还是只修改文本内容
+     *                       <p>{@code true}: 弹出新吐司<br>{@code false}: 只修改文本内容</p>
+     *                       <p>如果为{@code false}的话可用来做显示任意时长的吐司</p>
+     */
+    public static void init(boolean isJumpWhenMore) {
+        ToastUtils.isJumpWhenMore = isJumpWhenMore;
+    }
+
+    /**
+     * 安全地显示短时吐司
+     *
+     * @param context 上下文
+     * @param text    文本
+     */
+    public static void showShortToastSafe(final Context context, final CharSequence text) {
+        sHandler.post(new Runnable() {
+            @Override
+            public void run() {
+                showToast(context, text, Toast.LENGTH_SHORT);
+            }
+        });
+    }
+
+    /**
+     * 安全地显示短时吐司
+     *
+     * @param context 上下文
+     * @param resId   资源Id
+     */
+    public static void showShortToastSafe(final Context context, final int resId) {
+        sHandler.post(new Runnable() {
+            @Override
+            public void run() {
+                showToast(context, resId, Toast.LENGTH_SHORT);
+            }
+        });
+    }
+
+    /**
+     * 安全地显示短时吐司
+     *
+     * @param context 上下文
+     * @param resId   资源Id
+     * @param args    参数
+     */
+    public static void showShortToastSafe(final Context context, final int resId, final Object... args) {
+        sHandler.post(new Runnable() {
+            @Override
+            public void run() {
+                showToast(context, resId, Toast.LENGTH_SHORT, args);
+            }
+        });
+    }
+
+
+    /**
+     * 安全地显示长时吐司
+     *
+     * @param context 上下文
+     * @param text    文本
+     */
+    public static void showLongToastSafe(final Context context, final CharSequence text) {
+        sHandler.post(new Runnable() {
+            @Override
+            public void run() {
+                showToast(context, text, Toast.LENGTH_LONG);
+            }
+        });
+    }
+
+    /**
+     * 安全地显示长时吐司
+     *
+     * @param context 上下文
+     * @param resId   资源Id
+     */
+    public static void showLongToastSafe(final Context context, final int resId) {
+        sHandler.post(new Runnable() {
+            @Override
+            public void run() {
+                showToast(context, resId, Toast.LENGTH_LONG);
+            }
+        });
+    }
+
+    /**
+     * 安全地显示长时吐司
+     *
+     * @param context 上下文
+     * @param resId   资源Id
+     * @param args    参数
+     */
+    public static void showLongToastSafe(final Context context, final int resId, final Object... args) {
+        sHandler.post(new Runnable() {
+            @Override
+            public void run() {
+                showToast(context, resId, Toast.LENGTH_LONG, args);
+            }
+        });
+    }
+
+
+    /**
+     * 显示短时吐司
+     *
+     * @param context 上下文
+     * @param text    文本
+     */
+    public static void showShortToast(Context context, CharSequence text) {
+        showToast(context, text, Toast.LENGTH_SHORT);
+    }
+
+    /**
+     * 显示短时吐司
+     *
+     * @param context 上下文
+     * @param resId   资源Id
+     */
+    public static void showShortToast(Context context, int resId) {
+        showToast(context, resId, Toast.LENGTH_SHORT);
+    }
+
+    /**
+     * 显示短时吐司
+     *
+     * @param context 上下文
+     * @param resId   资源Id
+     * @param args    参数
+     */
+    public static void showShortToast(Context context, int resId, Object... args) {
+        showToast(context, resId, Toast.LENGTH_SHORT, args);
+    }
+
+
+    /**
+     * 显示长时吐司
+     *
+     * @param context 上下文
+     * @param text    文本
+     */
+    public static void showLongToast(Context context, CharSequence text) {
+        showToast(context, text, Toast.LENGTH_LONG);
+    }
+
+    /**
+     * 显示长时吐司
+     *
+     * @param context 上下文
+     * @param resId   资源Id
+     */
+    public static void showLongToast(Context context, int resId) {
+        showToast(context, resId, Toast.LENGTH_LONG);
+    }
+
+    /**
+     * 显示长时吐司
+     *
+     * @param context 上下文
+     * @param resId   资源Id
+     * @param args    参数
+     */
+    public static void showLongToast(Context context, int resId, Object... args) {
+        showToast(context, resId, Toast.LENGTH_LONG, args);
+    }
+
+    /**
+     *
+     * @param context 上下文
+     * @param layoutId 布局文件id
+     * @param text  文字
+     * @param imgUrl 图片url
+     * @param duration 持续时间
+     */
+//    public static void showCustomToastIntegral(Context context,int layoutId,CharSequence text,String imgUrl,int duration ){
+//        LayoutInflater inflate = LayoutInflater.from(context);
+//        View v = inflate.inflate(layoutId, null);
+//        TextView tv= (TextView) v.findViewById(R.id.toast_text);
+//        ImageView iv= (ImageView) v.findViewById(R.id.toast_img);
+//        Glide.with(context).load(imgUrl).into(iv);
+//        tv.setText(text);
+//        Toast result = new Toast(context);
+//        result.setView(v);
+//        result.setGravity(Gravity.CENTER, 0, 0);
+//        result.setDuration(duration);
+//        result.show();
+//    }
+//    public static void showCustomToastIntegral(Context context,int layoutId,CharSequence text,int imgResId,int duration ){
+//        LayoutInflater inflate = LayoutInflater.from(context);
+//        View v = inflate.inflate(layoutId, null);
+//        TextView tv= (TextView) v.findViewById(R.id.toast_text);
+//        ImageView iv= (ImageView) v.findViewById(R.id.toast_img);
+//        iv.setImageResource(imgResId);
+//        tv.setText(text);
+//        Toast result = new Toast(context);
+//        result.setView(v);
+//        result.setGravity(Gravity.CENTER, 0, 0);
+//        result.setDuration(duration);
+//        result.show();
+//    }
+//    public static void showCustomToastIntegral(Context context,CharSequence text,int imgResId,int duration ){
+//        showCustomToastIntegral(context,R.layout.lb_hslib_toast_integral_layout,text,imgResId,duration);
+//    }
+//    public static void showCustomToastIntegral(Context context,CharSequence text,String imgUrl,int duration ){
+//        showCustomToastIntegral(context,R.layout.lb_hslib_toast_integral_layout,text,imgUrl,duration);
+//    }
+
+
+
+    /**
+     * 显示定制的吐司
+     *
+     * @param context        上下文
+     * @param customLayoutId 布局文件id
+     * @param resId          文字资源id
+     * @param imgResId       图片资源id
+     * @param duration       持续时间
+     */
+//    public static void showCustomToast(Context context, int customLayoutId, int resId, int imgResId, int duration) {
+//        showCustomToast(context, customLayoutId, context.getResources().getString(resId), imgResId, duration);
+//    }
+
+    /**
+     * 显示定制的吐司
+     *
+     * @param context        上下文
+     * @param customLayoutId 布局文件id
+     * @param text           文字
+     * @param imgResId       图片资源id
+     * @param duration       持续时间
+     */
+//    public static void showCustomToast(Context context, int customLayoutId, CharSequence text, int imgResId, int duration) {
+//        LayoutInflater inflate = (LayoutInflater)
+//                context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+//        View v = inflate.inflate(customLayoutId, null);
+//        TextView tv = (TextView) v.findViewById(R.id.toast_msg);
+//        tv.setText(text);
+//        ImageView iv = (ImageView) v.findViewById(R.id.toast_img);
+//        iv.setImageResource(imgResId);
+//        Toast result = new Toast(context);
+//        result.setView(v);
+//        result.setGravity(Gravity.CENTER, 0, 0);
+//        result.setDuration(duration);
+//        result.show();
+//    }
+
+    /**
+     * 显示定制的吐司
+     *
+     * @param context        上下文
+     * @param text           文字
+     * @param imgResId       图片资源id
+     * @param duration       持续时间
+     */
+//    public static void showCustomToast(Context context, CharSequence text, int imgResId, int duration) {
+//        showCustomToast(context, R.layout.lb_hslib_toast_custom_layout, text, imgResId, duration);
+//    }
+
+    /**
+     * 显示定制的吐司
+     *
+     * @param context        上下文
+     * @param resId          文字资源id
+     * @param imgResId       图片资源id
+     * @param duration       持续时间
+     */
+//    public static void showCustomToast(Context context, int resId, int imgResId, int duration) {
+//        showCustomToast(context, R.layout.lb_hslib_toast_custom_layout, resId, imgResId, duration);
+//    }
+
+    /**
+     * 显示吐司
+     *
+     * @param context  上下文
+     * @param text     文本
+     * @param duration 显示时长
+     */
+    private static void showToast(Context context, CharSequence text, int duration) {
+        if (isJumpWhenMore) cancelToast();
+        if (mToast == null) {
+            mToast = Toast.makeText(context.getApplicationContext(), text, duration);
+        } else {
+            mToast.setText(text);
+            mToast.setDuration(duration);
+        }
+        mToast.show();
+    }
+
+    /**
+     * 显示吐司
+     *
+     * @param context  上下文
+     * @param resId    资源Id
+     * @param duration 显示时长
+     */
+    private static void showToast(Context context, int resId, int duration) {
+        showToast(context, context.getResources().getText(resId).toString(), duration);
+    }
+
+    /**
+     * 显示吐司
+     *
+     * @param context  上下文
+     * @param resId    资源Id
+     * @param duration 显示时长
+     * @param args     参数
+     */
+    private static void showToast(Context context, int resId, int duration, Object... args) {
+        showToast(context, String.format(context.getResources().getString(resId), args), duration);
+    }
+
+
+    /**
+     * 取消吐司显示
+     */
+    public static void cancelToast() {
+        if (mToast != null) {
+            mToast.cancel();
+            mToast = null;
+        }
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/util/LogUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/LogUtils.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/LogUtils.java	(revision )
@@ -0,0 +1,43 @@
+package hshealthy.cn.com.util;
+
+import android.util.Log;
+
+
+/**
+ * LogUtils
+ * Created by gaosheng on 2016/7/29.
+ */
+
+public class LogUtils {
+
+    public static final boolean isDebug = true;// 打包发布时修改为false
+
+    /**
+     * 打印一个debug等级的 log
+     */
+    public static void d(String tag, String msg) {
+        if (isDebug) {
+            Log.d("jiemo_" + tag, msg);
+        }
+    }
+
+    /**
+     * 打印一个debug等级的 log
+     */
+    public static void e(String tag, String msg) {
+        if (isDebug) {
+            Log.e("jiemo_" + tag, msg);
+        }
+    }
+
+    /**
+     * 打印一个debug等级的 log
+     */
+    public static void e(Class cls, String msg) {
+        if (isDebug) {
+            Log.e("jiemo_" + cls.getSimpleName(), msg);
+        }
+    }
+
+
+}
Index: gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradlew.bat	(revision )
+++ gradlew.bat	(revision )
@@ -0,0 +1,90 @@
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windowz variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
Index: app/src/main/java/hshealthy/cn/com/base/BaseModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/base/BaseModel.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/base/BaseModel.java	(revision )
@@ -0,0 +1,18 @@
+package hshealthy.cn.com.base;
+
+
+import hshealthy.cn.com.http.Http;
+import hshealthy.cn.com.http.HttpService;
+
+/**
+ * MVP --> BaseModel
+ * Created by Administrator on 2016/12/15.
+ */
+public class BaseModel {
+    protected static HttpService httpService;
+
+    //初始化httpService
+    static {
+        httpService = Http.getHttpService();
+    }
+}
Index: app/src/main/res/drawable/bottom_shadow.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/bottom_shadow.xml	(revision )
+++ app/src/main/res/drawable/bottom_shadow.xml	(revision )
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <gradient
+        android:angle="90"
+        android:endColor="#0000"
+        android:startColor="#30000000"
+        android:type="linear"/>
+
+</shape>
\ No newline at end of file
Index: app/src/main/java/hshealthy/cn/com/presenter/LoginPresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/presenter/LoginPresenter.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/presenter/LoginPresenter.java	(revision )
@@ -0,0 +1,33 @@
+package hshealthy.cn.com.presenter;
+
+
+import hshealthy.cn.com.activity.LoginActivity;
+import hshealthy.cn.com.base.BasePresenter;
+import hshealthy.cn.com.model.modellmpl.LoginModellmpl;
+
+/**
+ * Created by 71443 on 2018/5/29.
+ * 登录presenter 控制层
+ */
+
+public class LoginPresenter extends BasePresenter<LoginModellmpl, LoginActivity> {
+
+    @Override
+    public LoginModellmpl loadModel() {
+        return new LoginModellmpl();
+    }
+
+    public void getLogin(String phone, String code) {
+        getModel().getlogin(phone, code, new LoginModellmpl.InfoHint() {
+            @Override
+            public void successInfo(String str) {
+
+            }
+
+            @Override
+            public void failInfo(String str) {
+
+            }
+        });
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/view/BottomNavigationViewHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/view/BottomNavigationViewHelper.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/view/BottomNavigationViewHelper.java	(revision )
@@ -0,0 +1,31 @@
+package hshealthy.cn.com.view;
+
+import android.support.design.internal.BottomNavigationItemView;
+import android.support.design.internal.BottomNavigationMenuView;
+import android.support.design.widget.BottomNavigationView;
+
+import java.lang.reflect.Field;
+
+// 利用反射，改变 item 中 mShiftingMode 的值
+public class BottomNavigationViewHelper {
+
+    public static void disableShiftMode(BottomNavigationView navigationView) {
+
+        BottomNavigationMenuView menuView = (BottomNavigationMenuView) navigationView.getChildAt(0);
+        try {
+            Field shiftingMode = menuView.getClass().getDeclaredField("mShiftingMode");
+            shiftingMode.setAccessible(true);
+            shiftingMode.setBoolean(menuView, false);
+            shiftingMode.setAccessible(false);
+
+            for (int i = 0; i < menuView.getChildCount(); i++) {
+                BottomNavigationItemView itemView = (BottomNavigationItemView) menuView.getChildAt(i);
+                itemView.setShiftingMode(false);
+                itemView.setChecked(itemView.getItemData().isChecked());
+            }
+
+        } catch (NoSuchFieldException | IllegalAccessException e) {
+            e.printStackTrace();
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/hshealthy/cn/com/digest/DecoderException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/digest/DecoderException.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/digest/DecoderException.java	(revision )
@@ -0,0 +1,12 @@
+package hshealthy.cn.com.digest;
+
+/**
+ * Created by chen.sun on 2017/9/27.
+ */
+public class DecoderException extends Exception {
+    private static final long serialVersionUID = 1L;
+
+    public DecoderException(String pMessage) {
+        super(pMessage);
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/fragment/BaseFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/fragment/BaseFragment.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/fragment/BaseFragment.java	(revision )
@@ -0,0 +1,38 @@
+package hshealthy.cn.com.fragment;
+
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.design.widget.Snackbar;
+import android.support.v4.app.Fragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import hshealthy.cn.com.R;
+
+
+public class BaseFragment extends Fragment {
+    public static BaseFragment newInstance(String info) {
+        Bundle args = new Bundle();
+        BaseFragment fragment = new BaseFragment();
+        args.putString("info", info);
+        fragment.setArguments(args);
+        return fragment;
+    }
+
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.fragment_base, null);
+        TextView tvInfo = (TextView) view.findViewById(R.id.textView);
+        tvInfo.setText(getArguments().getString("info"));
+        tvInfo.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Snackbar.make(v, "Don't click me.please!.", Snackbar.LENGTH_SHORT).show();
+            }
+        });
+        return view;
+    }
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision )
+++ .idea/misc.xml	(revision )
@@ -0,0 +1,115 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="NullableNotNullManager">
+    <option name="myDefaultNullable" value="android.support.annotation.Nullable" />
+    <option name="myDefaultNotNull" value="android.support.annotation.NonNull" />
+    <option name="myNullables">
+      <value>
+        <list size="4">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.Nullable" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nullable" />
+          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.Nullable" />
+          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.Nullable" />
+        </list>
+      </value>
+    </option>
+    <option name="myNotNulls">
+      <value>
+        <list size="4">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.NotNull" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nonnull" />
+          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.NonNull" />
+          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.NonNull" />
+        </list>
+      </value>
+    </option>
+  </component>
+  <component name="ProjectInspectionProfilesVisibleTreeState">
+    <entry key="Project Default">
+      <profile-state>
+        <expanded-state>
+          <State>
+            <id />
+          </State>
+          <State>
+            <id>C/C++</id>
+          </State>
+          <State>
+            <id>Class structureJava</id>
+          </State>
+          <State>
+            <id>Concurrency annotation issuesJava</id>
+          </State>
+          <State>
+            <id>General</id>
+          </State>
+          <State>
+            <id>Groovy</id>
+          </State>
+          <State>
+            <id>Java</id>
+          </State>
+          <State>
+            <id>Performance issuesJava</id>
+          </State>
+          <State>
+            <id>Probable bugsJava</id>
+          </State>
+          <State>
+            <id>Properties Files</id>
+          </State>
+          <State>
+            <id>Threading issuesGroovy</id>
+          </State>
+          <State>
+            <id>Threading issuesJava</id>
+          </State>
+          <State>
+            <id>Type checksC/C++</id>
+          </State>
+          <State>
+            <id>Unused codeC/C++</id>
+          </State>
+        </expanded-state>
+        <selected-state>
+          <State>
+            <id>Android</id>
+          </State>
+        </selected-state>
+      </profile-state>
+    </entry>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/build/classes" />
+  </component>
+  <component name="ProjectType">
+    <option name="id" value="Android" />
+  </component>
+  <component name="masterDetails">
+    <states>
+      <state key="ProjectJDKs.UI">
+        <settings>
+          <last-edited>1.8</last-edited>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.2" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+      <state key="ScopeChooserConfigurable.UI">
+        <settings>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.2" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+    </states>
+  </component>
+</project>
\ No newline at end of file
Index: app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.gitignore	(revision )
+++ app/.gitignore	(revision )
@@ -0,0 +1,1 @@
+/build
Index: app/src/main/java/hshealthy/cn/com/digest/DigestUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/digest/DigestUtils.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/digest/DigestUtils.java	(revision )
@@ -0,0 +1,62 @@
+package hshealthy.cn.com.digest;
+
+
+import java.security.MessageDigest;
+import java.security.NoSuchAlgorithmException;
+
+/**
+ * Created by chen.sun on 2017/9/27.
+ */
+
+public class DigestUtils {
+    public DigestUtils() {
+    }
+
+    static MessageDigest getDigest(String algorithm) {
+        try {
+            return MessageDigest.getInstance(algorithm);
+        } catch (NoSuchAlgorithmException var2) {
+            throw new RuntimeException(var2.getMessage());
+        }
+    }
+
+    private static MessageDigest getMd5Digest() {
+        return getDigest("MD5");
+    }
+
+    private static MessageDigest getShaDigest() {
+        return getDigest("SHA");
+    }
+
+    public static byte[] md5(byte[] data) {
+        return getMd5Digest().digest(data);
+    }
+
+    public static byte[] md5(String data) {
+        return md5(data.getBytes());
+    }
+
+    public static String md5Hex(byte[] data) {
+        return new String(Hex.encodeHex(md5(data)));
+    }
+
+    public static String md5Hex(String data) {
+        return new String(Hex.encodeHex(md5(data)));
+    }
+
+    public static byte[] sha(byte[] data) {
+        return getShaDigest().digest(data);
+    }
+
+    public static byte[] sha(String data) {
+        return sha(data.getBytes());
+    }
+
+    public static String shaHex(byte[] data) {
+        return new String(Hex.encodeHex(sha(data)));
+    }
+
+    public static String shaHex(String data) {
+        return new String(Hex.encodeHex(sha(data)));
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/bean/CustomerBean.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/bean/CustomerBean.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/bean/CustomerBean.java	(revision )
@@ -0,0 +1,12 @@
+package hshealthy.cn.com.bean;
+
+import java.io.Serializable;
+
+/**
+ * Created by 71443 on 2018/5/29.
+ * 用户信息
+ */
+
+public class CustomerBean implements Serializable {
+
+}
Index: app/src/main/java/hshealthy/cn/com/model/modellmpl/LoginModellmpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/model/modellmpl/LoginModellmpl.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/model/modellmpl/LoginModellmpl.java	(revision )
@@ -0,0 +1,50 @@
+package hshealthy.cn.com.model.modellmpl;
+
+import android.support.annotation.NonNull;
+
+import hshealthy.cn.com.MyApp;
+import hshealthy.cn.com.base.BaseModel;
+import hshealthy.cn.com.bean.CustomerBean;
+import hshealthy.cn.com.http.ApiException;
+import hshealthy.cn.com.http.CommonSubscriber;
+import hshealthy.cn.com.http.CommonTransformer;
+import hshealthy.cn.com.model.LoginModel;
+
+/**
+ * Created by 71443 on 2018/5/29.
+ */
+
+public class LoginModellmpl extends BaseModel implements LoginModel {
+
+    //存储数据，数据库，文件等
+    @Override
+    public void loginDB(CustomerBean customerBean) {
+
+    }
+
+    public void getlogin(@NonNull String phone , @NonNull String code ,final @NonNull InfoHint infoHint){
+
+        httpService.getIpInfo(phone ,code ).compose(new CommonTransformer<CustomerBean>())
+                .subscribe(new CommonSubscriber<CustomerBean>(MyApp.getAppContext()) {
+                    @Override
+                    public void onNext(CustomerBean bean) {
+                        infoHint.successInfo("");
+                    }
+
+                    @Override
+                    protected void onError(ApiException e) {
+                        super.onError(e);
+                        infoHint.failInfo(e.message);
+                    }
+
+                });
+    }
+
+    //通过接口产生信息回调
+    public interface InfoHint {
+        void successInfo(String str);
+
+        void failInfo(String str);
+
+    }
+}
Index: app/src/main/res/drawable/bottom_navigation_selector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/bottom_navigation_selector.xml	(revision )
+++ app/src/main/res/drawable/bottom_navigation_selector.xml	(revision )
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:color="@color/tab_checked" android:state_checked="true" />
+    <item android:color="@color/tab_unchecked" android:state_checked="false" />
+</selector>
\ No newline at end of file
Index: app/src/main/java/hshealthy/cn/com/model/LoginModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/model/LoginModel.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/model/LoginModel.java	(revision )
@@ -0,0 +1,14 @@
+package hshealthy.cn.com.model;
+
+
+import hshealthy.cn.com.bean.CustomerBean;
+
+/**
+ * Created by 71443 on 2018/5/29.
+ * （个人喜好，一般我会在model接口中定义数据库操作接口，当然最好放上网络操作和逻辑操作）
+ */
+
+public interface LoginModel  {
+    void loginDB(CustomerBean customerBean);
+
+}
Index: app/src/main/java/hshealthy/cn/com/api/HsHealthyInstance.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/api/HsHealthyInstance.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/api/HsHealthyInstance.java	(revision )
@@ -0,0 +1,30 @@
+package hshealthy.cn.com.api;
+
+import android.content.Context;
+
+import hshealthy.cn.com.model.CollectorBean;
+
+/**
+ * Created by 71443 on 2018/5/25.
+ * * Tips: 全局applicationcontext单例 ，防止static方法引用context导致内存泄漏
+ */
+
+public class HsHealthyInstance extends CollectorBean {
+    public static HsHealthyInstance hstationinstance = getInstance();
+
+    private static final class Holder {
+        private static final HsHealthyInstance HI = new HsHealthyInstance();
+    }
+
+    public static HsHealthyInstance getInstance() {
+        return Holder.HI;
+    }
+
+    private HsHealthyInstance() {
+    }
+
+    public static Context C() {
+        return Holder.HI.getContext();
+    }
+
+}
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/proguard-rules.pro	(revision )
+++ app/proguard-rules.pro	(revision )
@@ -0,0 +1,21 @@
+# Add project specific ProGuard rules here.
+# You can control the set of applied configuration files using the
+# proguardFiles setting in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
Index: app/src/main/java/hshealthy/cn/com/util/ConvertUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/ConvertUtils.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/ConvertUtils.java	(revision )
@@ -0,0 +1,57 @@
+package hshealthy.cn.com.util;
+
+import android.content.Context;
+
+import java.io.UnsupportedEncodingException;
+import java.net.URLEncoder;
+import java.util.Iterator;
+import java.util.Map;
+import java.util.Map.Entry;
+
+public class ConvertUtils {
+
+    /**
+     * dp转px
+     *
+     * @param context 上下文
+     * @param dpValue dp值
+     * @return px值
+     */
+    public static int dp2px(Context context, float dpValue) {
+        final float scale = context.getResources().getDisplayMetrics().density;
+        return (int) (dpValue * scale + 0.5f);
+    }
+
+    /**
+     * px转dp
+     *
+     * @param context
+     * @param pxVal
+     * @return
+     */
+    public static float px2dp(Context context, float pxVal)
+    {
+        final float scale = context.getResources().getDisplayMetrics().density;
+        return (pxVal / scale);
+    }
+
+    public static byte[] encodeParameters(Map<String, String> params, String paramsEncoding) {
+        StringBuilder encodedParams = new StringBuilder();
+
+        try {
+            Iterator var4 = params.entrySet().iterator();
+
+            while(var4.hasNext()) {
+                Entry<String, String> entry = (Entry)var4.next();
+                encodedParams.append(URLEncoder.encode(entry.getKey(), paramsEncoding));
+                encodedParams.append('=');
+                encodedParams.append(URLEncoder.encode(entry.getValue(), paramsEncoding));
+                encodedParams.append('&');
+            }
+
+            return encodedParams.toString().getBytes(paramsEncoding);
+        } catch (UnsupportedEncodingException var6) {
+            throw new RuntimeException("Encoding not supported: " + paramsEncoding, var6);
+        }
+    }
+}
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision )
+++ .idea/vcs.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- gradle.properties	(revision )
+++ gradle.properties	(revision )
@@ -0,0 +1,25 @@
+# Project-wide Gradle settings.
+
+# IDE (e.g. Android Studio) users:
+# Gradle settings configured through the IDE *will override*
+# any settings specified in this file.
+
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+org.gradle.jvmargs=-Xmx1536m
+
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. More details, visit
+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
+# org.gradle.parallel=true
+
+#dependencies配置
+ANDROID_SUPPORT_VERSION=25.3.1
+OK_HTTP_VERSION=3.4.1
+GLIDE_VERSION_4=4.0.0
+GLIDE_VERSION_3=3.7.0
+ANDROID_GRADLE_VERSION=2.3.3
+ANDROID_MAVEN_GRADLE_PLUGIN=2.0
\ No newline at end of file
Index: app/src/main/java/hshealthy/cn/com/util/ConstUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/ConstUtils.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/ConstUtils.java	(revision )
@@ -0,0 +1,46 @@
+package hshealthy.cn.com.util;
+
+/*
+ * @创建者     master
+ * @描述       常量相关工具类
+ *
+ * @更新者     $Author$
+ * @更新时间   $Date$
+ * @更新描述
+ */
+public class ConstUtils {
+
+    private ConstUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+
+    /******************** 正则相关常量 ********************/
+
+    //手机号表达式
+    public  static final String MOBILE_SIMPLE = "^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|(147))\\d{8}$";
+
+    /**
+     * 正则：IP地址
+     */
+    public static final String REGEX_IP  = "((2[0-4]\\d|25[0-5]|[01]?\\d\\d?)\\.){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)";
+    /**
+     * 正则：URL
+     */
+    public static final String REGEX_URL= "[a-zA-z]+://[^\\s]*";
+    /**
+     * 正则：汉字
+     */
+    public static final String REGEX_ZH = "^[\\u4e00-\\u9fa5]+$";
+
+    /**
+     * 正则：字母和数字
+     */
+    public static final String REGEX_NUMBERLETTER= "[^0-9a-zA-Z]";
+
+    /**
+     * 正则：特殊符号
+     */
+    public static final String REGEX_SPECIALCHARACTER = "[`~!@#$%^&*()+=|{}':;',\\[\\].<>?~！@#￥%……&*（）——+|{}【】‘；：”“’。，、？]";
+
+}
\ No newline at end of file
Index: app/src/main/java/hshealthy/cn/com/util/StringUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/StringUtils.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/StringUtils.java	(revision )
@@ -0,0 +1,321 @@
+package hshealthy.cn.com.util;
+
+import android.text.SpannableString;
+import android.text.Spanned;
+import android.text.TextUtils;
+import android.text.style.RelativeSizeSpan;
+
+
+import java.net.URLDecoder;
+import java.net.URLEncoder;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+/*
+ * @描述       字符串相关工具类
+ *
+ * @更新者     $Author$
+ * @更新时间   $Date$
+ * @更新描述
+ */
+public class StringUtils {
+
+    private StringUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 移除空格
+     *
+     * @param s 待校验字符串
+     * @return {@code true}: 空<br> {@code false}: 不为空
+     */
+    public static String  removeEmptyChar(String s) {
+        return s.replaceAll(" ", "");
+    }
+
+    /**
+     * 判断字符串是否为null或长度为0
+     *
+     * @param s 待校验字符串
+     * @return {@code true}: 空<br> {@code false}: 不为空
+     */
+    public static boolean isEmpty(CharSequence s) {
+        return s == null || s.length() == 0;
+    }
+
+    /**
+     * 判断字符串是否为null或全为空格
+     *
+     * @param s 待校验字符串
+     * @return {@code true}: null或全空格<br> {@code false}: 不为null且不全空格
+     */
+    public static boolean isSpace(String s) {
+        return (s == null || s.trim().length() == 0);
+    }
+
+
+
+    /**
+     * 判断两字符串忽略大小写是否相等
+     *
+     * @param a 待校验字符串a
+     * @param b 待校验字符串b
+     * @return {@code true}: 相等<br>{@code false}: 不相等
+     */
+    public static boolean equalsIgnoreCase(String a, String b) {
+        return (a == b) || (b != null) && (a.length() == b.length()) && a.regionMatches(true, 0, b, 0, b.length());
+    }
+
+    /**
+     *  字符串编码
+     */
+    public static String  getStrEncode(String str) {
+
+        try {
+           return URLEncoder.encode(str,"UTF-8");
+        }catch (Exception e){
+            e.printStackTrace();
+        }
+           return "";
+    }
+    /**
+     *  字符串解码
+     */
+    public static String  getStrDecode(String str){
+        try {
+        return  URLDecoder.decode(str, "UTF-8");
+        }catch (Exception e){
+            e.printStackTrace();
+        }
+        return "";
+    }
+
+    /**
+     * null转为长度为0的字符串
+     *
+     * @param s 待转字符串
+     * @return s为null转为长度为0字符串，否则不改变
+     */
+    public static String null2Length0(String s) {
+        return s == null ? "" : s;
+    }
+
+    /**
+     * 返回字符串长度
+     *
+     * @param s 字符串
+     * @return null返回0，其他返回自身长度
+     */
+    public static int length(CharSequence s) {
+        return s == null ? 0 : s.length();
+    }
+
+    /**
+     * 首字母大写
+     *
+     * @param s 待转字符串
+     * @return 首字母大写字符串
+     */
+    public static String upperFirstLetter(String s) {
+        if (isEmpty(s) || !Character.isLowerCase(s.charAt(0))) return s;
+        return String.valueOf((char) (s.charAt(0) - 32)) + s.substring(1);
+    }
+
+    /**
+     * 首字母小写
+     *
+     * @param s 待转字符串
+     * @return 首字母小写字符串
+     */
+    public static String lowerFirstLetter(String s) {
+        if (isEmpty(s) || !Character.isUpperCase(s.charAt(0))) {
+            return s;
+        }
+        return String.valueOf((char) (s.charAt(0) + 32)) + s.substring(1);
+    }
+
+    /**
+     * 转化为半角字符
+     *
+     * @param s 待转字符串
+     * @return 半角字符串
+     */
+    public static String toDBC(String s) {
+        if (isEmpty(s)) {
+            return s;
+        }
+        char[] chars = s.toCharArray();
+        for (int i = 0, len = chars.length; i < len; i++) {
+            if (chars[i] == 12288) {
+                chars[i] = ' ';
+            } else if (65281 <= chars[i] && chars[i] <= 65374) {
+                chars[i] = (char) (chars[i] - 65248);
+            } else {
+                chars[i] = chars[i];
+            }
+        }
+        return new String(chars);
+    }
+
+    /**
+     * 转化为全角字符
+     *
+     * @param s 待转字符串
+     * @return 全角字符串
+     */
+    public static String toSBC(String s) {
+        if (isEmpty(s)) {
+            return s;
+        }
+        char[] chars = s.toCharArray();
+        for (int i = 0, len = chars.length; i < len; i++) {
+            if (chars[i] == ' ') {
+                chars[i] = (char) 12288;
+            } else if (33 <= chars[i] && chars[i] <= 126) {
+                chars[i] = (char) (chars[i] + 65248);
+            } else {
+                chars[i] = chars[i];
+            }
+        }
+        return new String(chars);
+    }
+
+    /**
+     * SpannableString 使一个textView展示不同文字大小
+     */
+    public static SpannableString formatTextSize(String textString, int whichNum) {
+        /**
+         * SpannableString 使一个textView展示不同文字大小 new RelativeSizeSpan(0.8f)代表正常字体的0.8倍
+         */
+        SpannableString spannableString = new SpannableString(textString);
+        spannableString.setSpan(new RelativeSizeSpan(0.8f), textString.length() - whichNum, textString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
+        return spannableString;
+    }
+
+    public static boolean equals(String constant,String newString) {
+        return constant != null && constant.equals(newString);
+    }
+
+    public static boolean isEmpty(String str) {
+        return TextUtils.isEmpty(str);
+    }
+
+    /**
+     * 过滤除数字和字母之外的其它字符
+     */
+    public static String replaceChar(String str) {
+        return   str.replaceAll(ConstUtils.REGEX_NUMBERLETTER,"");
+    }
+
+    /**
+     * 是否含有特殊符号
+     *
+     * @param str 待验证的字符串
+     * @return 是否含有特殊符号
+     */
+    public static boolean hasSpecialCharacter(String str) {
+        String regEx = ConstUtils.REGEX_SPECIALCHARACTER;
+        Pattern p = Pattern.compile(regEx);
+        Matcher m = p.matcher(str);
+        return m.find();
+    }
+
+    /**
+     * null转String
+     * @param str
+     * @return
+     */
+    public static String nullOfString(String str) {
+        if (str == null) {
+            str = "";
+        }
+        return str;
+    }
+
+    /**
+     * String转Int
+     * @param str
+     * @return
+     */
+    public static int stringToInt(String str) {
+        int i = 0;
+        if (str != null) {
+            try {
+                i = Integer.parseInt(str.trim());
+            } catch (Exception e) {
+                i = 0;
+            }
+
+        } else {
+            i = 0;
+        }
+        return i;
+    }
+
+    /**
+     * Int转String
+     * @param i
+     * @return
+     */
+    public static String intToString(int i) {
+        String str = "";
+        try {
+            str = String.valueOf(i);
+        } catch (Exception e) {
+            str = "";
+        }
+        return str;
+    }
+
+//    public static boolean checkParamsLegal(HstationSource mHstationSource) {
+//
+//        String tipMsg = "";
+//        if(mHstationSource==null){
+//            tipMsg = "数据不能为空!";
+////            ToastUtils.showToast(tipMsg);
+//            return false;
+//        }
+//
+//        if (TextUtils.isEmpty(mHstationSource.getMobile())) {
+//            tipMsg = "手机号不能为空!";
+////            ToastUtils.showToast(tipMsg);
+//            return false;
+//        } else if (mHstationSource.getMobile().length() != 11) {
+//            tipMsg = "手机号位数不对!";
+////            ToastUtils.showToast(tipMsg);
+//            return false;
+//        }
+//
+//        if (TextUtils.isEmpty(mHstationSource.getChannel())) {
+//            tipMsg = "渠道标识不能为空!";
+////            ToastUtils.showToast(tipMsg);
+//            return false;
+//        }
+//
+//        if (TextUtils.isEmpty(mHstationSource.getUid())) {
+//            tipMsg = "uid不能为空!";
+////            ToastUtils.showToast(tipMsg);
+//            return false;
+//        }
+//
+//        return true;
+//    }
+    public static boolean isNullEmpty(String str){
+        if(str!=null&&str.length()>0){
+            return false;
+        }
+        return true;
+    }
+    public static List<Integer[]> filterWithStr(String string ,String str){
+        List<Integer[]> temp =new ArrayList<>();
+        Pattern pattern = Pattern.compile(str);
+        Matcher matcher = pattern.matcher(string);
+        while (matcher.find()) {
+            temp.add(new Integer[]{matcher.start(),matcher.end()});
+        }
+        return temp;
+    }
+}
\ No newline at end of file
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitignore	(revision )
+++ .gitignore	(revision )
@@ -0,0 +1,9 @@
+*.iml
+.gradle
+/local.properties
+/.idea/workspace.xml
+/.idea/libraries
+.DS_Store
+/build
+/captures
+.externalNativeBuild
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision )
+++ app/src/main/res/values/styles.xml	(revision )
@@ -0,0 +1,11 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+</resources>
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision )
+++ build.gradle	(revision )
@@ -0,0 +1,27 @@
+// Top-level build file where you can add configuration options common to all sub-projects/modules.
+
+buildscript {
+    
+    repositories {
+        google()
+        jcenter()
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:3.0.1'
+        
+
+        // NOTE: Do not place your application dependencies here; they belong
+        // in the individual module build.gradle files
+    }
+}
+
+allprojects {
+    repositories {
+        google()
+        jcenter()
+    }
+}
+
+task clean(type: Delete) {
+    delete rootProject.buildDir
+}
Index: app/src/main/java/hshealthy/cn/com/util/JsonUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/JsonUtils.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/JsonUtils.java	(revision )
@@ -0,0 +1,366 @@
+package hshealthy.cn.com.util;
+
+/**
+ * Created by chen.sun on 2017/10/25.
+ */
+
+import com.alibaba.fastjson.JSON;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+import org.json.JSONTokener;
+
+import java.lang.reflect.Array;
+import java.math.BigDecimal;
+import java.math.BigInteger;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+
+/**
+ * @Description:主要功能:Json工具类
+ */
+
+public class JsonUtils {
+
+    /**
+     * Map转为JSONObject
+     * @param data
+     * @return
+     */
+    public static JSONObject map2Json(Map<?, ?> data) {
+        JSONObject object = new JSONObject();
+
+        for (Map.Entry<?, ?> entry : data.entrySet()) {
+            String key = (String) entry.getKey();
+            if (key == null) {
+                throw new NullPointerException("key == null");
+            }
+            try {
+                object.put(key, wrap(entry.getValue()));
+            } catch (JSONException e) {
+                e.printStackTrace();
+            }
+        }
+
+        return object;
+    }
+
+    /**
+     * 集合转换为JSONArray
+     * @param data
+     * @return
+     */
+    public static JSONArray collection2Json(Collection<?> data) {
+        JSONArray jsonArray = new JSONArray();
+        if (data != null) {
+            for (Object aData : data) {
+                jsonArray.put(wrap(aData));
+            }
+        }
+        return jsonArray;
+    }
+
+    /**
+     * ArrayList转换为JSONArray
+     * @param data
+     * @return
+     */
+    public static JSONArray arrayList2Json(ArrayList<?> data) {
+        JSONArray jsonArray = new JSONArray();
+        if (data != null) {
+            for (Object aData : data) {
+                jsonArray.put(wrap(aData));
+            }
+        }
+        return jsonArray;
+    }
+
+    /**
+     * string对象转换为List
+     * @param string
+     * @return
+     * @throws JSONException
+     */
+    public  static  List<?>  string2arrayList(String string) throws JSONException {
+        ArrayList<Object> list = new ArrayList<>();
+        JSONObject jsonobject=JsonUtils.string2JSONObject(string);
+//        for (int i = 0; i < jsonobject.length(); i++) {
+//            JSONObject jo = (JSONObject) jsonobject.getJ;
+//
+//
+////            marketXml.append(jo.get(''name'"));
+////            System.out.println(marketXml.toString());
+//        }
+        JSONArray  jsonarray=jsonobject.getJSONArray("records");
+
+        for (int i=0; i<jsonarray.length(); i++) {
+            list.add(jsonarray.get(i));
+        }
+
+        return    list;
+    }
+
+    /**
+     * Object对象转换为JSONArray
+     * @param data
+     * @return
+     * @throws JSONException
+     */
+    public static JSONArray object2Json(Object data) throws JSONException {
+        if (!data.getClass().isArray()) {
+            throw new JSONException("Not a primitive data: " + data.getClass());
+        }
+        final int length = Array.getLength(data);
+        JSONArray jsonArray = new JSONArray();
+        for (int i = 0; i < length; ++i) {
+            jsonArray.put(wrap(Array.get(data, i)));
+        }
+
+        return jsonArray;
+    }
+
+    private static Object wrap(Object o) {
+        if (o == null) {
+            return null;
+        }
+        if (o instanceof JSONArray || o instanceof JSONObject) {
+            return o;
+        }
+        try {
+            if (o instanceof Collection) {
+                return collection2Json((Collection<?>) o);
+            } else if (o.getClass().isArray()) {
+                return object2Json(o);
+            }
+            if (o instanceof Map) {
+                return map2Json((Map<?, ?>) o);
+            }
+
+            if (o instanceof Boolean || o instanceof Byte || o instanceof Character || o instanceof Double || o instanceof Float || o instanceof Integer || o instanceof Long
+                    || o instanceof Short || o instanceof String) {
+                return o;
+            }
+            if (o.getClass().getPackage().getName().startsWith("java.")) {
+                return o.toString();
+            }
+        } catch (Exception ignored) {
+        }
+        return null;
+    }
+
+    /**
+     * json字符串生成JSONObject对象
+     * @param json
+     * @return
+     */
+    public static JSONObject string2JSONObject(String json) {
+        JSONObject jsonObject = null;
+        try {
+            JSONTokener jsonParser = new JSONTokener(json);
+            jsonObject = (JSONObject) jsonParser.nextValue();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return jsonObject;
+    }
+
+    /**
+     * 对象转换为Json
+     * @param obj
+     * @return
+     */
+    public static String object2json(Object obj) {
+        StringBuilder json = new StringBuilder();
+        if (obj == null) {
+            json.append("\"\"");
+        } else if (obj instanceof String || obj instanceof Integer
+                || obj instanceof Float || obj instanceof Boolean
+                || obj instanceof Short || obj instanceof Double
+                || obj instanceof Long || obj instanceof BigDecimal
+                || obj instanceof BigInteger || obj instanceof Byte) {
+            json.append("\"").append(string2json(obj.toString())).append("\"");
+        } else if (obj instanceof Object[]) {
+            json.append(array2json((Object[]) obj));
+        } else if (obj instanceof List) {
+            json.append(list2json((List<?>) obj));
+        } else if (obj instanceof Map) {
+            json.append(map2json((Map<?, ?>) obj));
+        } else if (obj instanceof Set) {
+            json.append(set2json((Set<?>) obj));
+        }
+        return json.toString();
+    }
+
+    /**
+     * List集合转换为Json
+     * @param list
+     * @return
+     */
+    public static String list2json(List<?> list) {
+        StringBuilder json = new StringBuilder();
+        json.append("[");
+        if (list != null && list.size() > 0) {
+            for (Object obj : list) {
+                json.append(object2json(obj));
+                json.append(",");
+            }
+            json.setCharAt(json.length() - 1, ']');
+        } else {
+            json.append("]");
+        }
+        return json.toString();
+    }
+
+    /**
+     * 对象数组转换为Json
+     * @param array
+     * @return
+     */
+    public static String array2json(Object[] array) {
+        StringBuilder json = new StringBuilder();
+        json.append("[");
+        if (array != null && array.length > 0) {
+            for (Object obj : array) {
+                json.append(object2json(obj));
+                json.append(",");
+            }
+            json.setCharAt(json.length() - 1, ']');
+        } else {
+            json.append("]");
+        }
+        return json.toString();
+    }
+
+    /**
+     * Map集合转换为Json
+     * @param map
+     * @return
+     */
+    public static String map2json(Map<?, ?> map) {
+        StringBuilder json = new StringBuilder();
+        json.append("{");
+        if (map != null && map.size() > 0) {
+            for (Object key : map.keySet()) {
+                json.append(object2json(key));
+                json.append(":");
+                json.append(object2json(map.get(key)));
+                json.append(",");
+            }
+            json.setCharAt(json.length() - 1, '}');
+        } else {
+            json.append("}");
+        }
+        return json.toString();
+    }
+
+    /**
+     * Set集合转为Json
+     * @param set
+     * @return
+     */
+    public static String set2json(Set<?> set) {
+        StringBuilder json = new StringBuilder();
+        json.append("[");
+        if (set != null && set.size() > 0) {
+            for (Object obj : set) {
+                json.append(object2json(obj));
+                json.append(",");
+            }
+            json.setCharAt(json.length() - 1, ']');
+        } else {
+            json.append("]");
+        }
+        return json.toString();
+    }
+
+    /**
+     * 字符串转换为Json
+     * @param s
+     * @return
+     */
+    public static String string2json(String s) {
+        if (s == null)
+            return "";
+        StringBuilder sb = new StringBuilder();
+        for (int i = 0; i < s.length(); i++) {
+            char ch = s.charAt(i);
+            switch (ch) {
+                case '"':
+                    sb.append("\\\"");
+                    break;
+                case '\\':
+                    sb.append("\\\\");
+                    break;
+                case '\b':
+                    sb.append("\\b");
+                    break;
+                case '\f':
+                    sb.append("\\f");
+                    break;
+                case '\n':
+                    sb.append("\\n");
+                    break;
+                case '\r':
+                    sb.append("\\r");
+                    break;
+                case '\t':
+                    sb.append("\\t");
+                    break;
+                case '/':
+                    sb.append("\\/");
+                    break;
+                default:
+                    if (ch >= '\u0000' && ch <= '\u001F') {
+                        String ss = Integer.toHexString(ch);
+                        sb.append("\\u");
+                        for (int k = 0; k < 4 - ss.length(); k++) {
+                            sb.append('0');
+                        }
+                        sb.append(ss.toUpperCase());
+                    } else {
+                        sb.append(ch);
+                    }
+            }
+        }
+        return sb.toString();
+    }
+
+
+    public static final <T> T parseObject(String text, Class<T> clazz) {
+        return JSON.parseObject(text, clazz);
+    }
+
+    public static final String toJSONString(Object object) {
+        return JSON.toJSONString(object);
+    }
+
+    public static final <T> List<T> parseArray(String text, Class<T> clazz) {
+        return JSON.parseArray(text,clazz);
+    }
+
+    /**
+     * 对象转json
+     * @param obj
+     * @return
+     */
+//    public static String toJson(Object obj) {
+//        Gson gson = new Gson();
+//        return gson.toJson(obj);
+//    }
+//
+//    /**
+//     * json转对象
+//     * @param str
+//     * @param type
+//     * @param <T>
+//     * @return
+//     */
+//    public static <T> T fromJson(String str, Class<T> type) {
+//        Gson gson = new Gson();
+//        return gson.fromJson(str, type);
+//    }
+}
\ No newline at end of file
Index: app/src/main/java/hshealthy/cn/com/http/Http.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/http/Http.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/http/Http.java	(revision )
@@ -0,0 +1,175 @@
+package hshealthy.cn.com.http;
+
+
+import java.io.File;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Set;
+import java.util.concurrent.TimeUnit;
+
+import hshealthy.cn.com.MyApp;
+import hshealthy.cn.com.api.UrlHelper;
+import hshealthy.cn.com.digest.DigestUtils;
+import hshealthy.cn.com.util.MD5Utils;
+import hshealthy.cn.com.util.NetworkUtil;
+import hshealthy.cn.com.util.SpUtils;
+import okhttp3.Cache;
+import okhttp3.CacheControl;
+import okhttp3.FormBody;
+import okhttp3.HttpUrl;
+import okhttp3.Interceptor;
+import okhttp3.OkHttpClient;
+import okhttp3.Request;
+import okhttp3.Response;
+import okhttp3.logging.HttpLoggingInterceptor;
+import retrofit2.Retrofit;
+import retrofit2.adapter.rxjava.RxJavaCallAdapterFactory;
+import retrofit2.converter.gson.GsonConverterFactory;
+
+/**
+ * Http
+ */
+public class Http {
+
+    private static OkHttpClient client;
+    private static HttpService httpService;
+    private static Retrofit retrofit;
+
+    /**
+     * @return retrofit的底层利用反射的方式, 获取所有的api接口的类
+     */
+    public static HttpService getHttpService() {
+        if (httpService == null) {
+            httpService = getRetrofit().create(HttpService.class);
+        }
+        return httpService;
+    }
+
+
+    /**
+     * 设置公共参数
+     */
+    private static Interceptor addQueryParameterInterceptor() {
+        Interceptor addQueryParameterInterceptor = new Interceptor() {
+            @Override
+            public Response intercept(Chain chain) throws IOException {
+                Request originalRequest = chain.request();
+                Request request;
+                HttpUrl httpUrl = originalRequest.url().newBuilder()
+                        // Provide your custom parameter here
+                        .addQueryParameter("version","" )
+                        .addQueryParameter("timestamp", String.valueOf(System.currentTimeMillis()))
+                        .build();
+                //添加签名
+//                Set<String> nameSet = httpUrl.queryParameterNames();
+//                ArrayList<String> nameList = new ArrayList<>();
+//                nameList.addAll(nameSet);
+//                Collections.sort(nameList);
+//                StringBuilder buffer = new StringBuilder();
+//                for (int i = 0; i < nameList.size(); i++) {
+//                    buffer.append("&").append(nameList.get(i)).append("=").append(httpUrl.queryParameterValues(nameList.get(i)) != null &&
+//                            httpUrl.queryParameterValues(nameList.get(i)).size() > 0 ? httpUrl.queryParameterValues(nameList.get(i)).get(0) : "");
+//                }
+//                httpUrl = httpUrl.newBuilder()
+//                        .addQueryParameter("sign", DigestUtils.md5Hex((buffer.toString())))
+//                        .build();
+
+                request = originalRequest.newBuilder().url(httpUrl).build();
+                return chain.proceed(request);
+            }
+        };
+        return addQueryParameterInterceptor;
+    }
+    /**
+     * 设置头
+     */
+    private static Interceptor addHeaderInterceptor() {
+        Interceptor headerInterceptor = new Interceptor() {
+            @Override
+            public Response intercept(Chain chain) throws IOException {
+                Request originalRequest = chain.request();
+                Request.Builder requestBuilder = originalRequest.newBuilder()
+                        .addHeader("token","")
+                        .method(originalRequest.method(), originalRequest.body());
+                Request request = requestBuilder.build();
+                return chain.proceed(request);
+            }
+        };
+        return headerInterceptor;
+    }
+
+    /**
+     * 设置缓存
+     */
+    private static Interceptor addCacheInterceptor() {
+        Interceptor cacheInterceptor = new Interceptor() {
+            @Override
+            public Response intercept(Chain chain) throws IOException {
+                Request request = chain.request();
+                if (!NetworkUtil.isNetworkAvailable(MyApp.getAppContext())) {
+                    request = request.newBuilder()
+                            .cacheControl(CacheControl.FORCE_CACHE)
+                            .build();
+                }
+                Response response = chain.proceed(request);
+                if (NetworkUtil.isNetworkAvailable(MyApp.getAppContext())) {
+                    int maxAge = 0;
+                    // 有网络时 设置缓存超时时间0个小时 ,意思就是不读取缓存数据,只对get有用,post没有缓冲
+                    response.newBuilder()
+                            .header("Cache-Control", "public, max-age=" + maxAge)
+                            .removeHeader("Retrofit")// 清除头信息，因为服务器如果不支持，会返回一些干扰信息，不清除下面无法生效
+                            .build();
+                } else {
+                    // 无网络时，设置超时为4周  只对get有用,post没有缓冲
+                    int maxStale = 60 * 60 * 24 * 28;
+                    response.newBuilder()
+                            .header("Cache-Control", "public, only-if-cached, max-stale=" + maxStale)
+                            .removeHeader("nyn")
+                            .build();
+                }
+                return response;
+            }
+        };
+        return cacheInterceptor;
+    }
+
+    public static Retrofit getRetrofit() {
+        if (retrofit == null) {
+            synchronized (Http.class) {
+                if (retrofit == null) {
+                    //添加一个log拦截器,打印所有的log
+                    HttpLoggingInterceptor httpLoggingInterceptor = new HttpLoggingInterceptor();
+                    //可以设置请求过滤的水平,body,basic,headers
+                    httpLoggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);
+
+                    //设置 请求的缓存的大小跟位置
+                    File cacheFile = new File(MyApp.getAppContext().getCacheDir(), "cache");
+                    Cache cache = new Cache(cacheFile, 1024 * 1024 * 50); //50Mb 缓存的大小
+
+                    client = new OkHttpClient
+                            .Builder()
+                            .addInterceptor(addQueryParameterInterceptor())  //参数添加
+                            .addInterceptor(addHeaderInterceptor()) // token过滤
+                            .addInterceptor(httpLoggingInterceptor) //日志,所有的请求响应度看到
+                            .cache(cache)  //添加缓存
+                            .connectTimeout(60l, TimeUnit.SECONDS)
+                            .readTimeout(60l, TimeUnit.SECONDS)
+                            .writeTimeout(60l, TimeUnit.SECONDS)
+                            .build();
+
+                    // 获取retrofit的实例
+                    retrofit = new Retrofit
+                            .Builder()
+                            .baseUrl(UrlHelper.BASE_URL)  //自己配置
+                            .client(client)
+                            .addCallAdapterFactory(RxJavaCallAdapterFactory.create())
+                            .addConverterFactory(GsonConverterFactory.create()) //这里是用的fastjson的
+                            .build();
+                }
+            }
+        }
+        return retrofit;
+    }
+
+}
Index: app/src/main/java/hshealthy/cn/com/util/Base64Util.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/Base64Util.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/Base64Util.java	(revision )
@@ -0,0 +1,391 @@
+
+package hshealthy.cn.com.util;
+
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.util.Base64;
+
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.io.Writer;
+
+/**
+ * @author chen
+ *
+ */
+public class Base64Util {
+
+	private static final char S_BASE64CHAR[] = { 'A', 'B', 'C', 'D', 'E', 'F',
+			'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',
+			'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f',
+			'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',
+			't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5',
+			'6', '7', '8', '9', '+', '/' };
+//	private static final char S_BASE64PAD = 61;
+	private static final byte S_DECODETABLE[];
+
+	static {
+		S_DECODETABLE = new byte[128];
+		for (int i = 0; i < S_DECODETABLE.length; i++)
+			S_DECODETABLE[i] = 127;
+
+		for (int i = 0; i < S_BASE64CHAR.length; i++)
+			S_DECODETABLE[S_BASE64CHAR[i]] = (byte) i;
+
+	}
+
+	/**
+	 * 
+	 * @param ibuf
+	 * @param obuf
+	 * @param wp
+	 * @return
+	 */
+	private static int decode0(char ibuf[], byte obuf[], int wp) {
+		int outlen = 3;
+		if (ibuf[3] == '=')
+			outlen = 2;
+		if (ibuf[2] == '=')
+			outlen = 1;
+		int b0 = S_DECODETABLE[ibuf[0]];
+		int b1 = S_DECODETABLE[ibuf[1]];
+		int b2 = S_DECODETABLE[ibuf[2]];
+		int b3 = S_DECODETABLE[ibuf[3]];
+		switch (outlen) {
+		case 1: // '\001'
+			obuf[wp] = (byte) (b0 << 2 & 252 | b1 >> 4 & 3);
+			return 1;
+
+		case 2: // '\002'
+			obuf[wp++] = (byte) (b0 << 2 & 252 | b1 >> 4 & 3);
+			obuf[wp] = (byte) (b1 << 4 & 240 | b2 >> 2 & 15);
+			return 2;
+
+		case 3: // '\003'
+			obuf[wp++] = (byte) (b0 << 2 & 252 | b1 >> 4 & 3);
+			obuf[wp++] = (byte) (b1 << 4 & 240 | b2 >> 2 & 15);
+			obuf[wp] = (byte) (b2 << 6 & 192 | b3 & 63);
+			return 3;
+		}
+		throw new RuntimeException("Internal error");
+	}
+
+
+	public static Bitmap stringtoBitmap(String string){
+		//将字符串转换成Bitmap类型
+		Bitmap bitmap=null;
+		try {
+			byte[]bitmapArray;
+			bitmapArray= Base64.decode(string, Base64.DEFAULT);
+			bitmap= BitmapFactory.decodeByteArray(bitmapArray, 0, bitmapArray.length);
+		} catch (Exception e) {
+			e.printStackTrace();
+		}
+
+		return bitmap;
+	}
+
+	/**
+	 * 
+	 * @param data
+	 * @param off
+	 * @param len
+	 * @return
+	 */
+	public static byte[] decode(char data[], int off, int len) {
+		char ibuf[] = new char[4];
+		int ibufcount = 0;
+		byte obuf[] = new byte[(len / 4) * 3 + 3];
+		int obufcount = 0;
+		for (int i = off; i < off + len; i++) {
+			char ch = data[i];
+			if (ch != '='
+					&& (ch >= S_DECODETABLE.length || S_DECODETABLE[ch] == 127))
+				continue;
+			ibuf[ibufcount++] = ch;
+			if (ibufcount == ibuf.length) {
+				ibufcount = 0;
+				obufcount += decode0(ibuf, obuf, obufcount);
+			}
+		}
+
+		if (obufcount == obuf.length) {
+			return obuf;
+		} else {
+			byte ret[] = new byte[obufcount];
+			System.arraycopy(obuf, 0, ret, 0, obufcount);
+			return ret;
+		}
+	}
+
+	/**
+	 * 
+	 * @param data
+	 * @return
+	 */
+	public static byte[] decode(String data) {
+		char ibuf[] = new char[4];
+		int ibufcount = 0;
+		byte obuf[] = new byte[(data.length() / 4) * 3 + 3];
+		int obufcount = 0;
+		for (int i = 0; i < data.length(); i++) {
+			char ch = data.charAt(i);
+			if (ch != '='
+					&& (ch >= S_DECODETABLE.length || S_DECODETABLE[ch] == 127))
+				continue;
+			ibuf[ibufcount++] = ch;
+			if (ibufcount == ibuf.length) {
+				ibufcount = 0;
+				obufcount += decode0(ibuf, obuf, obufcount);
+			}
+		}
+
+		if (obufcount == obuf.length) {
+			return obuf;
+		} else {
+			byte ret[] = new byte[obufcount];
+			System.arraycopy(obuf, 0, ret, 0, obufcount);
+			return ret;
+		}
+	}
+
+	/**
+	 * 
+	 * @param data
+	 * @param off
+	 * @param len
+	 * @param ostream
+	 * @throws IOException
+	 */
+	public static void decode(char data[], int off, int len,
+			OutputStream ostream) throws IOException {
+		char ibuf[] = new char[4];
+		int ibufcount = 0;
+		byte obuf[] = new byte[3];
+		for (int i = off; i < off + len; i++) {
+			char ch = data[i];
+			if (ch != '='
+					&& (ch >= S_DECODETABLE.length || S_DECODETABLE[ch] == 127))
+				continue;
+			ibuf[ibufcount++] = ch;
+			if (ibufcount == ibuf.length) {
+				ibufcount = 0;
+				int obufcount = decode0(ibuf, obuf, 0);
+				ostream.write(obuf, 0, obufcount);
+			}
+		}
+		ostream.close();
+	}
+
+	/**
+	 * 
+	 * @param data
+	 * @param ostream
+	 * @throws IOException
+	 */
+	public static void decode(String data, OutputStream ostream)
+			throws IOException {
+		char ibuf[] = new char[4];
+		int ibufcount = 0;
+		byte obuf[] = new byte[3];
+		for (int i = 0; i < data.length(); i++) {
+			char ch = data.charAt(i);
+			if (ch != '='
+					&& (ch >= S_DECODETABLE.length || S_DECODETABLE[ch] == 127))
+				continue;
+			ibuf[ibufcount++] = ch;
+			if (ibufcount == ibuf.length) {
+				ibufcount = 0;
+				int obufcount = decode0(ibuf, obuf, 0);
+				ostream.write(obuf, 0, obufcount);
+			}
+		}
+		ostream.close();
+	}
+
+	/**
+	 * 
+	 * @param data
+	 * @return
+	 */
+	public static String encode(byte data[]) {
+		return encode(data, 0, data.length);
+	}
+
+	/**
+	 * 
+	 * @param data
+	 * @param off
+	 * @param len
+	 * @return
+	 */
+	public static String encode(byte data[], int off, int len) {
+		if (len <= 0)
+			return "";
+		char out[] = new char[(len / 3) * 4 + 4];
+		int rindex = off;
+		int windex = 0;
+		int rest;
+		for (rest = len - off; rest >= 3; rest -= 3) {
+			int i = ((data[rindex] & 255) << 16)
+					+ ((data[rindex + 1] & 255) << 8)
+					+ (data[rindex + 2] & 255);
+			out[windex++] = S_BASE64CHAR[i >> 18];
+			out[windex++] = S_BASE64CHAR[i >> 12 & 63];
+			out[windex++] = S_BASE64CHAR[i >> 6 & 63];
+			out[windex++] = S_BASE64CHAR[i & 63];
+			rindex += 3;
+		}
+
+		if (rest == 1) {
+			int i = data[rindex] & 255;
+			out[windex++] = S_BASE64CHAR[i >> 2];
+			out[windex++] = S_BASE64CHAR[i << 4 & 63];
+			out[windex++] = '=';
+			out[windex++] = '=';
+		} else if (rest == 2) {
+			int i = ((data[rindex] & 255) << 8) + (data[rindex + 1] & 255);
+			out[windex++] = S_BASE64CHAR[i >> 10];
+			out[windex++] = S_BASE64CHAR[i >> 4 & 63];
+			out[windex++] = S_BASE64CHAR[i << 2 & 63];
+			out[windex++] = '=';
+		}
+		return new String(out, 0, windex);
+	}
+
+	/**
+	 * 
+	 * @param data
+	 * @param off
+	 * @param len
+	 * @param ostream
+	 * @throws IOException
+	 */
+	public static void encode(byte data[], int off, int len,
+			OutputStream ostream) throws IOException {
+		if (len <= 0)
+			return;
+		byte out[] = new byte[4];
+		int rindex = off;
+		int rest;
+		for (rest = len - off; rest >= 3; rest -= 3) {
+			int i = ((data[rindex] & 255) << 16)
+					+ ((data[rindex + 1] & 255) << 8)
+					+ (data[rindex + 2] & 255);
+			out[0] = (byte) S_BASE64CHAR[i >> 18];
+			out[1] = (byte) S_BASE64CHAR[i >> 12 & 63];
+			out[2] = (byte) S_BASE64CHAR[i >> 6 & 63];
+			out[3] = (byte) S_BASE64CHAR[i & 63];
+			ostream.write(out, 0, 4);
+			rindex += 3;
+		}
+
+		if (rest == 1) {
+			int i = data[rindex] & 255;
+			out[0] = (byte) S_BASE64CHAR[i >> 2];
+			out[1] = (byte) S_BASE64CHAR[i << 4 & 63];
+			out[2] = 61;
+			out[3] = 61;
+			ostream.write(out, 0, 4);
+		} else if (rest == 2) {
+			int i = ((data[rindex] & 255) << 8) + (data[rindex + 1] & 255);
+			out[0] = (byte) S_BASE64CHAR[i >> 10];
+			out[1] = (byte) S_BASE64CHAR[i >> 4 & 63];
+			out[2] = (byte) S_BASE64CHAR[i << 2 & 63];
+			out[3] = 61;
+			ostream.write(out, 0, 4);
+		}
+		ostream.close();
+	}
+
+	/**
+	 * 
+	 * @param data
+	 * @param off
+	 * @param len
+	 * @param writer
+	 * @throws IOException
+	 */
+	public static void encode(byte data[], int off, int len, Writer writer)
+			throws IOException {
+		if (len <= 0)
+			return;
+		char out[] = new char[4];
+		int rindex = off;
+		int rest = len - off;
+		int output = 0;
+		do {
+			if (rest < 3)
+				break;
+			int i = ((data[rindex] & 255) << 16)
+					+ ((data[rindex + 1] & 255) << 8)
+					+ (data[rindex + 2] & 255);
+			out[0] = S_BASE64CHAR[i >> 18];
+			out[1] = S_BASE64CHAR[i >> 12 & 63];
+			out[2] = S_BASE64CHAR[i >> 6 & 63];
+			out[3] = S_BASE64CHAR[i & 63];
+			writer.write(out, 0, 4);
+			rindex += 3;
+			rest -= 3;
+			if ((output += 4) % 76 == 0)
+				writer.write("\n");
+		} while (true);
+		if (rest == 1) {
+			int i = data[rindex] & 255;
+			out[0] = S_BASE64CHAR[i >> 2];
+			out[1] = S_BASE64CHAR[i << 4 & 63];
+			out[2] = '=';
+			out[3] = '=';
+			writer.write(out, 0, 4);
+		} else if (rest == 2) {
+			int i = ((data[rindex] & 255) << 8) + (data[rindex + 1] & 255);
+			out[0] = S_BASE64CHAR[i >> 10];
+			out[1] = S_BASE64CHAR[i >> 4 & 63];
+			out[2] = S_BASE64CHAR[i << 2 & 63];
+			out[3] = '=';
+			writer.write(out, 0, 4);
+		}
+	}
+
+	// 将图片转换成Base64
+	public static String GetImageStr(String imgFilePath) {
+		try {
+			return GetImageStr(imgFilePath,false);// 返回Base64编码过的字节数组字符串
+		} catch (IOException e) {
+			e.printStackTrace();
+		}
+		return "";
+	}
+
+	// 将图片转换成Base64
+	public static String GetImageStr(String imgFilePath,boolean isThrowsException) throws IOException{
+		// 将图片文件转化为字节数组字符串，并对其进行Base64编码处理
+		byte[] data = null;
+		// 读取图片字节数组
+		try {
+			InputStream in = new FileInputStream(imgFilePath);
+			data = new byte[in.available()];
+			in.read(data);
+			in.close();
+		} catch (IOException e) {
+			if (isThrowsException)
+				throw e;
+			else
+				e.printStackTrace();
+		}
+		return Base64Util.encode(data);// 返回Base64编码过的字节数组字符串
+	}
+
+	// 将图片转换成Base64，带图片类型
+	public static  String toBase64(String  path){
+		StringBuilder stringBuilder = new StringBuilder();
+		String imagetype=path.substring(path.lastIndexOf("."),path.length()).replace(".","");
+		stringBuilder.append("data:image/")
+				.append(imagetype).append(";base64,");
+		stringBuilder.append(Base64Util.GetImageStr(path));
+		return  stringBuilder.toString() ;
+	}
+
+}
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision )
+++ app/src/main/res/values/colors.xml	(revision )
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="colorPrimary">#3F51B5</color>
+    <color name="colorPrimaryDark">#303F9F</color>
+    <color name="colorAccent">#FF4081</color>
+
+    <color name="tab_checked">#3F51B5</color>
+    <color name="tab_unchecked">#757575</color>
+</resources>
Index: app/src/main/java/hshealthy/cn/com/base/BaseSubscriber.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/base/BaseSubscriber.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/base/BaseSubscriber.java	(revision )
@@ -0,0 +1,25 @@
+package hshealthy.cn.com.base;
+
+
+import hshealthy.cn.com.http.ApiException;
+import rx.Subscriber;
+
+/**
+ * BaseSubscriber
+ * Created by Administrator on 2016/12/14.
+ */
+public abstract class BaseSubscriber<T> extends Subscriber<T> {
+
+    @Override
+    public void onError(Throwable e) {
+        ApiException apiException = (ApiException) e;
+        onError(apiException);
+    }
+
+
+    /**
+     * @param e 错误的一个回调
+     */
+    protected abstract void onError(ApiException e);
+
+}
Index: app/src/main/res/menu/menu_bottom_navigation.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/menu_bottom_navigation.xml	(revision )
+++ app/src/main/res/menu/menu_bottom_navigation.xml	(revision )
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+    <item
+        android:id="@+id/item_home"
+        android:icon="@mipmap/ic_news_gray"
+        android:title="首页" />
+    <item
+        android:id="@+id/item_expert"
+        android:icon="@mipmap/ic_library_gray"
+        android:title="专家" />
+
+    <item
+        android:id="@+id/item_healthy"
+        android:icon="@mipmap/ic_discovery_gray"
+        android:title="健康" />
+
+    <item
+        android:id="@+id/item_personal"
+        android:icon="@mipmap/ic_more_gray"
+        android:title="我的" />
+
+</menu>
\ No newline at end of file
Index: app/src/main/java/hshealthy/cn/com/http/ErrorType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/http/ErrorType.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/http/ErrorType.java	(revision )
@@ -0,0 +1,36 @@
+package hshealthy.cn.com.http;
+
+/**
+ * ErrorType
+ */
+public interface ErrorType {
+
+    /**
+     * 请求成功
+     */
+    int SUCCESS = 0;
+    /**
+     * 未知错误
+     */
+    int UNKONW = 1000;
+
+    /**
+     * 解析错误
+     */
+    int PARSE_ERROR = 1001;
+    /**
+     * 网络错误
+     */
+    int NETWORK_ERROR = 1002;
+
+    /**
+     * 解析对象为空
+     */
+    int EMPTY_BEAN = 1004;
+
+
+    /**
+     *
+     */
+    int HTTP_ERROR = 1003;
+}
Index: app/src/main/java/hshealthy/cn/com/base/BaseHttpResult.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/base/BaseHttpResult.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/base/BaseHttpResult.java	(revision )
@@ -0,0 +1,45 @@
+package hshealthy.cn.com.base;
+
+/**
+ * 抽取的一个基类的bean,直接在泛型中传data就行
+ * <p>
+ * Created by Administrator on 2016/12/14.
+ */
+public class BaseHttpResult<T> {
+    private int code;
+    private String message;// 接口暂时不提供该字段
+    private T data;
+
+    public int getCode() {
+        return code;
+    }
+
+    public void setCode(int code) {
+        this.code = code;
+    }
+
+    public String getMessage() {
+        return message;
+    }
+
+    public void setMessage(String message) {
+        this.message = message;
+    }
+
+    public T getData() {
+        return data;
+    }
+
+    public void setData(T data) {
+        this.data = data;
+    }
+
+    @Override
+    public String toString() {
+        return "BaseHttpResult{" +
+                "code=" + code +
+                ", message='" + message + '\'' +
+                ", data=" + data +
+                '}';
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/http/CommonTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/http/CommonTransformer.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/http/CommonTransformer.java	(revision )
@@ -0,0 +1,19 @@
+package hshealthy.cn.com.http;
+
+
+import hshealthy.cn.com.base.BaseHttpResult;
+import rx.Observable;
+import rx.android.schedulers.AndroidSchedulers;
+import rx.schedulers.Schedulers;
+
+/**
+ * CommonTransformer
+ */
+public class CommonTransformer<T> implements Observable.Transformer<BaseHttpResult<T>, T> {
+    @Override
+    public Observable<T> call(Observable<BaseHttpResult<T>> tansFormerObservable) {
+        return tansFormerObservable.subscribeOn(Schedulers.io())
+                .observeOn(AndroidSchedulers.mainThread())
+                .compose(ErrorTransformer.<T>getInstance());
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/fragment/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/fragment/HomeFragment.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/fragment/HomeFragment.java	(revision )
@@ -0,0 +1,9 @@
+package hshealthy.cn.com.fragment;
+
+/**
+ * Created by 71443 on 2018/5/24.
+ */
+
+public class HomeFragment {
+
+}
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(revision )
+++ .idea/modules.xml	(revision )
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/app/app.iml" filepath="$PROJECT_DIR$/app/app.iml" />
+      <module fileurl="file://$PROJECT_DIR$/hshealthy.iml" filepath="$PROJECT_DIR$/hshealthy.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/java/hshealthy/cn/com/util/SPConstantUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/SPConstantUtils.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/SPConstantUtils.java	(revision )
@@ -0,0 +1,40 @@
+package hshealthy.cn.com.util;
+
+public class SPConstantUtils {
+
+	/** 共享文件名称 */
+	public static final String SHARED_PREFERENCE_NAME = "hst";
+
+	/** 用户是否第一次打开hst */
+	public static final String LB_HSLIB_ISFIRST = "is_first";
+
+	/** 客户端名称 */
+	public static final String CLIENTNAME = "clientname";
+
+	/** 客户端版本 */
+	public static final String CLIENTVERSION = "clientversion";
+
+	/** 系统版本 */
+	public static final String OSVERSION = "osversion";
+
+	/** 手机品牌 */
+	public static final String BRAND = "brand";
+
+	/** 手机具体型号 */
+	public static final String MODEL = "model";
+
+	/** uuid */
+	public static final String UUID = "uuid";
+
+	/** 网络类型 */
+	public static
+	final String NETWORKTYPE = "networkType";
+
+	/** 手机分辨率 */
+	public static final String RESOLUTION = "resolution";
+
+	/**手机号**/
+	public static final String MOBILE = "mobile";
+
+
+}
Index: app/src/main/java/hshealthy/cn/com/digest/BinaryEncoder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/digest/BinaryEncoder.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/digest/BinaryEncoder.java	(revision )
@@ -0,0 +1,10 @@
+package hshealthy.cn.com.digest;
+
+
+/**
+ * Created by chen.sun on 2017/9/27.
+ */
+
+public interface BinaryEncoder extends Encoder {
+    byte[] encode(byte[] var1) throws EncoderException;
+}
Index: app/src/main/java/hshealthy/cn/com/http/ApiException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/http/ApiException.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/http/ApiException.java	(revision )
@@ -0,0 +1,15 @@
+package hshealthy.cn.com.http;
+
+/**
+ * 自定义的异常,处理解析网络时的错误
+ */
+public class ApiException extends RuntimeException {
+
+    public int code;
+    public String message;
+
+    public ApiException(Throwable throwable, int code) {
+        super(throwable);
+        this.code = code;
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/util/AbAppUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/AbAppUtil.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/AbAppUtil.java	(revision )
@@ -0,0 +1,586 @@
+
+package hshealthy.cn.com.util;
+
+import android.annotation.TargetApi;
+import android.app.Activity;
+import android.app.ActivityManager;
+import android.app.ActivityManager.RunningServiceInfo;
+import android.content.Context;
+import android.content.Intent;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.content.pm.PackageManager.NameNotFoundException;
+import android.content.res.Resources;
+import android.location.LocationManager;
+import android.net.ConnectivityManager;
+import android.net.NetworkInfo;
+import android.net.Uri;
+import android.os.Build;
+import android.os.Environment;
+import android.os.StatFs;
+import android.telephony.TelephonyManager;
+import android.util.DisplayMetrics;
+import android.view.inputmethod.InputMethodManager;
+
+
+import java.io.File;
+import java.io.FileFilter;
+import java.util.Iterator;
+import java.util.List;
+import java.util.UUID;
+import java.util.regex.Pattern;
+
+import hshealthy.cn.com.api.HsHealthyInstance;
+
+/**
+ * © 2012 amsoft.cn 名称：AbAppUtil.java 描述：应用工具类.
+ *
+ * @author 还如一梦中
+ * @version v1.0
+ * @date：2011-11-10 下午11:52:13
+ */
+public class AbAppUtil {
+
+    public static String getAppVersionName(Context ct) {
+        PackageInfo pinfo = null;
+        try {
+            PackageManager pm = ct.getPackageManager();
+            pinfo = pm.getPackageInfo(ct.getPackageName(),
+                    PackageManager.GET_CONFIGURATIONS);
+        } catch (NameNotFoundException e) {
+            e.printStackTrace();
+        }
+        return pinfo.versionName;
+    }
+
+    public static String getAppVersion(Context context) {
+        String versionName = null;
+        try {
+            String pkName = context.getPackageName();
+            versionName = context.getPackageManager().getPackageInfo(pkName, 0).versionName;
+
+        } catch (Exception e) {
+            return "unKnown";
+        }
+        return StringUtils.removeEmptyChar(versionName);
+    }
+
+    /**
+     * 获得App名称
+     */
+    public static String getAppName(Context context) {
+        try {
+            PackageManager e = context.getPackageManager();
+            PackageInfo packageInfo = e.getPackageInfo(context.getPackageName(), 0);
+            int labelRes = packageInfo.applicationInfo.labelRes;
+            return  StringUtils.removeEmptyChar(context.getResources().getString(labelRes));
+        } catch (Exception var4) {
+            var4.printStackTrace();
+            return "unKnown";
+        }
+    }
+
+    /**
+     * 获取编译系统版本(5.1)
+     *
+     * @return
+     */
+    public static String getBuildVersionRelease() {
+        return StringUtils.removeEmptyChar(Build.VERSION.RELEASE);
+    }
+
+    /**
+     * 获取编译厂商
+     *
+     * @return
+     */
+    public static String getBuildBrand() {
+        return StringUtils.removeEmptyChar(Build.BRAND);
+    }
+
+    /**
+     * 获取手机型号
+     *
+     * @return String 手机型号
+     */
+    public static String getSysModel() {
+        String model = Build.MODEL;
+        return StringUtils.replaceChar(model);
+    }
+
+    /**
+     * Android设备物理唯一标识符
+     *
+     * @return
+     */
+    public static String getPsuedoUniqueID() {
+        String devIDShort = "35" + (Build.BOARD.length() % 10) + (Build.BRAND.length() % 10);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+            devIDShort += (Build.SUPPORTED_ABIS[0].length() % 10);
+        } else {
+            devIDShort += (Build.CPU_ABI.length() % 10);
+        }
+        devIDShort += (Build.DEVICE.length() % 10) + (Build.MANUFACTURER.length() % 10) + (Build.MODEL.length() % 10) + (Build.PRODUCT.length() % 10);
+        String serial;
+        try {
+            serial = Build.class.getField("SERIAL").get(null).toString();
+            return new UUID(devIDShort.hashCode(), serial.hashCode()).toString();
+        } catch (Exception e) {
+            serial = "ESYDV000";
+        }
+        return new UUID(devIDShort.hashCode(), serial.hashCode()).toString();
+    }
+    /**
+     * 获取UUID
+     *
+     * @return 32UUID小写字符串
+     */
+    public static String gainUUID() {
+        String strUUID = UUID.randomUUID().toString();
+        strUUID = strUUID.replaceAll("-", "").toLowerCase();
+        return StringUtils.removeEmptyChar(strUUID);
+    }
+
+    public static int compareVersion(String version1, String version2) {
+        if (version1.equals(version2)) {
+            return 0;
+        }
+        String[] version1Array = version1.split("\\.");
+        String[] version2Array = version2.split("\\.");
+        int index = 0;
+        int minLen = Math.min(version1Array.length, version2Array.length);
+        int diff = 0;
+        while (index < minLen && (diff = Integer.parseInt(version1Array[index]) - Integer.parseInt(version2Array[index])) == 0) {
+            index++;
+        }
+        if (diff == 0) {
+            for (int i = index; i < version1Array.length; i++) {
+                if (Integer.parseInt(version1Array[i]) > 0) {
+                    return 1;
+                }
+            }
+            for (int i = index; i < version2Array.length; i++) {
+                if (Integer.parseInt(version2Array[i]) > 0) {
+                    return -1;
+                }
+            }
+            return 0;
+        } else {
+            return diff > 0 ? 1 : -1;
+        }
+    }
+
+    /**
+     * 描述：打开并安装文件.
+     *
+     * @param context the context
+     * @param file    apk文件路径
+     */
+    public static void installApk(Context context, File file) {
+        Intent intent = new Intent();
+        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+        intent.setAction(Intent.ACTION_VIEW);
+        intent.setDataAndType(Uri.fromFile(file),
+                "application/vnd.android.package-archive");
+        context.startActivity(intent);
+    }
+
+    /**
+     * 获取NavigationBar的高度
+     *
+     * @param activity
+     * @return
+     */
+    public static int getNavigationBarHeight(Activity activity) {
+        Resources resources = activity.getResources();
+        int resourceId = resources.getIdentifier("navigation_bar_height",
+                "dimen", "android");
+
+        int height = resources.getDimensionPixelSize(resourceId)
+                + getStatusHeight(activity);
+        return height;
+    }
+
+    /**
+     * 获得状态栏的高度
+     *
+     * @param context
+     * @return
+     */
+    public static int getStatusHeight(Context context) {
+
+        int statusHeight = -1;
+        try {
+            Class<?> clazz = Class.forName("com.android.internal.R$dimen");
+            Object object = clazz.newInstance();
+            int height = Integer.parseInt(clazz.getField("status_bar_height")
+                    .get(object).toString());
+            statusHeight = context.getResources().getDimensionPixelSize(height);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return statusHeight;
+    }
+
+    /**
+     * 描述：卸载程序.
+     *
+     * @param context     the context
+     * @param packageName 包名
+     */
+    public static void uninstallApk(Context context, String packageName) {
+        Intent intent = new Intent(Intent.ACTION_DELETE);
+        Uri packageURI = Uri.parse("package:" + packageName);
+        intent.setData(packageURI);
+        context.startActivity(intent);
+    }
+
+    /**
+     * 用来判断服务是否运行.
+     *
+     * @param ctx       the ctx
+     * @param className 判断的服务名字 "com.xxx.xx..XXXService"
+     * @return true 在运行 false 不在运行
+     */
+    public static boolean isServiceRunning(Context ctx, String className) {
+        boolean isRunning = false;
+        ActivityManager activityManager = (ActivityManager) ctx
+                .getSystemService(Context.ACTIVITY_SERVICE);
+        List<RunningServiceInfo> servicesList = activityManager
+                .getRunningServices(Integer.MAX_VALUE);
+        Iterator<RunningServiceInfo> l = servicesList.iterator();
+        while (l.hasNext()) {
+            RunningServiceInfo si = l.next();
+            if (className.equals(si.service.getClassName())) {
+                isRunning = true;
+            }
+        }
+        return isRunning;
+    }
+
+    /**
+     * 停止服务.
+     *
+     * @param ctx       the ctx
+     * @param className the class name
+     * @return true, if successful
+     */
+    public static boolean stopRunningService(Context ctx, String className) {
+        Intent intent_service = null;
+        boolean ret = false;
+        try {
+            intent_service = new Intent(ctx, Class.forName(className));
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        if (intent_service != null) {
+            ret = ctx.stopService(intent_service);
+        }
+        return ret;
+    }
+
+    /**
+     * Gets the number of cores available in this device, across all processors.
+     * Requires: Ability to peruse the filesystem at "/sys/devices/system/cpu"
+     *
+     * @return The number of cores, or 1 if failed to get result
+     */
+    public static int getNumCores() {
+        try {
+            File dir = new File("/sys/devices/system/cpu/");
+            File[] files = dir.listFiles(new FileFilter() {
+
+                @Override
+                public boolean accept(File pathname) {
+                    return Pattern.matches("cpu[0-9]", pathname.getName());
+                }
+
+            });
+            return files.length;
+        } catch (Exception e) {
+            return 1;
+        }
+    }
+
+    /**
+     * 描述：判断网络是否有效.
+     *
+     * @param
+     * @return true, if is network available
+     */
+    public static boolean isNetworkAvailable() {
+        try {
+            ConnectivityManager connectivity = (ConnectivityManager) HsHealthyInstance.C()
+                    .getSystemService(Context.CONNECTIVITY_SERVICE);
+            if (connectivity != null) {
+                NetworkInfo info = connectivity.getActiveNetworkInfo();
+                if (info != null && info.isConnected()) {
+                    if (info.getState() == NetworkInfo.State.CONNECTED) {
+                        return true;
+                    }
+                }
+            }
+        } catch (Exception e) {
+            return false;
+        }
+        return false;
+    }
+
+    /**
+     * Gps是否打开 需要<uses-permission
+     * android:name="android.permission.ACCESS_FINE_LOCATION" />权限
+     *
+     * @param context the context
+     * @return true, if is gps enabled
+     */
+    public static boolean isGpsEnabled(Context context) {
+        LocationManager lm = (LocationManager) context
+                .getSystemService(Context.LOCATION_SERVICE);
+        return lm.isProviderEnabled(LocationManager.GPS_PROVIDER);
+    }
+
+    /**
+     * wifi是否打开.
+     *
+     * @param context the context
+     * @return true, if is wifi enabled
+     */
+    public static boolean isWifiEnabled(Context context) {
+        ConnectivityManager mgrConn = (ConnectivityManager) context
+                .getSystemService(Context.CONNECTIVITY_SERVICE);
+        TelephonyManager mgrTel = (TelephonyManager) context
+                .getSystemService(Context.TELEPHONY_SERVICE);
+        return ((mgrConn.getActiveNetworkInfo() != null && mgrConn
+                .getActiveNetworkInfo().getState() == NetworkInfo.State.CONNECTED) || mgrTel
+                .getNetworkType() == TelephonyManager.NETWORK_TYPE_UMTS);
+    }
+
+    /**
+     * 判断当前网络是否是wifi网络.
+     *
+     * @param context the context
+     * @return boolean
+     */
+    public static boolean isWifi(Context context) {
+        ConnectivityManager connectivityManager = (ConnectivityManager) context
+                .getSystemService(Context.CONNECTIVITY_SERVICE);
+        NetworkInfo activeNetInfo = connectivityManager.getActiveNetworkInfo();
+        return activeNetInfo != null
+                && activeNetInfo.getType() == ConnectivityManager.TYPE_WIFI;
+    }
+
+    /**
+     * 判断当前网络是否是移动数据网络.
+     *
+     * @param context the context
+     * @return boolean
+     */
+    public static boolean isMobile(Context context) {
+        ConnectivityManager connectivityManager = (ConnectivityManager) context
+                .getSystemService(Context.CONNECTIVITY_SERVICE);
+        NetworkInfo activeNetInfo = connectivityManager.getActiveNetworkInfo();
+        return activeNetInfo != null
+                && activeNetInfo.getType() == ConnectivityManager.TYPE_MOBILE;
+    }
+
+    /**
+     * 获取屏幕尺寸与密度.
+     *
+     * @param context the context
+     * @return mDisplayMetrics
+     */
+    public static DisplayMetrics getDisplayMetrics(Context context) {
+        Resources mResources;
+        if (context == null) {
+            mResources = Resources.getSystem();
+
+        } else {
+            mResources = context.getResources();
+        }
+        DisplayMetrics mDisplayMetrics = mResources.getDisplayMetrics();
+        return mDisplayMetrics;
+    }
+
+    /**
+     * 打开键盘.
+     *
+     * @param context the context
+     */
+    public static void showSoftInput(Context context) {
+        InputMethodManager inputMethodManager = (InputMethodManager) context
+                .getSystemService(Context.INPUT_METHOD_SERVICE);
+        inputMethodManager.toggleSoftInput(0,
+                InputMethodManager.HIDE_NOT_ALWAYS);
+    }
+
+    /**
+     * 关闭键盘事件.
+     *
+     * @param context the context
+     */
+    public static void closeSoftInput(Context context) {
+        InputMethodManager inputMethodManager = (InputMethodManager) context
+                .getSystemService(Context.INPUT_METHOD_SERVICE);
+        if (inputMethodManager != null
+                && ((Activity) context).getCurrentFocus() != null) {
+            inputMethodManager.hideSoftInputFromWindow(((Activity) context)
+                            .getCurrentFocus().getWindowToken(),
+                    InputMethodManager.HIDE_NOT_ALWAYS);
+        }
+    }
+
+
+    /**
+     * 获得栈中最顶层的Activity
+     * 获取栈顶activity的完整包名
+     * @param context
+     * @return
+     */
+    public static String getTopActivity(Context context) {
+        ActivityManager manager = (ActivityManager) context.getSystemService(context.ACTIVITY_SERVICE);
+        List<ActivityManager.RunningTaskInfo> runningTaskInfos = manager.getRunningTasks(1);
+
+        if (runningTaskInfos != null) {
+            return (runningTaskInfos.get(0).topActivity).toString();
+        } else
+            return null;
+    }
+
+    /**
+
+     * 获取某个目录的可用空间
+
+     */
+
+    public static long getAvailSpace(String path){
+
+        StatFs statfs = new StatFs(path);
+
+        long size = statfs.getBlockSize();//获取分区的大小
+
+        long count = statfs.getAvailableBlocks();//获取可用分区块的个数
+
+        return size*count;
+
+    }
+
+    /**
+     * 获取手机内部空间总大小
+     *
+     * @return 大小，MB为单位
+     */
+    public static  long getTotalInternalMemorySize() {
+        //获取内部存储根目录
+        File path = Environment.getDataDirectory();
+        //系统的空间描述类
+        StatFs stat = new StatFs(path.getPath());
+        //每个区块占字节数
+        long blockSize = stat.getBlockSize();
+        //区块总数
+        long totalBlocks = stat.getBlockCount();
+        return (totalBlocks * blockSize) / 1024 / 1024;
+    }
+
+    /**
+     * 获取手机内部可用空间大小
+     *
+     * @return 大小，MB为单位
+     */
+    public static  long getAvailableInternalMemorySize() {
+        File path = Environment.getDataDirectory();
+        StatFs stat = new StatFs(path.getPath());
+        long blockSize = stat.getBlockSize();
+        //获取可用区块数量
+        long availableBlocks = stat.getAvailableBlocks();
+        return (availableBlocks * blockSize) / 1024 / 1024;
+    }
+
+    /**
+     * 判断SD卡是否可用
+     *
+     * @return true : 可用<br>false : 不可用
+     */
+    public static boolean isSDCardEnable() {
+        return Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState());
+    }
+
+    /**
+     * 获取sd卡剩余空间的大小
+     */
+    @SuppressWarnings("deprecation")
+    public static long getSDFreeSize() {
+        if (!isSDCardEnable()) {
+            return 1024;
+        }
+        File path = Environment.getExternalStorageDirectory(); // 取得SD卡文件路径
+        StatFs sf = new StatFs(path.getPath());
+        long blockSize = sf.getBlockSize(); // 获取单个数据块的大小(Byte)
+        long freeBlocks = sf.getAvailableBlocks();// 空闲的数据块的数量
+        // 返回SD卡空闲大小
+        return (freeBlocks * blockSize) / 1024 / 1024; // 单位MB
+    }
+
+    /**
+     * 获取sd卡空间的总大小
+     */
+    @SuppressWarnings("deprecation")
+    public static long getSDAllSize() {
+        if (!isSDCardEnable()) {
+            return 1024;
+        }
+        File path = Environment.getExternalStorageDirectory(); // 取得SD卡文件路径
+        StatFs sf = new StatFs(path.getPath());
+        long blockSize = sf.getBlockSize(); // 获取单个数据块的大小(Byte)
+        long allBlocks = sf.getBlockCount(); // 获取所有数据块数
+        // 返回SD卡大小
+        return (allBlocks * blockSize) / 1024 / 1024; // 单位MB
+    }
+
+    /**
+     * 获取SD卡信息
+     *
+     * @return SDCardInfo
+     */
+    @TargetApi(Build.VERSION_CODES.JELLY_BEAN_MR2)
+    public static String getSDCardInfo() {
+        SDCardInfo sd = new SDCardInfo();
+        if (!isSDCardEnable()) return "sdcard unable!";
+        sd.isExist = true;
+        StatFs sf = new StatFs(Environment.getExternalStorageDirectory().getPath());
+        sd.totalBlocks = sf.getBlockCountLong();
+        sd.blockByteSize = sf.getBlockSizeLong();
+        sd.availableBlocks = sf.getAvailableBlocksLong();
+        sd.availableBytes = sf.getAvailableBytes();
+        sd.freeBlocks = sf.getFreeBlocksLong();
+        sd.freeBytes = sf.getFreeBytes();
+        sd.totalBytes = sf.getTotalBytes();
+        return sd.toString();
+    }
+
+    public static class SDCardInfo {
+        boolean isExist;
+        long totalBlocks;
+        long freeBlocks;
+        long availableBlocks;
+        long blockByteSize;
+        long totalBytes;
+        long freeBytes;
+        long availableBytes;
+
+        @Override
+        public String toString() {
+            return "isExist=" + isExist +
+                    "\ntotalBlocks=" + totalBlocks +
+                    "\nfreeBlocks=" + freeBlocks +
+                    "\navailableBlocks=" + availableBlocks +
+                    "\nblockByteSize=" + blockByteSize +
+                    "\ntotalBytes=" + totalBytes +
+                    "\nfreeBytes=" + freeBytes +
+                    "\navailableBytes=" + availableBytes;
+        }
+    }
+
+    public static  String  getPhotoProvider(){
+        return HsHealthyInstance.C().getPackageName().concat(".").concat("provider");
+    }
+}
Index: app/src/main/res/drawable-v24/ic_launcher_foreground.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-v24/ic_launcher_foreground.xml	(revision )
+++ app/src/main/res/drawable-v24/ic_launcher_foreground.xml	(revision )
@@ -0,0 +1,34 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportHeight="108"
+    android:viewportWidth="108">
+    <path
+        android:fillType="evenOdd"
+        android:pathData="M32,64C32,64 38.39,52.99 44.13,50.95C51.37,48.37 70.14,49.57 70.14,49.57L108.26,87.69L108,109.01L75.97,107.97L32,64Z"
+        android:strokeColor="#00000000"
+        android:strokeWidth="1">
+        <aapt:attr name="android:fillColor">
+            <gradient
+                android:endX="78.5885"
+                android:endY="90.9159"
+                android:startX="48.7653"
+                android:startY="61.0927"
+                android:type="linear">
+                <item
+                    android:color="#44000000"
+                    android:offset="0.0" />
+                <item
+                    android:color="#00000000"
+                    android:offset="1.0" />
+            </gradient>
+        </aapt:attr>
+    </path>
+    <path
+        android:fillColor="#FFFFFF"
+        android:fillType="nonZero"
+        android:pathData="M66.94,46.02L66.94,46.02C72.44,50.07 76,56.61 76,64L32,64C32,56.61 35.56,50.11 40.98,46.06L36.18,41.19C35.45,40.45 35.45,39.3 36.18,38.56C36.91,37.81 38.05,37.81 38.78,38.56L44.25,44.05C47.18,42.57 50.48,41.71 54,41.71C57.48,41.71 60.78,42.57 63.68,44.05L69.11,38.56C69.84,37.81 70.98,37.81 71.71,38.56C72.44,39.3 72.44,40.45 71.71,41.19L66.94,46.02ZM62.94,56.92C64.08,56.92 65,56.01 65,54.88C65,53.76 64.08,52.85 62.94,52.85C61.8,52.85 60.88,53.76 60.88,54.88C60.88,56.01 61.8,56.92 62.94,56.92ZM45.06,56.92C46.2,56.92 47.13,56.01 47.13,54.88C47.13,53.76 46.2,52.85 45.06,52.85C43.92,52.85 43,53.76 43,54.88C43,56.01 43.92,56.92 45.06,56.92Z"
+        android:strokeColor="#00000000"
+        android:strokeWidth="1" />
+</vector>
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- settings.gradle	(revision )
+++ settings.gradle	(revision )
@@ -0,0 +1,1 @@
+include ':app'
Index: app/src/main/java/hshealthy/cn/com/util/AbDateUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/AbDateUtil.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/AbDateUtil.java	(revision )
@@ -0,0 +1,727 @@
+/*
+ * Copyright (C) 2012 www.amsoft.cn
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package hshealthy.cn.com.util;
+
+import android.text.TextUtils;
+
+import java.text.DateFormat;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.GregorianCalendar;
+
+/**
+ * © 2012 amsoft.cn 名称：AbDateUtil.java 描述：日期处理类.
+ * 
+ * @author 还如一梦中
+ * @version v1.0
+ * @date：2013-01-18 下午11:52:13
+ */
+public class AbDateUtil {
+
+	/** 时间日期格式化到年月日时分秒. */
+	public static final String dateFormatYMDHMS = "yyyy-MM-dd HH:mm:ss";
+
+	/** 时间日期格式化到年月日时分秒. */
+	public static final String dateFormatYMDHMSTRIM = "yyyyMMddHHmmss";
+
+	/** 时间日期格式化到年月日. */
+	public static final String dateFormatYMD = "yyyy-MM-dd";
+
+	/** 时间日期格式化到年月. */
+	public static final String dateFormatYM = "yyyy-MM";
+
+	/** 时间日期格式化到年月日时分. */
+	public static final String dateFormatYMDHM = "yyyy-MM-dd HH:mm";
+
+	/** 时间日期格式化到月日. */
+	public static final String dateFormatMD = "MM/dd";
+
+	/** 时分秒. */
+	public static final String dateFormatHMS = "HH:mm:ss";
+
+	/** 时分. */
+	public static final String dateFormatHM = "HH:mm";
+
+	/** 上午. */
+	public static final String AM = "AM";
+
+	/** 下午. */
+	public static final String PM = "PM";
+
+	/**
+	 * 描述：String类型的日期时间转化为Date类型.
+	 * 
+	 * @param strDate
+	 *            String形式的日期时间
+	 * @param format
+	 *            格式化字符串，如："yyyy-MM-dd HH:mm:ss"
+	 * @return Date Date类型日期时间
+	 */
+	public static Date getDateByFormat(String strDate, String format) {
+		SimpleDateFormat mSimpleDateFormat = new SimpleDateFormat(format);
+		Date date = null;
+		try {
+			date = mSimpleDateFormat.parse(strDate);
+		} catch (ParseException e) {
+			e.printStackTrace();
+		}
+		return date;
+	}
+
+	/**
+	 * 描述：获取偏移之后的Date.
+	 * 
+	 * @param date
+	 *            日期时间
+	 * @param calendarField
+	 *            Calendar属性，对应offset的值，
+	 *            如(Calendar.DATE,表示+offset天,Calendar.HOUR_OF_DAY,表示＋offset小时)
+	 * @param offset
+	 *            偏移(值大于0,表示+,值小于0,表示－)
+	 * @return Date 偏移之后的日期时间
+	 */
+	public Date getDateByOffset(Date date, int calendarField, int offset) {
+		Calendar c = new GregorianCalendar();
+		try {
+			c.setTime(date);
+			c.add(calendarField, offset);
+		} catch (Exception e) {
+			e.printStackTrace();
+		}
+		return c.getTime();
+	}
+
+	/**
+	 * 描述：获取指定日期时间的字符串(可偏移).
+	 * 
+	 * @param strDate
+	 *            String形式的日期时间
+	 * @param format
+	 *            格式化字符串，如："yyyy-MM-dd HH:mm:ss"
+	 * @param calendarField
+	 *            Calendar属性，对应offset的值，
+	 *            如(Calendar.DATE,表示+offset天,Calendar.HOUR_OF_DAY,表示＋offset小时)
+	 * @param offset
+	 *            偏移(值大于0,表示+,值小于0,表示－)
+	 * @return String String类型的日期时间
+	 */
+	public static String getStringByOffset(String strDate, String format,
+			int calendarField, int offset) {
+		String mDateTime = null;
+		try {
+			Calendar c = new GregorianCalendar();
+			SimpleDateFormat mSimpleDateFormat = new SimpleDateFormat(format);
+			c.setTime(mSimpleDateFormat.parse(strDate));
+			c.add(calendarField, offset);
+			mDateTime = mSimpleDateFormat.format(c.getTime());
+		} catch (ParseException e) {
+			e.printStackTrace();
+		}
+		return mDateTime;
+	}
+
+	/**
+	 * 描述：Date类型转化为String类型(可偏移).
+	 * 
+	 * @param date
+	 *            the date
+	 * @param format
+	 *            the format
+	 * @param calendarField
+	 *            the calendar field
+	 * @param offset
+	 *            the offset
+	 * @return String String类型日期时间
+	 */
+	public static String getStringByOffset(Date date, String format,
+			int calendarField, int offset) {
+		String strDate = null;
+		try {
+			Calendar c = new GregorianCalendar();
+			SimpleDateFormat mSimpleDateFormat = new SimpleDateFormat(format);
+			c.setTime(date);
+			c.add(calendarField, offset);
+			strDate = mSimpleDateFormat.format(c.getTime());
+		} catch (Exception e) {
+			e.printStackTrace();
+		}
+		return strDate;
+	}
+
+	/**
+	 * 描述：Date类型转化为String类型.
+	 * 
+	 * @param date
+	 *            the date
+	 * @param format
+	 *            the format
+	 * @return String String类型日期时间
+	 */
+	public static String getStringByFormat(Date date, String format) {
+		SimpleDateFormat mSimpleDateFormat = new SimpleDateFormat(format);
+		String strDate = null;
+		try {
+			strDate = mSimpleDateFormat.format(date);
+		} catch (Exception e) {
+			e.printStackTrace();
+		}
+		return strDate;
+	}
+
+	/**
+	 * 描述：获取指定日期时间的字符串,用于导出想要的格式.
+	 * 
+	 * @param strDate
+	 *            String形式的日期时间，必须为yyyy-MM-dd HH:mm:ss格式
+	 * @param format
+	 *            输出格式化字符串，如："yyyy-MM-dd HH:mm:ss"
+	 * @return String 转换后的String类型的日期时间
+	 */
+	public static String getStringByFormat(String strDate, String format) {
+		String mDateTime = null;
+		try {
+			Calendar c = new GregorianCalendar();
+			SimpleDateFormat mSimpleDateFormat = new SimpleDateFormat(
+					dateFormatYMDHMS);
+			c.setTime(mSimpleDateFormat.parse(strDate));
+			SimpleDateFormat mSimpleDateFormat2 = new SimpleDateFormat(format);
+			mDateTime = mSimpleDateFormat2.format(c.getTime());
+		} catch (Exception e) {
+			e.printStackTrace();
+		}
+		return mDateTime;
+	}
+
+	/**
+	 * 描述：获取milliseconds表示的日期时间的字符串.
+	 * 
+	 * @param milliseconds
+	 *            the milliseconds
+	 * @param format
+	 *            格式化字符串，如："yyyy-MM-dd HH:mm:ss"
+	 * @return String 日期时间字符串
+	 */
+	public static String getStringByFormat(long milliseconds, String format) {
+		String thisDateTime = null;
+		try {
+			SimpleDateFormat mSimpleDateFormat = new SimpleDateFormat(format);
+			thisDateTime = mSimpleDateFormat.format(milliseconds);
+		} catch (Exception e) {
+			e.printStackTrace();
+		}
+		return thisDateTime;
+	}
+
+	/**
+	 * 描述：获取表示当前日期时间的字符串.
+	 * 
+	 * @param format
+	 *            格式化字符串，如："yyyy-MM-dd HH:mm:ss"
+	 * @return String String类型的当前日期时间
+	 */
+	public static String getCurrentDate(String format) {
+		String curDateTime = null;
+		try {
+			SimpleDateFormat mSimpleDateFormat = new SimpleDateFormat(format);
+			Calendar c = new GregorianCalendar();
+			curDateTime = mSimpleDateFormat.format(c.getTime());
+		} catch (Exception e) {
+			e.printStackTrace();
+		}
+		return curDateTime;
+
+	}
+	/**
+	 * 获取当前毫秒时间戳
+	 *
+	 * @return 毫秒时间戳
+	 */
+	public static long getNowTimeMills() {
+		return System.currentTimeMillis();
+	}
+
+	/**
+	 * 描述：获取表示当前日期时间的字符串(可偏移).
+	 * 
+	 * @param format
+	 *            格式化字符串，如："yyyy-MM-dd HH:mm:ss"
+	 * @param calendarField
+	 *            Calendar属性，对应offset的值，
+	 *            如(Calendar.DATE,表示+offset天,Calendar.HOUR_OF_DAY,表示＋offset小时)
+	 * @param offset
+	 *            偏移(值大于0,表示+,值小于0,表示－)
+	 * @return String String类型的日期时间
+	 */
+	public static String getCurrentDateByOffset(String format,
+			int calendarField, int offset) {
+		String mDateTime = null;
+		try {
+			SimpleDateFormat mSimpleDateFormat = new SimpleDateFormat(format);
+			Calendar c = new GregorianCalendar();
+			c.add(calendarField, offset);
+			mDateTime = mSimpleDateFormat.format(c.getTime());
+		} catch (Exception e) {
+			e.printStackTrace();
+		}
+		return mDateTime;
+
+	}
+
+	/**
+	 * 描述：计算两个日期所差的天数.
+	 * 
+	 * @param milliseconds1
+	 *            the milliseconds1
+	 * @param milliseconds2
+	 *            the milliseconds2
+	 * @return int 所差的天数
+	 */
+	public static int getOffectDay(long milliseconds1, long milliseconds2) {
+		Calendar calendar1 = Calendar.getInstance();
+		calendar1.setTimeInMillis(milliseconds1);
+		Calendar calendar2 = Calendar.getInstance();
+		calendar2.setTimeInMillis(milliseconds2);
+		// 先判断是否同年
+		int y1 = calendar1.get(Calendar.YEAR);
+		int y2 = calendar2.get(Calendar.YEAR);
+		int d1 = calendar1.get(Calendar.DAY_OF_YEAR);
+		int d2 = calendar2.get(Calendar.DAY_OF_YEAR);
+		int maxDays = 0;
+		int day = 0;
+		if (y1 - y2 > 0) {
+			maxDays = calendar2.getActualMaximum(Calendar.DAY_OF_YEAR);
+			day = d1 - d2 + maxDays;
+		} else if (y1 - y2 < 0) {
+			maxDays = calendar1.getActualMaximum(Calendar.DAY_OF_YEAR);
+			day = d1 - d2 - maxDays;
+		} else {
+			day = d1 - d2;
+		}
+		return day;
+	}
+
+	/**
+	 * 描述：计算两个日期所差的小时数.
+	 * 
+	 * @param date1
+	 *            第一个时间的毫秒表示
+	 * @param date2
+	 *            第二个时间的毫秒表示
+	 * @return int 所差的小时数
+	 */
+	public static int getOffectHour(long date1, long date2) {
+		Calendar calendar1 = Calendar.getInstance();
+		calendar1.setTimeInMillis(date1);
+		Calendar calendar2 = Calendar.getInstance();
+		calendar2.setTimeInMillis(date2);
+		int h1 = calendar1.get(Calendar.HOUR_OF_DAY);
+		int h2 = calendar2.get(Calendar.HOUR_OF_DAY);
+		int h = 0;
+		int day = getOffectDay(date1, date2);
+		h = h1 - h2 + day * 24;
+		return h;
+	}
+
+	/**
+	 * 描述：计算两个日期所差的分钟数.
+	 * 
+	 * @param date1
+	 *            第一个时间的毫秒表示
+	 * @param date2
+	 *            第二个时间的毫秒表示
+	 * @return int 所差的分钟数
+	 */
+	public static int getOffectMinutes(long date1, long date2) {
+		Calendar calendar1 = Calendar.getInstance();
+		calendar1.setTimeInMillis(date1);
+		Calendar calendar2 = Calendar.getInstance();
+		calendar2.setTimeInMillis(date2);
+		int m1 = calendar1.get(Calendar.MINUTE);
+		int m2 = calendar2.get(Calendar.MINUTE);
+		int h = getOffectHour(date1, date2);
+		int m = 0;
+		m = m1 - m2 + h * 60;
+		return m;
+	}
+
+	/**
+	 * 描述：获取本周一.
+	 * 
+	 * @param format
+	 *            the format
+	 * @return String String类型日期时间
+	 */
+	public static String getFirstDayOfWeek(String format) {
+		return getDayOfWeek(format, Calendar.MONDAY);
+	}
+
+	/**
+	 * 描述：获取本周日.
+	 * 
+	 * @param format
+	 *            the format
+	 * @return String String类型日期时间
+	 */
+	public static String getLastDayOfWeek(String format) {
+		return getDayOfWeek(format, Calendar.SUNDAY);
+	}
+
+	/**
+	 * 描述：获取本周的某一天.
+	 * 
+	 * @param format
+	 *            the format
+	 * @param calendarField
+	 *            the calendar field
+	 * @return String String类型日期时间
+	 */
+	private static String getDayOfWeek(String format, int calendarField) {
+		String strDate = null;
+		try {
+			Calendar c = new GregorianCalendar();
+			SimpleDateFormat mSimpleDateFormat = new SimpleDateFormat(format);
+			int week = c.get(Calendar.DAY_OF_WEEK);
+			if (week == calendarField) {
+				strDate = mSimpleDateFormat.format(c.getTime());
+			} else {
+				int offectDay = calendarField - week;
+				if (calendarField == Calendar.SUNDAY) {
+					offectDay = 7 - Math.abs(offectDay);
+				}
+				c.add(Calendar.DATE, offectDay);
+				strDate = mSimpleDateFormat.format(c.getTime());
+			}
+		} catch (Exception e) {
+			e.printStackTrace();
+		}
+		return strDate;
+	}
+
+	public static String getDataThisStringTrim(){
+		SimpleDateFormat simpleDateFormat = new SimpleDateFormat(dateFormatYMDHMSTRIM);// HH:mm:ss
+		//获取当前时间
+		Date date = new Date(System.currentTimeMillis());
+		return simpleDateFormat.format(date);
+	}
+
+	/**
+	 * 描述：获取本月第一天.
+	 * 
+	 * @param format
+	 *            the format
+	 * @return String String类型日期时间
+	 */
+	public static String getFirstDayOfMonth(String format) {
+		String strDate = null;
+		try {
+			Calendar c = new GregorianCalendar();
+			SimpleDateFormat mSimpleDateFormat = new SimpleDateFormat(format);
+			// 当前月的第一天
+			c.set(GregorianCalendar.DAY_OF_MONTH, 1);
+			strDate = mSimpleDateFormat.format(c.getTime());
+		} catch (Exception e) {
+			e.printStackTrace();
+		}
+		return strDate;
+
+	}
+
+	/**
+	 * 描述：获取本月最后一天.
+	 * 
+	 * @param format
+	 *            the format
+	 * @return String String类型日期时间
+	 */
+	public static String getLastDayOfMonth(String format) {
+		String strDate = null;
+		try {
+			Calendar c = new GregorianCalendar();
+			SimpleDateFormat mSimpleDateFormat = new SimpleDateFormat(format);
+			// 当前月的最后一天
+			c.set(Calendar.DATE, 1);
+			c.roll(Calendar.DATE, -1);
+			strDate = mSimpleDateFormat.format(c.getTime());
+		} catch (Exception e) {
+			e.printStackTrace();
+		}
+		return strDate;
+	}
+
+	/**
+	 * 描述：获取表示当前日期的0点时间毫秒数.
+	 * 
+	 * @return the first time of day
+	 */
+	public static long getFirstTimeOfDay() {
+		Date date = null;
+		try {
+			String currentDate = getCurrentDate(dateFormatYMD);
+			date = getDateByFormat(currentDate + " 00:00:00", dateFormatYMDHMS);
+			return date.getTime();
+		} catch (Exception e) {
+		}
+		return -1;
+	}
+
+	/**
+	 * 描述：获取表示当前日期24点时间毫秒数.
+	 * 
+	 * @return the last time of day
+	 */
+	public static long getLastTimeOfDay() {
+		Date date = null;
+		try {
+			String currentDate = getCurrentDate(dateFormatYMD);
+			date = getDateByFormat(currentDate + " 24:00:00", dateFormatYMDHMS);
+			return date.getTime();
+		} catch (Exception e) {
+		}
+		return -1;
+	}
+
+	/**
+	 * 描述：判断是否是闰年()
+	 * <p>
+	 * (year能被4整除 并且 不能被100整除) 或者 year能被400整除,则该年为闰年.
+	 * 
+	 * @param year
+	 *            年代（如2012）
+	 * @return boolean 是否为闰年
+	 */
+	public static boolean isLeapYear(int year) {
+        return (year % 4 == 0 && year % 400 != 0) || year % 400 == 0;
+	}
+
+	/**
+	 * 描述：根据时间返回格式化后的时间的描述. 小于1小时显示多少分钟前 大于1小时显示今天＋实际日期，大于今天全部显示实际时间
+	 * 
+	 * @param strDate
+	 *            the str date
+	 * @param outFormat
+	 *            the out format
+	 * @return the string
+	 */
+	public static String formatDateStr2Desc(String strDate, String outFormat) {
+
+		DateFormat df = new SimpleDateFormat(dateFormatYMDHMS);
+		Calendar c1 = Calendar.getInstance();
+		Calendar c2 = Calendar.getInstance();
+		try {
+			c2.setTime(df.parse(strDate));
+			c1.setTime(new Date());
+			int d = getOffectDay(c1.getTimeInMillis(), c2.getTimeInMillis());
+			if (d == 0) {
+				int h = getOffectHour(c1.getTimeInMillis(),
+						c2.getTimeInMillis());
+				if (h > 0) {
+					return "今天" + getStringByFormat(strDate, dateFormatHM);
+					// return h + "小时前";
+				} else if (h < 0) {
+					// return Math.abs(h) + "小时后";
+				} else if (h == 0) {
+					int m = getOffectMinutes(c1.getTimeInMillis(),
+							c2.getTimeInMillis());
+					if (m > 0) {
+						return m + "分钟前";
+					} else if (m < 0) {
+						// return Math.abs(m) + "分钟后";
+					} else {
+						return "刚刚";
+					}
+				}
+
+			} else if (d > 0) {
+				if (d == 1) {
+					// return "昨天"+getStringByFormat(strDate,outFormat);
+				} else if (d == 2) {
+					// return "前天"+getStringByFormat(strDate,outFormat);
+				}
+			} else if (d < 0) {
+				if (d == -1) {
+					// return "明天"+getStringByFormat(strDate,outFormat);
+				} else if (d == -2) {
+					// return "后天"+getStringByFormat(strDate,outFormat);
+				} else {
+					// return Math.abs(d) +
+					// "天后"+getStringByFormat(strDate,outFormat);
+				}
+			}
+
+			String out = getStringByFormat(strDate, outFormat);
+			if (!TextUtils.isEmpty(out)) {
+				return out;
+			}
+		} catch (Exception e) {
+		}
+
+		return strDate;
+	}
+
+	/**
+	 * 取指定日期为星期几.
+	 * 
+	 * @param strDate
+	 *            指定日期
+	 * @param inFormat
+	 *            指定日期格式
+	 * @return String 星期几
+	 */
+	public static String getWeekNumber(String strDate, String inFormat) {
+		String week = "星期日";
+		Calendar calendar = new GregorianCalendar();
+		DateFormat df = new SimpleDateFormat(inFormat);
+		try {
+			calendar.setTime(df.parse(strDate));
+		} catch (Exception e) {
+			return "错误";
+		}
+		int intTemp = calendar.get(Calendar.DAY_OF_WEEK) - 1;
+		switch (intTemp) {
+		case 0:
+			week = "星期日";
+			break;
+		case 1:
+			week = "星期一";
+			break;
+		case 2:
+			week = "星期二";
+			break;
+		case 3:
+			week = "星期三";
+			break;
+		case 4:
+			week = "星期四";
+			break;
+		case 5:
+			week = "星期五";
+			break;
+		case 6:
+			week = "星期六";
+			break;
+		}
+		return week;
+	}
+
+	/**
+	 * 根据给定的日期判断是否为上下午.
+	 * 
+	 * @param strDate
+	 *            the str date
+	 * @param format
+	 *            the format
+	 * @return the time quantum
+	 */
+	public static String getTimeQuantum(String strDate, String format) {
+		Date mDate = getDateByFormat(strDate, format);
+		int hour = mDate.getHours();
+		if (hour >= 12)
+			return "PM";
+		else
+			return "AM";
+	}
+
+	/**
+	 * 根据给定的毫秒数算得时间的描述.
+	 * 
+	 * @param milliseconds
+	 *            the milliseconds
+	 * @return the time description
+	 */
+	public static String getTimeDescription(long milliseconds) {
+		if (milliseconds > 1000) {
+			// 大于一分
+			if (milliseconds / 1000 / 60 > 1) {
+				long minute = milliseconds / 1000 / 60;
+				long second = milliseconds / 1000 % 60;
+				return minute + "分" + second + "秒";
+			} else {
+				// 显示秒
+				return milliseconds / 1000 + "秒";
+			}
+		} else {
+			return milliseconds + "毫秒";
+		}
+	}
+
+	/**
+	 * 比较t1与t2的大小t1>t2 true
+	 * 
+	 * @param t1
+	 * @param t2
+	 * @return
+	 */
+	public static boolean compareTime(String t1, String t2) {
+		DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
+		Calendar c1 = Calendar.getInstance();
+		Calendar c2 = Calendar.getInstance();
+		try {
+			c1.setTime(df.parse(t1));
+			c2.setTime(df.parse(t2));
+		} catch (ParseException e) {
+		}
+		int result = c1.compareTo(c2);
+        return result <= 0;
+
+    }
+
+	/**
+	 * 计算前推几天未来
+	 * 
+	 * @param days
+	 * @return
+	 */
+	public static String getDate(int days) {
+
+		Calendar calendar = Calendar.getInstance();
+		calendar.add(Calendar.DATE, days);
+		SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
+		return sf.format(calendar.getTime());
+	}
+
+	/**
+	 * 计算后推几天过去
+	 * 
+	 * @param days
+	 * @return
+	 */
+	public static String getDateG(int days) {
+
+		Calendar calendar = Calendar.getInstance();
+		calendar.add(Calendar.DATE, -days);
+		SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
+		return sf.format(calendar.getTime());
+	}
+
+	/**
+	 * 传入开始时间和结束时间字符串来计算消耗时长
+	 */
+	public static String getTimeApart(long startTime, long endTime){
+		long longExpend = endTime - startTime;  //获取时间差
+		long longHours = longExpend / (60 * 60 * 1000); //根据时间差来计算小时数
+		long longMinutes = (longExpend - longHours * (60 * 60 * 1000)) / (60 * 1000);   //根据时间差来计算分钟数
+		return longHours + ":" + longMinutes;
+	}
+
+	/**
+	 * return  单位毫秒
+	 */
+	public static long getTimeExpend(long longStart, long longEnd){
+		return  longEnd-longStart;
+	}
+}
Index: app/src/main/java/hshealthy/cn/com/util/MD5Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/MD5Utils.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/MD5Utils.java	(revision )
@@ -0,0 +1,109 @@
+package hshealthy.cn.com.util;
+
+
+import java.security.MessageDigest;
+import java.security.NoSuchAlgorithmException;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+
+import hshealthy.cn.com.digest.DigestUtils;
+
+
+/**
+ * MD5加密
+ */
+
+public class MD5Utils {
+
+    private static final String SignType = "MD5";
+    private static final String inputCharset = "UTF-8";
+    private MD5Utils() {
+        throw new UnsupportedOperationException("cannot be instantiated");
+    }
+
+    /**
+     * MD5加密
+     */
+    public static String getSign(String md5_key, Map<String, String> dataMap) throws Exception {
+        List<String> keyList = new ArrayList<>(dataMap.keySet());
+        Collections.sort(keyList);
+        StringBuilder builder = new StringBuilder();
+        for (String mapKey : keyList) {
+            if (!(dataMap.get(mapKey).length()< dataMap.get(mapKey).getBytes().length)) {
+                builder.append(dataMap.get(mapKey));
+            }
+        }
+        builder.append(md5_key);
+        MessageDigest md5 = MessageDigest.getInstance(SignType);
+        md5.update(builder.toString().getBytes(inputCharset));
+        byte[] md5Bytes = md5.digest();
+        StringBuffer hexValue = new StringBuffer();
+        for (int i = 0; i < md5Bytes.length; i++) {
+            int val = ((int) md5Bytes[i]) & 0xff;
+            if (val < 16) {
+                hexValue.append("0");
+            }
+            hexValue.append(Integer.toHexString(val));
+        }
+        return hexValue.toString();
+    }
+        /**
+     * 生成签名
+     *
+     * @return 签名
+     */
+    public static String genSign(Map<String, String> map, String md5key) {
+        List<String> keys = sortKeyList(map);//排序key
+        String content = "key=" + md5key;//密钥排第一位
+        for (String key : keys) {
+            if ("sign".equals(key) || "data".equals(key))
+                continue;
+            content += "&" + key + "="
+                    + (null == map.get(key) ? "" : String.valueOf(map.get(key)));
+        }
+        return DigestUtils.md5Hex(content);
+    }
+
+
+
+    public static List<String> sortKeyList(Map<String, String> map) {
+        List<String> list = new ArrayList<>(map.keySet());
+        Collections.sort(list,String.CASE_INSENSITIVE_ORDER);//按字符排序，不区分大小写
+        return list;
+    }
+    /**
+     *
+     * @param plainText
+     *            明文
+     * @return 32位密文
+     */
+    public static String encryption(String plainText) {
+        String re_md5 = new String();
+        try {
+            MessageDigest md = MessageDigest.getInstance("MD5");
+            md.update(plainText.getBytes());
+            byte b[] = md.digest();
+
+            int i;
+
+            StringBuffer buf = new StringBuffer("");
+            for (int offset = 0; offset < b.length; offset++) {
+                i = b[offset];
+                if (i < 0)
+                    i += 256;
+                if (i < 16)
+                    buf.append("0");
+                buf.append(Integer.toHexString(i));
+            }
+
+            re_md5 = buf.toString();
+
+        } catch (NoSuchAlgorithmException e) {
+            e.printStackTrace();
+        }
+        return re_md5;
+    }
+}
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision )
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="hshealthy.cn.com">
+
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:roundIcon="@mipmap/ic_launcher_round"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme">
+        <activity
+            android:name=".activity.HomeActivity"
+            android:label="@string/app_name">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+    </application>
+
+</manifest>
\ No newline at end of file
Index: app/src/main/java/hshealthy/cn/com/view/LoginView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/view/LoginView.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/view/LoginView.java	(revision )
@@ -0,0 +1,12 @@
+package hshealthy.cn.com.view;
+
+import hshealthy.cn.com.base.BaseView;
+
+/**
+ * Created by 71443 on 2018/5/29.
+ * 登录view
+ */
+
+public class LoginView implements BaseView {
+
+}
Index: app/src/main/java/hshealthy/cn/com/util/DES3Util.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/DES3Util.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/DES3Util.java	(revision )
@@ -0,0 +1,173 @@
+package hshealthy.cn.com.util;
+
+
+import java.security.InvalidKeyException;
+import java.security.Key;
+import java.security.NoSuchAlgorithmException;
+import java.security.SecureRandom;
+import javax.crypto.BadPaddingException;
+import javax.crypto.Cipher;
+import javax.crypto.IllegalBlockSizeException;
+import javax.crypto.KeyGenerator;
+import javax.crypto.NoSuchPaddingException;
+import javax.crypto.SecretKey;
+import javax.crypto.SecretKeyFactory;
+import javax.crypto.spec.DESedeKeySpec;
+import javax.crypto.spec.IvParameterSpec;
+
+import hshealthy.cn.com.api.UrlHelper;
+
+/** 
+ * 3DES加密工具类 
+ */  
+public class DES3Util { 
+
+    // 加解密统一使用的编码方式
+    private final static String encoding = "utf-8";
+    private static final String DES_ALGORITHM = "DES";
+    /** 
+     * 3DES加密 
+     *  
+     * @param plainText 普通文本 
+     * @return 
+     * @throws Exception  
+     */  
+    public static String encode(String plainText) throws Exception {  
+        Key deskey = null;  
+        DESedeKeySpec spec = new DESedeKeySpec(UrlHelper.APP_DATA_DES3_SECRET_KEY.getBytes());
+        SecretKeyFactory keyfactory = SecretKeyFactory.getInstance("desede");  
+        deskey = keyfactory.generateSecret(spec);  
+  
+        Cipher cipher = Cipher.getInstance("desede/CBC/PKCS5Padding");  
+        IvParameterSpec ips = new IvParameterSpec(UrlHelper.APP_DATA_DES3_VI.getBytes());
+        cipher.init(Cipher.ENCRYPT_MODE, deskey, ips);  
+        byte[] encryptData = cipher.doFinal(plainText.getBytes(encoding));
+        return Base64Util.encode(encryptData);  
+    }
+
+
+    /** 
+     * 3DES解密 
+     *  
+     * @param encryptText 加密文本 
+     * @return 
+     * @throws Exception
+     *
+     */  
+    public static String decode(String encryptText) throws Exception {
+        Key deskey = null;
+        DESedeKeySpec spec = new DESedeKeySpec(UrlHelper.APP_DATA_DES3_SECRET_KEY.getBytes());
+        SecretKeyFactory keyfactory = SecretKeyFactory.getInstance("desede");
+        deskey = keyfactory.generateSecret(spec);  
+        Cipher cipher = Cipher.getInstance("desede/CBC/PKCS5Padding");
+        IvParameterSpec ips = new IvParameterSpec(UrlHelper.APP_DATA_DES3_VI.getBytes());
+        cipher.init(Cipher.DECRYPT_MODE, deskey, ips);  
+
+        byte[] decryptData = cipher.doFinal(Base64Util.decode(encryptText));
+  
+        return new String(decryptData, encoding);  
+    }
+
+    /**
+     * DES解密
+     * @param secretData
+     * @return
+     * @throws Exception
+     */
+    public static String decryption(String secretData) throws Exception{
+
+        Cipher cipher = null;
+        try {
+            cipher = Cipher.getInstance(DES_ALGORITHM);
+            cipher.init(Cipher.DECRYPT_MODE, generateKey(UrlHelper.APP_DATA_DES3_SECRET_KEY));
+        } catch (NoSuchAlgorithmException e) {
+            e.printStackTrace();
+            throw new Exception("NoSuchAlgorithmException", e);
+        } catch (NoSuchPaddingException e) {
+            e.printStackTrace();
+            throw new Exception("NoSuchPaddingException", e);
+        }catch(InvalidKeyException e){
+            e.printStackTrace();
+            throw new Exception("InvalidKeyException", e);
+
+        }
+
+        try {
+
+            byte[] buf = cipher.doFinal(Base64Util.decode(secretData));
+
+            return new String(buf);
+
+        } catch (IllegalBlockSizeException e) {
+            e.printStackTrace();
+            throw new Exception("IllegalBlockSizeException", e);
+        } catch (BadPaddingException e) {
+            e.printStackTrace();
+            throw new Exception("BadPaddingException", e);
+        }
+    }
+    /**
+     * 获得秘密密钥
+     *
+     * @param secretKey
+     * @return
+     * @throws NoSuchAlgorithmException
+     */
+    private static  SecretKey generateKey(String secretKey) throws NoSuchAlgorithmException{
+        SecureRandom secureRandom = new SecureRandom(secretKey.getBytes());
+
+        // 为我们选择的DES算法生成一个KeyGenerator对象
+        KeyGenerator kg = null;
+        try {
+            kg = KeyGenerator.getInstance(DES_ALGORITHM);
+        } catch (NoSuchAlgorithmException e) {
+        }
+        kg.init(secureRandom);
+        //kg.init(56, secureRandom);
+
+        // 生成密钥
+        return kg.generateKey();
+    }
+
+    /**
+     * 3DES加密
+     *
+     * @param plainText 普通文本
+     * @return
+     * @throws Exception
+     */
+    public static String encodeShop(String plainText) throws Exception {
+        Key deskey = null;
+        DESedeKeySpec spec = new DESedeKeySpec(UrlHelper.APP_DATA_DES3_SECRET_KEY.getBytes());
+        SecretKeyFactory keyfactory = SecretKeyFactory.getInstance("DESede");
+        deskey = keyfactory.generateSecret(spec);
+
+        Cipher cipher = Cipher.getInstance("desede/CBC/PKCS5Padding");
+        IvParameterSpec ips = new IvParameterSpec(UrlHelper.APP_DATA_DES3_VI.getBytes());
+        cipher.init(Cipher.ENCRYPT_MODE, deskey, ips);
+        byte[] encryptData = cipher.doFinal(plainText.getBytes(encoding));
+        return Base64Util.encode(encryptData);
+    }
+
+    /**
+     * 3DES解密 （电商）
+     *
+     * @param encryptText 加密文本
+     * @return
+     * @throws Exception
+     */
+    public static String decodeShop(String encryptText) throws Exception {
+        Key deskey = null;
+        DESedeKeySpec spec = new DESedeKeySpec(UrlHelper.APP_DATA_DES3_SECRET_KEY.getBytes());
+        SecretKeyFactory keyfactory = SecretKeyFactory.getInstance("desede");
+        deskey = keyfactory.generateSecret(spec);
+        Cipher cipher = Cipher.getInstance("desede/CBC/PKCS5Padding");
+        IvParameterSpec ips = new IvParameterSpec(UrlHelper.APP_DATA_DES3_VI.getBytes());
+        cipher.init(Cipher.DECRYPT_MODE, deskey, ips);
+
+        byte[] decryptData = cipher.doFinal(Base64Util.decode(encryptText));
+
+        return new String(decryptData, encoding);
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/hshealthy/cn/com/http/ExceptionEngine.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/http/ExceptionEngine.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/http/ExceptionEngine.java	(revision )
@@ -0,0 +1,81 @@
+package hshealthy.cn.com.http;
+
+import android.net.ParseException;
+
+import org.apache.http.conn.ConnectTimeoutException;
+import org.json.JSONException;
+
+import java.net.ConnectException;
+import java.net.SocketTimeoutException;
+
+/**
+ * ExceptionEngine
+ */
+public class ExceptionEngine {
+    //对应HTTP的状态码
+    private static final int FAIL = 1;
+    private static final int UNAUTHORIZED = 401;
+    private static final int FORBIDDEN = 403;
+    private static final int NOT_FOUND = 404;
+    private static final int REQUEST_TIMEOUT = 408;
+    private static final int INTERNAL_SERVER_ERROR = 500;
+    private static final int BAD_GATEWAY = 502;
+    private static final int SERVICE_UNAVAILABLE = 503;
+    private static final int GATEWAY_TIMEOUT = 504;
+
+    public static ApiException handleException(Throwable e) {
+        ApiException ex;
+        if (e instanceof ServerException) {//HTTP错误
+            ServerException httpException = (ServerException) e;
+            ex = new ApiException(e, ErrorType.HTTP_ERROR);
+            switch (httpException.code) {
+                case FAIL:
+                    ex.message = "userName or passWord is error!";
+                    break;
+                case UNAUTHORIZED:
+                    ex.message = "当前请求需要用户验证";
+                    break;
+                case FORBIDDEN:
+                    ex.message = "服务器已经理解请求，但是拒绝执行它";
+                    break;
+                case NOT_FOUND:
+                    ex.message = "服务器异常，请稍后再试";
+                    break;
+                case REQUEST_TIMEOUT:
+                    ex.message = "请求超时";
+                    break;
+                case GATEWAY_TIMEOUT:
+                    ex.message = "作为网关或者代理工作的服务器尝试执行请求时，未能及时从上游服务器（URI标识出的服务器，例如HTTP、FTP、LDAP" +
+                            "）或者辅助服务器（例如DNS）收到响应";
+                    break;
+                case INTERNAL_SERVER_ERROR:
+                    ex.message = "服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理";
+                    break;
+                case BAD_GATEWAY:
+                    ex.message = "作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应";
+                    break;
+                case SERVICE_UNAVAILABLE:
+                    ex.message = "由于临时的服务器维护或者过载，服务器当前无法处理请求";
+                    break;
+                default:
+                    ex.message = "网络错误";  //其它均视为网络错误
+                    break;
+            }
+            return ex;
+        } else if (e instanceof JSONException || e instanceof ParseException) {
+            ex = new ApiException(e, ErrorType.PARSE_ERROR);
+            ex.message = "解析错误";            //均视为解析错误
+            return ex;
+        } else if (e instanceof ConnectException || e instanceof SocketTimeoutException || e instanceof ConnectTimeoutException) {
+            ex = new ApiException(e, ErrorType.NETWORK_ERROR);
+            ex.message = "连接失败";  //均视为网络错误
+            return ex;
+        } else {
+            ex = new ApiException(e, ErrorType.UNKONW);
+            ex.message = "未知错误";          //未知错误
+            return ex;
+        }
+    }
+
+}
+
Index: app/src/androidTest/java/hshealthy/cn/com/ExampleInstrumentedTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/hshealthy/cn/com/ExampleInstrumentedTest.java	(revision )
+++ app/src/androidTest/java/hshealthy/cn/com/ExampleInstrumentedTest.java	(revision )
@@ -0,0 +1,26 @@
+package hshealthy.cn.com;
+
+import android.content.Context;
+import android.support.test.InstrumentationRegistry;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.*;
+
+/**
+ * Instrumented test, which will execute on an Android device.
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+@RunWith(AndroidJUnit4.class)
+public class ExampleInstrumentedTest {
+    @Test
+    public void useAppContext() throws Exception {
+        // Context of the app under test.
+        Context appContext = InstrumentationRegistry.getTargetContext();
+
+        assertEquals("hshealthy.cn.com", appContext.getPackageName());
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/activity/HomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/activity/HomeActivity.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/activity/HomeActivity.java	(revision )
@@ -0,0 +1,118 @@
+package hshealthy.cn.com.activity;
+
+import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.design.widget.BottomNavigationView;
+import android.support.v4.view.ViewPager;
+import android.support.v7.app.AppCompatActivity;
+import android.view.KeyEvent;
+import android.view.MenuItem;
+
+import hshealthy.cn.com.R;
+import hshealthy.cn.com.adapter.ViewPagerAdapter;
+import hshealthy.cn.com.fragment.BaseFragment;
+import hshealthy.cn.com.util.ToastUtils;
+import hshealthy.cn.com.view.BottomNavigationViewHelper;
+
+/**
+ * HomeActivity 主界面
+ */
+
+public class HomeActivity extends AppCompatActivity {
+    private long firstTime = 0;
+    private ViewPager viewPager;
+    private MenuItem menuItem;
+    private BottomNavigationView bottomNavigationView;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_home);
+
+        viewPager = (ViewPager) findViewById(R.id.viewpager);
+        bottomNavigationView = (BottomNavigationView) findViewById(R.id.bottom_navigation);
+        //默认 >3 的选中效果会影响ViewPager的滑动切换时的效果，故利用反射去掉
+        BottomNavigationViewHelper.disableShiftMode(bottomNavigationView);
+        bottomNavigationView.setOnNavigationItemSelectedListener(
+                new BottomNavigationView.OnNavigationItemSelectedListener() {
+                    @Override
+                    public boolean onNavigationItemSelected(@NonNull MenuItem item) {
+                        switch (item.getItemId()) {
+                            case R.id.item_home:
+                                viewPager.setCurrentItem(0);
+                                break;
+                            case R.id.item_expert:
+                                viewPager.setCurrentItem(1);
+                                break;
+                            case R.id.item_healthy:
+                                viewPager.setCurrentItem(2);
+                                break;
+                            case R.id.item_personal:
+                                viewPager.setCurrentItem(3);
+                                break;
+                        }
+                        return false;
+                    }
+                });
+
+        viewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {
+            @Override
+            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
+
+            }
+
+            @Override
+            public void onPageSelected(int position) {
+                if (menuItem != null) {
+                    menuItem.setChecked(false);
+                } else {
+                    bottomNavigationView.getMenu().getItem(0).setChecked(false);
+                }
+                menuItem = bottomNavigationView.getMenu().getItem(position);
+                menuItem.setChecked(true);
+            }
+
+            @Override
+            public void onPageScrollStateChanged(int state) {
+            }
+        });
+
+        //禁止ViewPager滑动
+//        viewPager.setOnTouchListener(new View.OnTouchListener() {
+//            @Override
+//            public boolean onTouch(View v, MotionEvent event) {
+//                return true;
+//            }
+//        });
+
+        setupViewPager(viewPager);
+    }
+
+    private void setupViewPager(ViewPager viewPager) {
+        ViewPagerAdapter adapter = new ViewPagerAdapter(getSupportFragmentManager());
+
+        adapter.addFragment(BaseFragment.newInstance("首页"));
+        adapter.addFragment(BaseFragment.newInstance("专家"));
+        adapter.addFragment(BaseFragment.newInstance("健康"));
+        adapter.addFragment(BaseFragment.newInstance("我的"));
+        viewPager.setAdapter(adapter);
+    }
+
+
+
+    //连按两次退出程序
+    @Override
+    public boolean onKeyDown(int keyCode, KeyEvent event) {
+        long secondTime = System.currentTimeMillis();
+        if (keyCode == KeyEvent.KEYCODE_BACK) {
+            if ( secondTime - firstTime < 2000) {
+                System.exit(0);
+            } else {
+                ToastUtils.showLongToast(HomeActivity.this,"再按一次退出程序");
+                firstTime = System.currentTimeMillis();
+            }
+            return true;
+        }
+        return super.onKeyDown(keyCode, event);
+    }
+}
\ No newline at end of file
Index: app/src/main/java/hshealthy/cn/com/http/ErrorTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/http/ErrorTransformer.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/http/ErrorTransformer.java	(revision )
@@ -0,0 +1,54 @@
+package hshealthy.cn.com.http;
+
+
+import hshealthy.cn.com.base.BaseHttpResult;
+import hshealthy.cn.com.util.LogUtils;
+import rx.Observable;
+import rx.functions.Func1;
+
+/**
+ * ErrorTransformer
+ */
+public class ErrorTransformer<T> implements Observable.Transformer<BaseHttpResult<T>, T> {
+
+    private static ErrorTransformer errorTransformer = null;
+    private static final String TAG = "ErrorTransformer";
+
+    @Override
+    public Observable<T> call(Observable<BaseHttpResult<T>> responseObservable) {
+        return responseObservable.map(new Func1<BaseHttpResult<T>, T>() {
+            @Override
+            public T call(BaseHttpResult<T> httpResult) {
+                if (httpResult == null)
+                    throw new ServerException(ErrorType.EMPTY_BEAN, "解析对象为空");
+
+                LogUtils.e(TAG, httpResult.toString());
+
+                if (httpResult.getCode() != ErrorType.SUCCESS)
+                    throw new ServerException(httpResult.getCode(), httpResult.getMessage());
+                return httpResult.getData();
+            }
+        }).onErrorResumeNext(new Func1<Throwable, Observable<? extends T>>() {
+            @Override
+            public Observable<? extends T> call(Throwable throwable) {
+                //ExceptionEngine为处理异常的驱动器
+                throwable.printStackTrace();
+                return Observable.error(ExceptionEngine.handleException(throwable));
+            }
+        });
+    }
+
+    /**
+     * @return 线程安全, 双层校验
+     */
+    public static <T> ErrorTransformer<T> getInstance() {
+        if (errorTransformer == null) {
+            synchronized (ErrorTransformer.class) {
+                if (errorTransformer == null) {
+                    errorTransformer = new ErrorTransformer<>();
+                }
+            }
+        }
+        return errorTransformer;
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/digest/BinaryDecoder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/digest/BinaryDecoder.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/digest/BinaryDecoder.java	(revision )
@@ -0,0 +1,11 @@
+package hshealthy.cn.com.digest;
+
+
+
+/**
+ * Created by chen.sun on 2017/9/27.
+ */
+
+public interface BinaryDecoder extends Decoder {
+    byte[] decode(byte[] var1) throws DecoderException;
+}
Index: gradlew
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradlew	(revision )
+++ gradlew	(revision )
@@ -0,0 +1,160 @@
+#!/usr/bin/env bash
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn ( ) {
+    echo "$*"
+}
+
+die ( ) {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+esac
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=$((i+1))
+    done
+    case $i in
+        (0) set -- ;;
+        (1) set -- "$args0" ;;
+        (2) set -- "$args0" "$args1" ;;
+        (3) set -- "$args0" "$args1" "$args2" ;;
+        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
+function splitJvmOpts() {
+    JVM_OPTS=("$@")
+}
+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
+JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+
+exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision )
+++ .idea/gradle.xml	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="distributionType" value="DEFAULT_WRAPPED" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+            <option value="$PROJECT_DIR$/app" />
+          </set>
+        </option>
+        <option name="resolveModulePerSourceSet" value="false" />
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/java/hshealthy/cn/com/activity/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/activity/LoginActivity.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/activity/LoginActivity.java	(revision )
@@ -0,0 +1,44 @@
+package hshealthy.cn.com.activity;
+
+import android.view.View;
+
+import hshealthy.cn.com.R;
+import hshealthy.cn.com.base.BaseActivity;
+import hshealthy.cn.com.base.BasePresenter;
+
+/**
+ * Created by 71443 on 2018/5/29.
+ * 登录界面
+ */
+
+public class LoginActivity extends BaseActivity {
+    @Override
+    protected BasePresenter loadPresenter() {
+        return null;
+    }
+
+    @Override
+    protected void initData() {
+
+    }
+
+    @Override
+    protected void initListener() {
+
+    }
+
+    @Override
+    protected void initView() {
+
+    }
+
+    @Override
+    protected int getLayoutId() {
+        return R.layout.hst_login_view;
+    }
+
+    @Override
+    protected void otherViewClick(View view) {
+
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/util/DensityUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/DensityUtil.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/DensityUtil.java	(revision )
@@ -0,0 +1,57 @@
+package hshealthy.cn.com.util;
+
+import android.content.Context;
+import android.util.TypedValue;
+
+/**
+ * Created by MuMu on 16/9/24.
+ */
+public class DensityUtil {
+
+    /**
+     * dp转px
+     *
+     * @param context
+     * @param dpVal
+     * @return
+     */
+    public static int dp2px(Context context, int dpVal) {
+        return (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dpVal, context.getResources()
+                .getDisplayMetrics());
+    }
+
+    /**
+     * sp转px
+     *
+     * @param context
+     * @param spVal
+     * @return
+     */
+    public static int sp2px(Context context, float spVal) {
+        return (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, spVal, context.getResources()
+                .getDisplayMetrics());
+    }
+
+    /**
+     * px转dp
+     *
+     * @param context
+     * @param pxVal
+     * @return
+     */
+    public static float px2dp(Context context, float pxVal) {
+        final float scale = context.getResources().getDisplayMetrics().density;
+        return (pxVal / scale);
+    }
+
+    /**
+     * px转sp
+     *
+     * @param pxVal
+     * @param pxVal
+     * @return
+     */
+    public static float px2sp(Context context, float pxVal) {
+        return (pxVal / context.getResources().getDisplayMetrics().scaledDensity);
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/base/IPresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/base/IPresenter.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/base/IPresenter.java	(revision )
@@ -0,0 +1,22 @@
+package hshealthy.cn.com.base;
+
+/**
+ * MVP --> BasePresenter --> IPresenter
+ * Created by Administrator on 2016/12/15.
+ */
+public interface IPresenter<V extends BaseView> {
+    /**
+     * @param view 绑定
+     */
+    void attachView(V view);
+
+    /**
+     * 防止内存的泄漏,清楚presenter与activity之间的绑定
+     */
+    void detachView();
+
+    /**
+     * @return 获取View
+     */
+    BaseView getView();
+}
Index: app/src/main/res/layout/fragment_base.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_base.xml	(revision )
+++ app/src/main/res/layout/fragment_base.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <TextView
+        android:id="@+id/textView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerInParent="true"/>
+
+</RelativeLayout>
\ No newline at end of file
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/runConfigurations.xml	(revision )
+++ .idea/runConfigurations.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RunConfigurationProducerService">
+    <option name="ignoredProducers">
+      <set>
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/java/hshealthy/cn/com/adapter/ViewPagerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/adapter/ViewPagerAdapter.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/adapter/ViewPagerAdapter.java	(revision )
@@ -0,0 +1,36 @@
+package hshealthy.cn.com.adapter;
+
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentPagerAdapter;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * ViewPagerAdapter
+ */
+
+public class ViewPagerAdapter extends FragmentPagerAdapter {
+
+    private final List<Fragment> mFragmentList = new ArrayList<>();
+
+    public ViewPagerAdapter(FragmentManager manager) {
+        super(manager);
+    }
+
+    @Override
+    public Fragment getItem(int position) {
+        return mFragmentList.get(position);
+    }
+
+    @Override
+    public int getCount() {
+        return mFragmentList.size();
+    }
+
+    public void addFragment(Fragment fragment) {
+        mFragmentList.add(fragment);
+    }
+
+}
Index: app/src/main/java/hshealthy/cn/com/MyApp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/MyApp.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/MyApp.java	(revision )
@@ -0,0 +1,26 @@
+package hshealthy.cn.com;
+
+import android.app.Application;
+import android.content.Context;
+
+/**
+ * Created by 71443 on 2018/5/28.
+ */
+
+public class MyApp extends Application {
+
+    private static Context appContext;
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        appContext = this;
+    }
+
+    /**
+     * @return 全局的上下文
+     */
+    public static Context getAppContext() {
+        return appContext;
+    }
+}
Index: app/src/main/java/hshealthy/cn/com/util/ToastUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hshealthy/cn/com/util/ToastUtil.java	(revision )
+++ app/src/main/java/hshealthy/cn/com/util/ToastUtil.java	(revision )
@@ -0,0 +1,29 @@
+package hshealthy.cn.com.util;
+
+import android.widget.Toast;
+import hshealthy.cn.com.MyApp;
+
+/**
+ * Toast 相关工具类
+ */
+public class ToastUtil {
+    public static Toast toast;
+
+    public static void setToast(String str) {
+        if (toast == null) {
+            toast = Toast.makeText(MyApp.getAppContext(), str, Toast.LENGTH_SHORT);
+        } else {
+            toast.setText(str);
+        }
+        toast.show();
+    }
+
+    public static void setToast(int contentId) {
+        if (toast == null) {
+            toast = Toast.makeText(MyApp.getAppContext(), contentId, Toast.LENGTH_SHORT);
+        } else {
+            toast.setText(contentId);
+        }
+        toast.show();
+    }
+}
Index: app/src/test/java/hshealthy/cn/com/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/hshealthy/cn/com/ExampleUnitTest.java	(revision )
+++ app/src/test/java/hshealthy/cn/com/ExampleUnitTest.java	(revision )
@@ -0,0 +1,17 @@
+package hshealthy.cn.com;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
diff --git app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..8e19b410a1b15ff180f3dacac19395fe3046cdec
GIT binary patch
literal 10676
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
a9sdtN6eHRrdyqB&0000<MNUMnLSTYHIB(_v

diff --git app/src/main/res/mipmap-xhdpi/ic_launcher.png app/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..dcd3cd8083358269d6ed7894726283bb9bcbbfea
GIT binary patch
literal 4569
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
D5i!M*

diff --git app/src/main/res/mipmap-xxhdpi/ic_launcher.png app/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..324e72cdd7480cb983fa1bcc7ce686e51ef87fe7
GIT binary patch
literal 7718
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

diff --git app/src/main/res/mipmap-xxhdpi/ic_library_gray.png app/src/main/res/mipmap-xxhdpi/ic_library_gray.png
new file mode 100644
index 0000000000000000000000000000000000000000..9cddbe1ed4631880367c6ec7b6ad0e1116fa4e21
GIT binary patch
literal 620
zc$@)j0+aoTP)<h;3K|Lk000e1NJLTq002k;002k`1^@s6RqeA!0006rNkl<ZcwX(A
z-EG1!6h^Pf0*t^4k<2?Ibc3=%VS>U0r5n%<7=d>zWrdEw0ubbi2bwlq=lU1)<rO)$
zkI%I~M<~K`mw*DF`vd@pF(f;nrfJ6K^ZBi9+qqI|I~t8X>$*OcVs=(Q#+X+k+7QwB
z28e~T&{}_$04WQgE0`4#P3}PWCZbhtP)Pw9V_t~pg8|cJW<f2r*1H@=B>{9e9A-+X
zcOsg3Omg40?Rq+$?mgZyxM@^CfxvVpl@wGIKuyz3PN$PCC0kOlo?TT{%et;@2}XN@
z0=j~+r8JK=;=eE6R#ml*1u6(2n`N%Xqy*DNWkFe^f@UZ$KsO<8(aACi1^U(1Q7N?v
z88$_L3Ix+#kYJz&1L{e?xs2iZ^-kr^fE?2=H{e{qi&HrZNSJ<ef#CWboXUFvMGAS`
z1XBI(95#Ca8DrX1qs`Ti)|#y#0Af}LfB>kU07{Ip1At-z%5}1o)-QX^l{Vni;{hP)
zDVBPrO6?B@!5}|32OH#aM{~&+rM;&QBLIaivC>vP)OcW!a4SNIp~Q$>4h@tTO3d%O
z4-A4qFz8<b$U#hL01yEA?Hw=(2Em}Hrw>XDC5941iFFCMd|n8(cZ7ORu*<6O&iAm*
z27gg}*qI6k4nUzlxe6EJVVl7q8004}{=_LY$R%I+txf*cE_n?G!63i89t?s(Fi5=H
zW0Pjk0Z>dpVsD?UA?{+*Q|!q^5KjjN!630bKMi3J!|wu^3%FR5UY}n80000<MNUMn
GLSTaQQ3RR*

diff --git app/src/main/res/mipmap-mdpi/ic_launcher.png app/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..ff10afd6e182edb2b1a63c8f984e9070d9f950ba
GIT binary patch
literal 2096
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
axPAxe%7rDusX+w*0000<MNUMnLSTa3f$up0

diff --git app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..4c19a13c239cb67b8a2134ddd5f325db1d2d5bee
GIT binary patch
literal 15523
zc${rpbyyT%xIVkU(y(-wfPl25<kBE13MefoB8_w}p>zonQVU3_bobJzbayLANOxU+
z_x^k5nK?6mocUtDIq&zr&pZ>ZqoqQKM~eplAXHOT)V({S|2uGCccbo{9X0?`HfoA;
z&pc;#GO&%wd#HMbIrTfCl-`dJXi5<!&9(>%^-e`gQjrtWvSiehrILi|F0%<j5guLm
z#8N#foa<JYjBJ!Fx_$m?y?=nwr{{Q9l4$<gcL7`c-$~6?i_mU!s+X<ReY^Jmch8^v
zphH%PM(10lrVb*{pTR^&yQc=@{m?BTno}At)|hAflUdU)D|3GPbX<n`4R$RqKYcN+
zfmE2Htx}p)T)V!<ns%yzyT$xCrp84xg2YWbX8Ug@>0y)6<4$fyuJ~Z3zwxZ-B@a)+
z8|>Y{)Alz@m1V@5OK@+3m#YD*RsVi2jBpE<NBcbf9{EOjtV~d8dRK#|e|jaA(rrvy
zWV24i##Q9T3xD=>%D?9XK5J=bVMl5g_Bo{GB&B8D<093_m8oZ5H#dgpr`p29eZ>Ju
z{@-~7!Mh>5`tHWMVn5-{@nzD}IoSJf17*`^&d$7-`5fLS0}*Ls9ISkM(|vWWc48N=
zy63mjC^-Cg6!|_Inj$Y=cd=d>`uz$UpCkA6x0a)wzTIng74+rs6{E+XSKsXm3BRsb
zZRimE$y6(gUk-xHxF)1l&9HysV&2@@a6iRmuOH<|?<MRi_7SOBEMxJ)*e`u##x?C)
z{#dGBxYpg`NBInHSA}S~xY76U9|1AGl)H`te=YXA@e9}wzdnx7u|)Og6ZYWs5cHI6
zq?2cSE0catha=aL$7Jw)%G=Yw8?}t}*XRSKRXVMH$_>8gvq8KOn^1}`lW|$+MHY+g
z1n|~Z>%U#BpFM%SEk3V#LD4fjz&-x4zCfL=W8Z`5*E&7MO>5BV71jV`0BZnuKy&^a
zfA%T7kJJN6#wm}QmOkD9u~jL|u~i$9Q#TzS*1k`$@_y~cxZIp#n}SbzFP-v;n?yhd
z^iZaM1yyfueWy}#G%5mGSM0``Z*JNDaXHz=i~K7(d%i3(y?Pt_s5XUJ+#q$yuuX)d
zhGVRMxdj%;M)WY*vhCS2;!svg2k*YSdiYm2?Qn9-j+F?-uYLHDcK)xq43FEmpur8N
zTNXo==$jsfL3zf_MSf@XnD3I<(=M091F7kfEwF=Td1lhNT#h%EqrvGDM2lxE|K2`v
zevWgx7V>0^h?kSqySVdh5a^{wgLP$Oob<Yn6YtVzCm#@SzIER&S}3jKcn4!ZPb=%)
z!_pi{oM-p3iqbad$Uua7oO)Ld<6l9FUjv`CvwZ6L^x+jM(ZU{sH(Za2974M)%vJq2
ztC5>{!g)NzPk>F45A(7@dNeMe5#wU7NZO$g0M_T&zpeMDD{L433gVkQWaWMBtqTcJ
zhR=-<!om?}XWjl#F)9qC03anm5W*1cwc>PK;Gw{gYHZ01_Zs6M2!a||v&jV7_A)q;
z1-*WHd^nvJ6tKeQPut>^T<<^xLs^a2<AvXb8-J7|0fmlEbH4^M6M1A@a$p!}w^+W$
zJZ0_Qrj{%+0&V(Psg`7J@(vLY*WHh8UR;V&P+$YZT}XMqN<h|GvrFR1G3#oaqTer|
zF-1%Eq(@?AmgvYMc1TpNMCQ`C0g3@E%(<9Dtxg)+MTp+pmTZ{fq{SQgohBC6?h&3F
zDxba5Q9b#C2R0xenq&=eMqAQ6L`OY4S&;VTaTIF{F3rP7z7$0o5YP;X%h&ncP5N-j
zl(Rvl-HJIGyH?6^2|vIfwUHH=i-W{EC6DDy9KQHKW5yc2z$Rg$&i3(oNhnYTh(M#Y
zcv=b;2FWF>KOvd{$tsC(L14DFHB)r~1u$&H6Gx|h5m8sv66yZtf#N_H)rq6Mksk!G
zLYO6+p~$mYUKZcXCDOm#H+PVC7W8kjdYlRfFoI)mj5BG$D`aZxtq>H`Fue7nG3Ray
z27|NtCywOba!_!e2pqw<;;VTu9rjty|6M|hF>!>aphagU3GzzmMFiEa+UhdJ3;@~_
zjMXb@<o-^g_V0RR7mHmRNG4jZLCk&Ak~(}nH=5Hj(z8eftUbYIh2k2c1x|a5JMrRS
zQ&l$EL&f9Kbnd}KLO(vqn>P<`dVCj*AxIbmS>3aic|YV@>OSiP)xYZ2xcegCxJBRB
zdi;#If_~+`X#;zF{&y3xkqEGr$U&ZWTUo|wOPaRk>CIATd!BZr8u|Im;q`up$U66M
zWDlvW)c*UGS(HutrVGW!afQ@7m-7W#o)9z73(WJF1saujmVuW%lrq}^@@k@xnBD6R
z=TdQ_n50ZD*7c6lo92;RTNK1lPw&LZNq3CA?o@jRNppOj)+eqfPSn}DJEKH?{A2uc
zSKV={^VcvBd^GQywSI2SjgCrdt1jn-(_056K?&a-g#(7l{oN1Zp@emT$ZN+Io%dF>
z=C@9BFU9zBStt2v*66MD$+OYKgA+@aQBbWcPjPn1zam43rBO=i$`!M7xpVXFlPf}A
z*)ZAPm9fM5hXrb4gS9(#N07($ehFd1OTl;xr>(HszVa+%*2VG@<M(m{FLys3zPi1X
zZ7`3!?s&xJ=Z(>|*r4UV?sGeY!_eeSlIMTo-0$E^^h=B4R)|Bg>$E5cncw#LNIhcv
z(pdjWd+9KEw(_hGx9V^E+X~nH`tRZk{iWiO+f0Tz>-!!D&9{&qQaJ3hZx6~c9QG)b
zYswFKt<C$ZC*UxE2xH&5v?rRR?ghsF`Cjww`o3VRo+)DBrLLM5Vbg?|;FW3V^{g4D
zrqn){t~+zcpYvApO6eu0Ac5>p$ViJYpo<ekCxvsrN2+{{`cdez_<h#t>@^&=2$`!-
zqXX!F+9&2Tnr;#y@7>TG{^4nx<iOJg5+}bz>$Q|yvNdTWn@YB^`SY!C8;7rkziBK$
zKP3diK}Pb_?}%oTV?_?4(ycO)t{fDtM(@^4Yqps^LJYtX7dDbckg~DsJ@fjKNvN9l
zGkwYEg<Z#$Byzz7BaZ~1mzW^a8>G}LoE2<X3%rvm^J5_+7d!AoQndOQZ@4@^3gAo|
z=K{<C-FL5RhIt>|CTrr3-7;3kf(ne{6fes#db~!VcX*BkFhSiG?i{JJ6ujZIVLrk`
z^07)JUB=?znd8)MERI2KiV{Eo1S9mxHp!Z+lL|cqrKKHhnM-VDy%J9@qm;VHf9D1D
zju&$Cm(~sbXooOe4yGmIWtfj!FQchA+~$79)-wKzD;FREQr>`*i@yHD_IcaOc|58S
zGR)83QaY2GB5vvtsuQjZrT@*bz{v^YUh`$<RF{x3|5*|zyp;gIXwV2Wga8OI0jNO-
zr)Vi;`iWiY+nE<En-}6LOq)TCrGr&PE6o2zGD7i~K!LAKvbF3*{m_D|2}}N!($mu~
zy%;n4&Ts$+Iwr60ebpy-p?=iNL=K^~R4-0huy(ZQ#eaTwTlnh&2jBo}EI_`d8G+!-
z_PKSNYp@bXp!hsHmk3?F&$g!-(>Ixi{PbU>_e<b3bW=>OP}|~ES6{TE?`^)rzKZGS
z{XL31KSK?jcsGAZYlt7&nH&;1zo+#LNlC4k>2&Cd(0AY>8E;79C;xAnICBiXT+C&y
zNzK7wB?{u)p_!KN|NQ9_`Cc9qqk#XCw)cTdI?dr@7Ms9k4vCJ$9ET<rC7fOw&0Pe1
z(Z1Gdf$V8S-?z0g`>7_+|B54SeGv~>6QNhWJ{-#`Az=(DeYw~tUU=<@2jZgOJ6JL`
z>7w}<f3axqakJT9uO8W6pTmH|L?-w6#-Hn~VYA!o(3Xo;k3`?g``)=c+5mw8lCq@3
ziHw`WezsoY&0n4}9nE%NZ?wlQ=CV`cSwE+x1*y-Oo%-Jmp@xOz1FMcbJ`3jlUTRu9
z)cFC)?7%Pn&L_$vONf<j`8XMI3^O^!prUY?3lI@e<)KtB&aa{LyI$YrJed&DZNiH&
znB3Jlo~Ikky1y=v!<=z?9W2MoJS97}O=E|2+2hqvnKtu%tT@>0Zys=S8aIYN^5)iQ
zeqApq&IP#%_uek}qc=As&2(|2q8|*4e~w;EX+{zYkxsf!|5z=>dS-won<9}4F`V=k
z)cJscCnMKS=eG%MTetn~KtJj4vj@878)9CPZ9=&ku+?fEQ2|V{y583}UPm}PO}<*Y
z4G1TqMm~cr|E6^<lH&efzYvZgj3LuGntoBD62{4=j(^PFeYeJQ=Pir>=+Qu%$Q=@4
zuTzC*%wlq~|K|tPmC<9|f&w7tuP^yWbhliZA_$CmoSK*D^FRGQYzYwHH0mWkk?7j;
zH<OJIwUDX*s(baF-Pc=TeK)W{c}N`n2yw3D7egZ~hU-JbdXFfh-B4I;rVeafHhy5D
zACu<2AQ9aw>RK|`vWas>zI#9PP+|DNo#&Nu%xC}__kT$X*9%kqb?G~R-5dsu=B?4A
zO73S}TG?wnxj%h-wqj>`ici=+IJG#rHp6ZKT(23!j_-f^6Xyav)Uzy4RNFoWN9pYS
z>p8JaKBwhp?L0Fa3?uE3Kl6NtZzkuY&C{@Q>z6&OiFvtQd)bS9nV{_hztZ<&xxlzQ
z{cKvhGZo;t#GE2&(m+YsKZR|t$~>A!$bene(z<mMed6#VelZT4=}QU>n8&pQBMs<q
z?tfa7`UKGH$(G5RH^BiSEv9=51};xEVBjOECXPbPWsrYa#$k=*51f7xbLBATUX-m}
zukqW>g#5farsI?s(b5vkI6h(R`?U1-fXtaoD)SydzejejT(;hhok_@1a;nBoEHX<Y
zh1oA;DrU*cXsh0qnWyB-w0&;mP)gjm98*?^#z3Prr^U={d@b8#u6L+>6-J`*Kv<cX
z6}_Nl5BnL^Twh7>LMbxoR`8$Rsh=w(%OI)<f-s22Vl9|Y<1QC93RK1*6qJ^qxnNot
zCl1)psye1hqXp&|G3+@(r81L087|f)vxaT+9(iK`2xBMZ&^JVj|LG^2#Pf6BXZ!QF
zLwP<P!}i<m*L$aCox3+%!vURlf^O&Om8_?Bmxozy)u61LBwq&WAOm&iDOPTUWz3sR
zEZ}R^HT`s>AmC==tl`SwFohuM__3@FDQg>El*T7_nW|OCMs^odtZ3R!!W<03{<&58
z$+wb=tt@|_5KQJTJ%$LU)f?%LZ}*2rc7poGs}jyJ8`3<Pm=<qo{7xscHriHu438Bf
zwii`mhiW~|CIjk2zXn{zU|y&Xrn5bjZmObAeQ#>T2qPasfA&8O?uk|PP9)x^gM%EU
z$*}9*f6e2Ks@|EW<|z%b?ijGD1J#&9OrZGV0=xA?Cc)`Dt%q;Ds@*~X)a~*Er57%x
z#m}AC;eytiAe*jg??{uU!I^|eWV}6G1dY=2+>^1NV?2vl+Dh)VOwh1?n0`QE>8ujB
zI?zug5uvyf_HCemuCqZFBbP{eJ)XAf+ok2kG^%v%e(vaEK<+0=OzFUT9)+@$Gqb;y
z3gNX!OBHDJlj3;A(q5at8{4%3*MTGDzl47)GH&J~%9#B<WB>5pT9UU{o)O}KF_OpK
z4nu7_0keFW(jgvVVMP8Sbm=s;BN$LAtC6%Xf&jpZ8Y5+|QJ<c(+()9RjYDN<%Gah)
zV&_jI)9cF#M-sbk8-xEmON?_S5kC?8c@U1D_g98-d<><#Z6)XA5Hy;tCms77O14HX
zhGmCQd|;sZjqlP@hD|IFfF;&b$L(W4w)Y-;(b&j?b8|IzXub8;rXt6{%HZF1Si7U~
z@Xz(quI5+!lODZ^_+%!;sCPO96>@xyq8S#Ia#wY7W7jn9PRYN@uBsgAxPd^V(`@LQ
zVczXhTQX|8(c1NSrI8gWrU@x!t}H>aa}7_qs7<-@FHURj=9lySE^m(5SUY^{<i1}D
zJ>YdeC~J3B1gd`qZ^cd`1bR`%m*)k_+%^hbq;IqQqD=d=1db_Q+H8e4gl;SG!%ET!
zKaU4E!23!L_X8QxzQ(3A4tU6vU3|-J_ILsQ>$&+|%>AePp^HuOLF>w8Y`XRmRX#^7
zM+ceq%db9gS{szo<hZWT)g-Or3;lwC+Qf~SZX$pgD&tl3O21HaI-8>(y%U&})lV;C
z13t2b(XG)iMfe7t>Ra~Lu+O}vb!xu4wJO;yCR=7cFal`l;~xN+rs?Y=lCGtT!CbeT
zjEAzF<t_w((nL;Sp3Oaz-4~-i2^VtSU68)eG#{qvb;)vJ6%Au%hRN&Cw4miZ4I5>l
zUxW|XxaPY#!*ItP4HKtp#!n>W+SiJeYuP7Rd4r+f1exhFjT&%9kl`V{Vy9Rk)F1=`
z_n|hIs~3bI$KN<6Q`uyY`hDEV%?jw8WY6MRdpicq#c(i~89#ZG9}^q526sZDKBR3V
z-M+ahNRlRFjU@#KPi^UhfWQ;pi-d35)w8*M=0Wt|Z9fPil?f4s8aq?libw7L5T5x6
z^_-U(-54pvB0`6IWg8i^ZZ+i?Kz%Qw<su!^KWOO_zxUwnfl!4`z97a@s7XWMrH83#
zW#yKt@OLtxv9&m7wXAWu@K>dk9gu$!c?`^NLrYB7Uc3KEa1dz4eW<WRB+^ce1Om&R
zl-_@PTN?HK{TbPaHYQ8!OCV+StN+k}gI3))*R({8DwJO$S#%Cork5-_nmjgwu<6y8
z+!h70ZF_#Z(CSISzdJmnkNVu<w|r=dbZ5qeoYGL9deR`&>&hv$yBC+q+|IH}Di;`)
zRsaKZ`My@5kl{)e?}z(}O*e*IG8>1VtVg>Z;69T<zGw2KCI1$rOQU1(hW(%a`3(PA
zg+LYqWd=_B#DMt-ld)voho*Vk?-?1%1M!zlzvU@*CGMSGX{5fI{Y^YH`$DboHXrGQ
zdf7;EQ(Q$Dl6EEls^~K)8!a|}K&$rK-{R8yqOmDpTt7QiUh;SalQQZsK7m)2z^_7A
z98K1D{P*;!)inbvnhp3>t=8Y<$nDxAQ?q%oH=xMr!Y91u`WZfb%h%TxD<uE)JBRG$
zYNvwT-}uthah3Tx*}GxUy7D~Py>5GE9>#S;Y3Scf=so!NH`dzc17|Z;XCB`y6{^<<
zC9DF}<0t&T$cVLLm14FGI^$BaqmrsIk+}3TbzKZ<TM0DSZR$HZ^mW1?n5j3d<Q<IQ
z0<tde%`*;`n#Pn#FnwO~YV!0KF=VD9>1)1oK?$GoiVeFH!F>yhjpR4fpa|!hx;qrx
zG7#FGBklZE*(NgXVPEE4ff(LnSRt8K>vi60aCzRbvk|r@G?S0$@0V~bb5$p}i~~+m
z-<|;QTQVdn_T@;flRX_iXnDldD`<VKSy^K*NycmY3GX$qe))U-&1w?4|F=6YRFk)g
zj2G9-3UXzzhjleNPscmPAn1jky-mVvRW74cJ1_!xU{W;%h1;K2Q<f>%Pl&OnX$inr
zVc)Y+;vgMDJF0*yM#5e#VLyO35`UO^>TfMOS3nFwL?TkKP_L6ITzneXRpx970AlB=
zM|;0d%aX=;b)Lx|k<XAK4Bpf9o?qLaN?yb=07LiB%cHuMKv6w~+`3i||Dv8<<;GzX
zpvSB{p;6fr<LzW`7-jtDI4K9wg6-w)f^;@tPYqgcKPa!U*%Ag01GFIn7T6}f7~PD<
zl|jAE0A)t4+gPWGg#jp@up%hvSWNYh5$Wx}**rCSLQQm)lth*7q5f|8-=W?{JMrRY
zHXNrLs(>@1oq8u&KVN@Gk1svbrP4ip1z&?d1!5%MTSj0|ON^y=<~_lDqo#EEBH*aM
z*nWbKAq?Va{S#<NzCd5HiNQU)Zd();MpxsE#^ly$y^tw5Mz<jX(Dz(~71zPB>=!fa
zW3qzK@FmZp`W|}uj)$v1>h}nF6E)M_rReIr7>22#xlo<NaAV?sSA*W0o$;vGlD81r
zSeRJ(A%{Xw@y=waC(Z6r`CUR?X<Gh=6uUte2d9_T&-8PiogGX_@?laeoAx{doaYBZ
zV|2CMCG`7|Ia_wm+(~6PZfxl?&NhiQ6R1lBF}tzNeWJ%*Zw0>yGKrN`=L6wSSj?O8
zcXla;Zu~m~1_D%$-{!5nvG-K=Z7z5s`b<ZH)LieL|HM-I*^R>n)}nNLtfC6BEv6jC
z5s3W_hOA8xPdA~}<u9uD*qcVN^KroUE$N$MhTt$88@YT#aKRCh%O7BS7U8^jwJ+&S
z)F|_{lUTHx^B41?*-@AM8YA6z63lKG`W$@{I`OnS7RLLOs<7yTH1KkvoBbULTgv$S
z3NA%-nbm6ZWal{@U8D)j4ID)iD~M^L&=bXG|FZq5mGxGrl$hi#U33W!uAPXx*Ye?j
z8b>}+-u#N$^D=lKfg_4J`n=A+xEh9<UGci!*9s640nCRkM+vsDU)^@!C5kAK2D+B2
zd((T728`JTqZWD*Om?fO?}GD8EFF#I=F9h#RD#2~g3%jbd-g=7Abj<MH6b#UcopiF
zDbif)quUvqFG>X12dj%bzZc6*U{*-~?A&E^!`YDtn0XbnbjqKp#3&g0DT1j&fx=Km
z^fBG#$)N0z`rmS0kSJ%q9Vn389N6kg{b-y0A*(Brk`IoL{M4EiYGiRXnGZuNV?+`M
z%?@!>#bHy%-UENKI1#dMpSVp^Q!r4b^E~6c`S(0ZfYE#d>DMv+^dUgxS=D;Jz=@Kk
zXn%W}w99Meot<?8!W0GI6ZzNZz!-<{msu&KU=Jm#@I{8Ao-%GTJtkO%n%I+~Q7Ylx
zQ$gzW;ay_JlqJP#Y|I%oueTd|bF>OKx5cYHs&O_^7T~qnqMYe|w(fpq_j_~-IQx@#
zFVuc(w`ym&BLOU}jp@384GU_!i8D;T&!j+LXZe?`ztHD0bNlU##ecclPG#r6T5nTa
z*&m6EiYtrji(6UB^kH<<m=nnuTs?$S`$!|S9=^jdcEPZnO0u4woi#QB%+_V^q-lLe
z62bHEM#HDQt@!$j_Qp?Me1!u_Xl^kME4~G3d`G@s8FTk%>(pV_r~OvJ@`5b3wuL3O
z>=80?7LU2x-?cXJ;tVMAo*o)Kh5#3B94rPJEaXcX=U#{T5&0p3@pnS~1q!1PPG@g8
zCgY?pH$E@HutCz={P+q@Z4k}mlCy?1X*>BTC|8N|nIjQq#4b>NPR7Idkv`hapf3{Z
z4%BV2&_WDmo{$M$_iYzX4}cTk{yO}XewXtB&XYo-wt{Hs%=e<{rHVeX653y3oIXs6
zP4LHbpHB{9`dNGmOa8r6<!lx$Q<RxJijw@#vZtS``)=X%5!=2Uo__cvr0V%vi=7O4
z@6J@VnXLLnI(|Q->|{UCA-97Y+oKuREl|`%Jlfr~BuV&{32KhtL3W(D%9_BIq{1;k
zBi}-O=UMq!(#u(w7Q8Og=8&MT+I0DRI&OKdcE|BIGNKgKcHg^D1%D`p5mpS*BKexV
z<tPiAt$(B&g#IqLc~tt9ykFXc=cGesPF#Z~OBAx}BIH1EvWk&qm{fWuE$;b1bZCyL
z?JR>%m`@BVdO)o^>7J!!8808dd}G<!B5%Kf<>9F3<cO`fzKM4YL3A|H%`g9hx_#73
zTgTm+8R*bh-vAMeh=&(Oe6W#0dQCyz!;qPL?}M5(qi|kVa@*L4)DdcC(`BC}mT^5<
zU)Hd`&f?A4+id?I@lk{PZy23fdinXIk6;Rwq)r;}AdFRkw-Jd{ym`uzJyfr=A=vJ|
zi}~72&x!5cT3L2z1rODU!X>F;&WPH~{g<BzO&A&SWqn_EUbUJxOjEU9N0<(Tv4UPY
z1R5&9CK;%a%$x-OY3p_5Twk<NzmvxIaz_GAXe)@Lj}40PLjv6YlDKi^XG5ri8^u_F
z17_gfYLB%rCF%i4(pzFg;sboShq54QAWUV@!8C(#CXZHh5)1jqijQw^d4Lf+NFM_z
z;E%Es9!Hfa>Aem@(}wd(xfu(BF)UpiKr9_-^w3K=rBh6h^w_w@T+BMzrmnsQIQ2lk
zryKB{q&<JPJuL9CG1?|>9kbPAKZ?0T*}`Z*?*TTm85Y>TkORcOK7_6jMoV2yUH5bC
z#>ol97iNfBf(jro?9wy98hUcT-FNj->i(zof=*jJ@G1<`S%hfT<FBzFU|!P0LP+(v
z1|n0PI8NGS%^uZVN~S>u2{CtUBysL1;N_*FP6V>8?c6Q64pG~MFfT2qqaFh+XA#oK
z2LJlZGd(E06kYWmDZ@#ZA3%&VgXw~#4|h)`7!qm#Ly3urmW;v^_MUdV4hQK=Rn}n;
zwr&{n^`Z7%1f=ShN6OOs+*r(}?}y2Y@^4xtI}2X!=K9;}D+XE>xf@xhK|lS#d~xEs
z0fvu|r=l8k`f;WhFPOzL=b1GDCn>CrcF=q(IcuD(RURZp$W{#iDB<Ihvd`oUIA4$b
z*ZY-F)9wqHpjZe|k;;5OtjwME-{>1v_mSi}Y=navi840o;PMuC#fDA)d}s0)W6m3}
zeWjAM4W~WEv~Wr@t|_@3$PdVpdqrCnL&H3cp!Vg&kJLKzxHS0K?gD_umtn|reJ`lJ
ztU*yF)+(Cka)QwHXfxD0l=1S3mE<?=+^RH#A0BA$m!Eb^^{oo@49`@khRd}bb5zAc
z5B01iePgxs^M>3_q=G9P7ujADFQ4vEechan!GAMGJI6f^5>eSbq#|Uk_u)f;I_aB4
ziK(vERlpF>>aCd2=wG#cJ7znpiIMjCZoJznubXSsczU2f_>%&K)r64W?wemlI4hGA
za))w0N(swwtL4wJn8CI}-%wg*E9H6h3jHb5$bR6a^sUa;Q*U~&&$H^wcX)Kr1Q}%;
zcSY{!=T3f+gvzGRLj;Um7Q&%x;Q<E1c`u5&;4M}l<g3_kIPx|&o%kO@v@&1eW--55
z^_6BOd8q>6VZuqP^>`Pgp<^(7B<4Fu+7a-9e|3~_#8Zv{0ahOBfrw`qsMxdRrg11L
z^lTi0Dm}vmo>~4_e;Xii2u%{qDOP87Je8PPu`4T)GYZ+EuXz~ZCjD-N$k(gDN{JBu
zn+<Q#00zQ7vf9#pc@PpK9oPm5dqRk8SuwyzX08}u0j3p>tsn|0{A>Lgg&blu%PHC(
zgVMk<x`DL#;pg$`+vI4BzCOe1of!&H<}p{}j<H{#!bS2CRzy&MfeFI`yV?}MH_VJ3
zNQIfv0N-#kK_C%kh9@UJc^xm#G#4W==<C8{ooG}2N#>^2mwqURA>nCt`DcL<6>_R~
zvD#v)1uJ!i4GJ&}WQ6hm-p>W3!p%s4Z$zsMP-}?H!iUt!)~Ps6HQX5BXF)9Gaw%(S
zGOTZIY5X9CX*4tCmXZ(ad;9vP**!fVTRtKihmfibTmmR4_+)?yvQ`XmK<r8~Hn6$c
z<MQVNzqr-MG2&3!?C&E@SWj3R^&%e>U5>t(q(N=Yp(gCpGaAwKwvFSF$%vulfl*Y7
zX{_o99J&CBJKTQ_#Jy8I_9rorZ}xuyoqPx|jL5<=Z@Lex@A=McMv}IxZtd2sOTQAa
zKd>6IqT|>qsrsTVBx4wm>T2ESz7s|_Hlu#@-S(($_7!FfwwUT}=-S&QqJ2DM5CJh2
z;LigaeEvI-A+0MnK>iZo>0zLP&uD<WAfWjQ8Pd5rDwv`$6S_R+ZgKd%b_BIfh<Q=H
z_Uk&{Ex50b$8gqY8cFx6)o+z#247eT&>mqnK~QY1gV3@w#THU<MAk}<O!y2?&HtGk
zZht2NHaPv^wT3{LLKYvm2c(~1XY;u%YC$!1?G5+--i)~f_cgc%ilbXrJBL|KVj0ha
ziN(TdIl8`W;Cez3;b&W*S09SJS;3}@|Ac~ohH$3NVoD(0SxO1)I|oyqlY3xdx7yxT
z9C>*?v>y5Hvd-t*D0^HXXSFk1D`q=St4dbCyO^{^h-EvPYtvL7=JQ2q>s7N*OwKe#
zm$jxFme*2s$t5Isb+1#bgDf(_Hu$OKkS@=_WDGkiKhOR1+iz7V3T$P1ucgZoR#fY#
z*UzQ)2n540sPXk3&nh?j@Mo=gKL0L=VQr=NB|7`_%P`C$a<WrC{8)=XMScGU0zJ#{
z%XluIVx#`dYPmPfF!l@1k>Qj3hHec6(S4fnE&npU1h&0Xu`%8Ac&r%h)62M4=KD`=
z=-x1!bwbZ}?24SA(4C_Eu7+9`el<Q)OPNS9#&?UN=an?NZ|eSsZKO*-omb_*Pn%z~
z9Z|>QpHwHWRg1q8@OH|l$721MX*jST_h06j@xNfZku>-dU{kD^@!MiimI=!sOD>*j
zFuUvQ^gQoO(n$*SlXB^lS3EoW)9+mL*LUQ8=TdkQE_hjH5HCUke-3xu1w4_md-psA
z-~nr&A~~-Pu()s{pG)Tbj1kgjv5j=j?XG60V7ESfFT{Cr@w)2RnBA{gvAAtL>Dk2e
z$XC++k3TJrl*dT+@g22Ia18D2Uyl=3{peXrp1I5LK6OpU9~o(plOuUw0sL=|ZK?D!
z5Dil!La#S^kJUMECfsz{)F-cdr~c{+Q$^aj4+~m++m9xC6acd?=239ju%(@L9v3a3
z=E3gofYVDEyl?08MF#e=miD)yiYn^a&Aq-BR}F|-db0BAk-_Uq2Ro3QHPCT=eZ(BY
z1c1Q<aBhf1sWSs~qdx^xa8+SZ<9P+E`R=Js_A@=>ylVYUk&8wB@x3vI0C$A#n?GN2
zhUJW8I%&7Hs(LY7iwTx*#?t681C_ZOwRGHPy4?5E&zIhz4K)gXKz|oiSDT(yy7B2i
zM_x1GMK>tSm(#5(n4r|gu!1JXXq&X(kJmq{;M3t>f&Se+@$CLFW4(PDj4vG1fau#|
zIp#HO{!u4}XN)pkg8p4T;e6=iQO5_bd-#BGF5}|<huivpGf@(kmv`*3reepMgX)SF
z6HJ>=wYNuLGNvF3FyzMB_|v}6zEfKWGN+hkDGoNLfRyIQ@d1lJ&NxB%PH_6~9_VkJ
z=ud<}!N+)>6sa2UD6A4~^tay4pd~VEYpsu>kW%48*2e^;Zn*Q2cKSR`5!LHT!c#TH
z)!9L2zuU@EQ(tqZ#Q>!3<Rc-<24$v?8xoo`D4>I5swVmM(H(TP5+N-&Awy5DDgYZ7
z3_-kK36QPCCDD(;iW?@goB|*Z&l1GFT6DgIsog2OiJ%k1X;&xa@kIjas|WZWW_1ph
zfE2?iOdl?vO*LeWoAv~P{*#cV5mEgW3xT~)24ZXgl5u4n3a0NkNLT4yU%)YgA>~B?
zCz-7Mbw;oUYa09E!05zcpiNmcOR!lUYsaf`Kb4h$a0%_Ks~X$28<n}^)O<|zQWJUA
zf!(9eDarZtfT3$pCQ6GPc>jmJT$I+*z!NSD0g;Rq5|1H63Rho#21|g%+AEC(rhsIH
zr5P25?u!AAqQRI>jJJ+q@n+Fab3)Kbycx`tPIEOZM&v#rscZ#G{N_Bs{5C=TU0h=h
ziRJ%-7-Oe4K(_?k*(a67F=hw*-XQJ{=e~An11E_(3^yZzZ;7w`5iS~AgPMM{gg}(~
z&k3|-=fg#mEAE0HalWdxkV@~J9L(xfn$PwIR8Z-zQc{rFN!(*Z3>g2rmNxRQ28E<8
zt^<QFU)8?sx~}1u5ex6TNVLCBqj`FD!1d&Sr##7o$7D~NcoxZyEhk*28aQSns07SS
zgd{z}u<zI)Qsw^|(%luu-GK1>#orcP)aiUmId)zwhFXYKi5y5O`LfNDEA3)gdlO*+
zQLof5w!=-epE+`$Ib2W?(C&~H$x$XVD3k+BTBy~RkVXRV{JC%BU9HkzRfCO+lsrZt
z6=B8#HaiD3Jij^PPDk1$_1|`WciZw;v@AB99`1`B_6tyI2A3MkT6X;A*B@>PlH;Uf
z!@0l6A?D0M8N3s=)%?N07PzJi4gx1*UeHjo_7TD?7-g{k3qycM>;=XohcSU*UdJDi
zSji|xqOKCD!fuHlul;E;k>0D&GTO!OO86U@QudSlvDmktJE1n-fiNtDoHpv01tl=2
zgn>U>->?upT|9RkZt$Tp7x?{OwHT2U1tNf1&=?BD|KTc{tT%na{oFo7N)k=;Xt(sO
za-m33_v}}SDEvB++N$lXI-kRyweCV1I%_BJMY@e7!{8kWh;SLhK=nN4a|0WVACe(U
z;;B7PnUFfolY0%Tep*AAz;n#TLXp?mFNy!G$*a+QFgU-@u*Q{**0Rc~s;M=<8Tlw9
zcDVk%n<R5}WA$wajaI0K6dOn0J?>Yepp0FVTpr~w6L9*R5DdA{<URmr&(TCV1_XDF
zH5satSVW5q5$HaC<c&G)Xn36UyO0GRq5k}-gR7>5<a!UA;q8TxQtH?<F(G_>59;Dd
z{O6vSe;n!r@i*A-6C%lj%!{ci3$c))B27QR(l>7m2udCs2pjk1Fe3LPCg1ejAN##i
zr1B$-KR3_enNczAy`3UAghnH`_@3#B(PT!TCz5<rcL^_*96Xc`{KH-U42m9wx+{Ub
z7Y$!zKz38OnKW3|o$UFGb|14JwoBQZOS2B6u@*^18zdm>7`zZKB)chW4(BR6(%tQE
zlIEUaQT)~*0-7vKVa9hnPv0>P8@bycT>(N4ANY@hvG7IqZNFDkWoMxi($XpkBxcGA
zCWZNiDWA7;Ihp@7$cyrR=aE9uZC(9IJlDFcm1U;V;$sw017mW`>nog?$n_ES3P8Wy
z>=3IDtXn@A;NC^ox_HN$8lxe^#aGJ3(0-krsor`S&HlSLc^6Oco16K#7I9kF?muUl
zri4e%182w|P_#VULvd%0kp?VX!wP4gVk7Xp);Jg4d;oZ!kMphk8T5{rQDEqB_>(M@
zc1#=>{z`iqB**<s$UVC4_{nd)`0w!j<-Y#q5bqgG9xZ3w1wy&<s+vMI4CX~LPBljx
zV&uu;IW8!O7{@?a9>d_xhQO6Pzz^tBgOB%^H$I8~n~Q4b^B2MvmaiJA$P?n&vOFk>
z{rcnGHb@O4uv$WQJFFf&<zw+tHK9u3e{}$ye4uV1eGC)KQ&vWaCw*ZA(vOopzhT^g
z`W;c#>xQCV`JOl^iAFA51KZr#AV_Iae#-H1H${+KBvF+ORXDccw7b`^|F2DMzL%G(
zI&+*LP9C1a0UAozbnkS6o6lX!1$V@;{WV~w$-176-x;YFGn#(hs`xbX`{JUU1Nz$&
z2+F#fGaS25l4NmU_Fy`*gMPv2u%6RGmhzSBPG7`5awOJ;ufEg)+G2I~!&<?|Ywb1w
zoG!NUGhLzYi%<w&TjmQ7^>;(M1W2*V02=%f$MVlKVGMm#7-a+)0x*mv2yr^9v~jec
zw6MzaHRS`5!dVP<RREA}86_*awpDHh_RGB(y8-e~C=J6Q)bYu>Tkou?DvZjPzPX#4
z<|4@cWXyQKySjm8{C!*KiR8%^-kl;zsyr@Z+7wzIS7>ZK{H1}|H7Wf1$aCkO_qQgX
z$@8eYvHu&7T-j~)IEA(D+Zg{#?t%NU7c?F`spaXfgjvKWnho?~+_SzZChYC*(N11D
zMH(#XjvFyPrxh$*tz7q|Ff=x0^V76BxB1T8oEgoL#3E8S1>Ag4uDDlx*Jjx^!G8&d
zD!z%qZ*i+`a}Py!U$N%~?iRP&N;)w=bK8;=Sw@JAa9;asu0U!!8!Tt}OuP~3(Kk6+
zw?`X8jhBP^s6=hYF*}KX&vg%cXJgcvP>Hi*!^^fzE14+y-Rri4$DT7RbyDWP$~ik^
zq(Wm%>yi42Ovx=ou%{_ov(CpKjC@MkFitE=P30TEYO9+CTk6=e;}QNO`$?C`9hjr1
zQ;Y2%`XX(U0BTtM!N^y@`ux=Fkr|n>8(zP7-DyE)u5uGDt@UW0y0*}twuy`)Wkb;q
zi3K$!a7h_+HEhxJzD8GOxOg<<qvPU2Ru8dHRJm$BmA0W&UszfQy^~A~zN(S%Ew;P*
zpF|o>u)M&vR#m3wGHxu%A-9))8sq!dwsUVwf@WJ`z$$Sq$DVq@L;Y|_$CFnwP|DGu
zp8X?7`B*L6dswwM%7Tu(IB4<ZK+A*RXZhah@iSp_i8CG*3B!`urwcAjGFQBHr+*kE
zkY^d<a{OY8i=ErJ({*x!lBzI{ZM%hR-axe9Sm9)WGW|`7_81G><A}oFmv4`nFx!4Y
zEw|M@dRorDlb$oDERL{0lq<`Gl-^6g4SLBN$_U|q<3Rl5B<{(Ag5)rgck5pTuWa+_
zz%%@9bAv+;&8x2u73QgNRJn(Kk@a9^8cq6Xb>otDbo$Dh3jj{cOx&0BK;Dz8l>pS+
zfFWmgDhx!p_njaMkf%;q*T!Le-M4esXh+<a@Rtrx+fSRQC<1CZSXOh*yvO?b@-){6
zoaDS;oE*_xHTq9etSd;SNC^^aqXfmlRMVc!o8;fz*#AL48~(Fw7?A!dhM=&j2G*=M
zolb%@YcphFc9i`s3*F;xY;%^rr7u6GMH)AZUa3*F<{VkmHJ}3nktdkN67KZojW$o-
zkG9yab#EBH8!iN2loB*X-|?Wl!Cn<|UQC4$c$X~e;Ug(mu#;6nVsZ0DJkrDt?Y<E)
zz?=>J^{*I;V41Z0+=hxB@4*}kDVeb2LX%_d`%2yAbL~DJ-D_q67&v4}cvnN;NcyrV
zk_oef6fjbjeZxfHXEAjWzt*6KPUe(U=D+S}e&u^3DqS?o%761F^Zx#~AY><|mHli5
z{OGULR)2HMte6av12R%HMw$Qv0oYQ7!BNzQ#tn*htwzsL2M>9F<&7~TZe!xGf5*?z
ziBfF|oYT0z-M8F?o{hLG21F1#>W;NX{C1c@T4XBx6^m5|bfi>l@6}zsq`s9y%qtaq
zllY$CfY>~Baww|)EWCBMiXZ2JSiq$7SlMsIt24%rK0m%lOd}28tr6%H&3K8=)z-_y
zO@3($XYwZwlg*8#J3rsQ`E7hJ{I18S#UJQ3XWucaMDAy}$op<S*58O-&KZJ4nbXcI
zzs`C!#D4Jkuxr93fj<?Wu=%P|I_OLffhJ0d$0M8aV57O``y^{e!o@qKW5VsWqEby{
zhwx5fu){YRQj}mIGgAKtR7ZnRIa_U>@%bDkMcR(o_p{o=w1nKk*2TyLAu(^_#vz}J
zXI~`FX?ZHY9Ll3$UwXe2;-YXccT@;6U)Ngw=+W}Q2uIC5WwjkUh7rP$^q3dl*FHky
z3JAdU#NJ~_p$-JBQmWmpy`xTn*w)#VN3}emO;XtZ2<KS6OBIh6UbrZGV(r@s+UKxm
zkYkB3|5#0N^4KKIqiU<QTlhMDXtLg%uvF(ZkCDvUNaAJX9C08R48uZV1j_uPrU8!y
zKv4taj>CZz!Ui1@;I<FWE_%=R_((V0(*$|379**`TVr<#>s2&9k0vch;@8*TJ)&wP
z3M+$h_6aS0T55fzGo(tK!7sG0#;AIal`|7hZ{C_+qWlMh`90#4qwMkz8#e@*wMn>#
zqw9%hDGfFhiqt;+=?!M9b*y|fP)(#@nn`?$*xVJ;L!^tRX4V`r;;l@QKpj35N*}Y+
zB=^oWg;t4KFEj-t*A~DmWsf)tu4m!of85kr<SM4V03EDAn2V3E3k3vi_V=SV7#dmI
zdqwHA*!#11JTjmnQ-X`!>~Q^2u|ILluhI7l+z$CF@Yc+?x}tp6J<j3G1>0>qggoBI
z2U`yVtYWSws&C`EPRpJL2O{hq0?r^rN4UKN1l9GJ?~eRF`LZXh{HKT~yZ3yF=vAxp
zxU7j)bE@O;s0*}UJd}%&@yN7{Pg^pkmH(AD0i3ETuYRpWxC1l?dK{h<XXQ1^nf)S>
z*>yJ(Ef^8BzP5Z=PPDkj;>A@B887I(4*??gWO%LIenQcX!w=3FbhGy0Hl9SK9Q%hJ
z_d<EUF?poPe*1Yap8Ti1nthVm%yx4tazlFK@vfRt+oD*EdT0LQ`sP5%e=$C(f^axo
zB4*#jq0w#uE7X3=7N*Rk{LA@N=C`5)FAULF(@BVnG{jk<zz|R-`ws}`cP)0;dS|){
zB8DVs!h2tDHGFo!w=&rl_uhD{e`Xc+Yc%rWVorbYqfoY{lUG#YgWo4GJG-R_qx;&V
zbX9LhL*2)(K}aS<eLy3Uz+e1<Xw(apG+OqT^Q<!FLlnScVsgUVffxYp+U~WyA{ZiL
z?`6QVqt1`*>}CFKJ81Vcri$I=y=dD3!)QjL_T8Qa$+5{(w#mAI$@Q8G`G`u055}IP
z<nVSdt6O9fvrt<%_E5wzjjY4TAw(UYUbLivnDwVXYgmHJ>j|a}oS*@q>H|F<Ts!F3
zd_s(TFf7!btolCI2PE(L;XJf<-%7r<kzC(t&-BmzGentnao#z<pYtz<wYfWELxjrk
z8Ww_(G5Ki~@%`=OwxaSqHD6|Y`OB7O4)@GQyd$FK!}g&&bX`kZA0Z-e3zL(uKsg2G
zBP_%wQBlf*fGz|0s+a|TK*=654&57?>1cWoigK&2`L*t6CGGdPN@<so?Dc!?d_m9A
zVPg(&&EiKijOR!B%r~%qglqFT1L<c-2*hKx*eJm~6*<(`ZlS{=yC^a>$y>fywo*do
zfcsJ>T56F%@kb|~g(h+d13&}YIVuI92DnIQ8(A)|^cY_d7e0}s7)zs@`mTG%rIuQO
zV8>*;NE{whiRQd{5?#;W?sxP&iJ>1^KY8k?a5@%;Oj*JSj*b_B1?H~_zqe%?=4BiI
zL?<qe_h;=X`(?V?L2gD)ib7Oc=c|}bJRcl8Ux*G<kWLqHTE%j}9}LU%rG&vUh<6l;
zBt<QT`5SF3&AW@V5_<ks?ZMBT4KHP!c*9}`pZ&8m@|BF)<J}Mup?WA4-NXA4J8*}D
zzDRZ}(5T^#z8O*poU#je`kc9CO0f*N-$bnv*(T3B<IbFwS_i=25&JNCtt_;0v*URc
z^dL977TyY0?^POjM|lpXlC6lWbF=$BjQPm^F`|#IBYU9NN6>Yz_g+bKzxt=|?Tdnf
zvL@S~s98=lq6)iq$vRLJ<TX1nCUmDm&8k(7-0v1@Zp=cFN*-lq0ZoS?<+D6ZQr)Ad
zBodi)q1DCHoO<7hp4xH5S<o4sAkKtvT<}#jzS>_oG=ab4)`dXT&dhkv+p68G%*r<*
zQnlW1&(ZdD|C$;Cddw79iE>DsUs}6*)6<3;{kdah!xO}VIn4(A%(oR%KRQR~1<OBL
zR_Lb}&xr44=p=G6nx(XT#?0s1ZSsWiioXc!wqnnT=MuC&8`cqKvy=6Hy%^I9!z^hX
z4H*A;z*w0dDiKXv1DGz&Po%!&yfH>h^g9<!q61CIY~{|hWpM1@E;NuapzqdUjltf1
zf#-%N_VX>*mBwPYhC?;_`Z6a9zE*XbX-&oJ?T?BEOJ3-Y-!@lg5l&U^+^mHyVUH$Q
z#AzRqtOYMqf2NQA@DlOi4SQS!QCt^I_<V9a*54=!t1+6ZjI0m7hq}XI>92Hgy{(n$
zY17Hyn@ZCLnG(q&l~ov(9Tge91h%gkPA?rz4_{>IMSg2q?|<x;@$hY0e_XOvdwE+G
zyu?Rg0Fs4I(M(lP{boMB<jC;(h%GD5EiQH-Vbb&wSFJ%=av;RlVnWkGv9o=Tr{ML@
zVueCza-01-dTHPIQzJ)AH=nIzf!RlnuU9>D=KQ;YB2R271MFf=xOz0XTb<`BE_@1#
zxBTx)y-d}EIzDBnb*v+9?XZmrv~Bg6qu-0}X!z~1J;_s#n^pZn>he|X^k}7o_93y$
z5mW2@w8vSFmZ|BgQH|p*p31i0qn`0ldfN=2RW1&1pZbYR%{LWo#mrX)AmmNr5gtR)
z?QHa@P~8Z+OfvNdE2q6Agr<&ksA1yur#hXoiP(svb1O<p{@U`|(`xvmSlg}nYmr|v
zrZ@JNC;syXkL>m&{r~Tu&XFHh*N^;t7QHPBdO(kS3~o$xYRW_gV<mS%-mdasaqh>7
z8=AX9n@xnxa#!hqU=cSGyP~W<te_p1rXLLk)?Vc}Mn*4A9PM9^XSEL-5W#l{WbiN1
zm-jBKs<w$2U+ULROr(vryI}1iV(Yo3vAu?C<7{`{e~%gBR`tQ+Bd{-w9Ll`-!2=f^
z`{eYc{++?5Mcq?D_k#ALoMsppnT^WO1+Ze#$*IZdQ$gsi+)3N^H_7>0$!k7?i}{$N
z=XT;jyNa>(4F6fiFK#Y-OA!2s!^%9++y{qyQ{Od@?*lJIE(S$D8ATC3HtEFNTGXYi
z!3E8m24a;4ZJ!H<`3(>E{2p}8-uI;!SqsMS=CZ%|!S|S_7;{A2xOob}>?pc|j3Qrz
z;w{yK=al3Vc7@JnmWz|`{U<*E`$jhJ;d5a^dDLj+V(6(9M5V}Y*Mw#!4!Or^s4G~r
zazt(aD6VSth&dwax)p2P#a{fLqf)Cv{1gSQ>764QLOd^l=i;ATm<89-IlXne%l<W~
xq}liuRH6wO@-+0CpU^p~W14zl#&D_F*;~jmW-|le1To-lQ&ZAXERi=4`X5FbIP(Ai

diff --git app/src/main/res/mipmap-mdpi/ic_launcher_round.png app/src/main/res/mipmap-mdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..115a4c768a20c9e13185c17043f4c4d12dd4632a
GIT binary patch
literal 2858
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
IM6N<$f{l1_%m4rY

diff --git app/src/main/res/mipmap-xxxhdpi/ic_launcher.png app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..b824ebdd48db917eea2e67a82260a100371f8a24
GIT binary patch
literal 9250
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

diff --git gradle/wrapper/gradle-wrapper.jar gradle/wrapper/gradle-wrapper.jar
new file mode 100644
index 0000000000000000000000000000000000000000..13372aef5e24af05341d49695ee84e5f9b594659
GIT binary patch
literal 53636
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
z%0A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

diff --git app/src/main/res/mipmap-xxhdpi/ic_more_gray.png app/src/main/res/mipmap-xxhdpi/ic_more_gray.png
new file mode 100644
index 0000000000000000000000000000000000000000..1725df1b1a40cd3025589b01e6d522f9bbe62812
GIT binary patch
literal 328
zc%17D@N?(olHy`uVBq!ia0vp^9w5xY1|&n@Zgyv2VC467aSW-5dwauCsL6qc#o?#$
z|9ZyyOU-c_qFH4h9)wk=ZI!T6OxyWWMs351=N62Nb2$VjH0)Ay5^!WG<rKK`bUC}A
zOTcsn$Jn|m0Y`hGExEV%{(kk}YVW$&$FqJ#B{5amB{1$?AY2mkkx3}vdr${!slEC6
z%;rUo8!!7{G2_At1#V;R&2#7exNqagA~<Ew{wX)EYF}6RJ9E7$d+#|%<JBJTdKH?4
z^xt0>auINhWnwA)`4Xt`imHLu2|EzfSZVuv!RqghRTJc{d|j}lE`8rM6<aIzvul)g
znm2KH?YW_GEK}1^Rc!H1S%nUTrd=!?uRdLF=1^MU{ou(L<{oViPtS)O+khd&;OXk;
Jvd$@?2>?1wfl&Ye

diff --git app/src/main/res/mipmap-xhdpi/ic_launcher_round.png app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..459ca609d3ae0d3943ab44cdc27feef9256dc6d7
GIT binary patch
literal 7098
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

diff --git app/src/main/res/mipmap-hdpi/ic_launcher_round.png app/src/main/res/mipmap-hdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..1b523998081149a985cef0cdf89045b9ed29964a
GIT binary patch
literal 5024
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

diff --git app/src/main/res/mipmap-xxhdpi/ic_discovery_gray.png app/src/main/res/mipmap-xxhdpi/ic_discovery_gray.png
new file mode 100644
index 0000000000000000000000000000000000000000..505cf80b0886ebdc11f736d224b68c5fe1896c8c
GIT binary patch
literal 1513
zc$@+01s3{=P)<h;3K|Lk000e1NJLTq002k;002k`1^@s6RqeA!000HBNkl<ZcwX(C
z-ErJD5XXT7-{VwZxq^f`@YzxYu_~}sfu#zfRA9LROBLi)fiKU*iFO5%Dv0$iax;4Y
zGte2tH+a+xF>|8_eqiy#ABzRB6eV*p5}-35Gl3b9MIkew8Bm-PnH4le1>N1<y#;_H
z05~9os6W-*dqT+eM=8bM`tb1ZuQ)yUKRt?qnx=Wxw(WaD$U8#Fk-wSGo>&t?R*bQm
zvMj$xzRUV}RzP)KA5ls_NHA7o0&Z9Vz^AIJ5L%X!1&{>udjhq%HhK*Jf8+p_6p$QB
z9|<9+t}RP^-!)_GBIVFa21p2j{^c_v<W=HE`@RnS(i!J`<@=!S{v?3vy8cKhJx^g!
zs&@duRaI3NvG0olB!?8L2Gujgg0tOO%#aHPgm9jop1x2@f1M(k-X;L}S`@``D5M}j
zF9l8tNI`&v5Pwd1SPcn!#W_FmRl7GJA;c9S1cSeqSUz#iy(SYcKyoTa^-Q(^0It{8
zlu`^-b>+k-1aJl<XRN;`5a$ea&aIr<*FuOdhA93!W9*Hq({=_Vgt#Vz;DU2%<%ThK
zS(YWP{E1xVARtq@;hZ}~`%ZuyD;*o$GcbMSLI{kYf3q0_0LLzCHzz<A$=Ym5eO(I%
zD`}eMplw@p11@FFIX|}DXazJ8^*o|~DT?B{A4<B0`MLoY6<GnfO4imBf!BL5S2m~W
zsh-}PTh6(0nPdbcXRdz&8yEAKGZ@A91Wh80v7b%wjes_r%{c(z{?1tC0RXOxqOdAP
zH7HO$+gDIZFP6(C2EW>31XR~G23&7Ppz}Z}y<9Grr~>ce>wDA+FtDtuYH*+22uKJ4
z-q!j(5CtY+=F(cnIUnROcp>xb^@tm6p^8ykS=aTYVOinSU8dR01Sq=V!EsILSqeC*
zmOpaC|59h~AfT9WZRxfL&N&_yMwb-okwy$IJxmJ9;-INPJx$YWcPGoT{A#0@N<CPQ
z$x)jWgduy9o>m&GRS$w`+ZMM``ugq}V<#q13Dtw<-E+?0_ztn;GuV)Ngb=#U7&JPi
zdU_~BGnq+2sR5bP)98ASF;?nSlvq96s`n0PC}Nev%L~we;%siqczxf19vNc?Lu(!(
z1a5Y{-f6)%&iM~VN}J8*6aernE@=q?q%%6mC{vsvqhWN?xY5-^`o<VL)eWy4>LG*-
zh8|-~^G5Zk#BI}jF7<>?^FiAOyArdh$48Qx)Pp7j1&S$_8qVsmfy$*G87N|Ik>64y
z#bPy;dV~;onu2>aSyF3)7OO}$cDqBKKW&d=LW%@~J)1hBe`Ze5b_c#8a>LB|>}eO?
zSYT}HFua~^%hgvsxP0ik?gIeefnHX{s2yTjJX--pY}z}kM*)LL1zCKIX?RC%+Dkv=
zbW*7r;i8^>gOT>e9s5W>gt^YPvu>4-Q9XD9(RJN>0N9ISR6~;-9Qr!zA@#_k8B9rW
zN*V~6^?aVOoo4j!vYxDZs^|yFP7O@oa2NGhowV8`E_>8!rBekX+vGfnI4KBUDrYnd
z`hL<$xtHt+-)H!YB;CDU%O7Vzaz?|0er*aKE-U0IZ0y%Ou>fq(=SjiqYn_ugZT$aR
zqj|?h4zJC9i?iQ(7HNlACH)b8qxDP3^Luy(cPNi+IYv6WynK-Qf)@lS7>?I8ucIp=
z;m)HqX>t#$!76X%-gfY(o52d&iIJw5eea!BpLB@rzD#D}qnfmF(ufLr#N~`nHoeKV
zBns*)kV6jDw6BD7Oc6d0amGWCk^<^0!DyNgf}8$hr0;FBGq66F#Bg6FX91*wlAmhk
za^nAgpW)kZ*ZZ>qQiopGb*Ej|y^B>9s%5cQtQLy}CY1-zPLl$(Ym6L%xDj`N|DFQ>
zYR={{C3yR9Dey0T;*?_u*+7k=Ae#|WzCHu8^v(=u1{61dX9dj)ic`?P$d4IzH4>gJ
P00000NkvXXu0mjf663c9

diff --git app/src/main/res/mipmap-hdpi/ic_launcher.png app/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..a2f5908281d070150700378b64a84c7db1f97aa1
GIT binary patch
literal 3056
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

diff --git app/src/main/res/mipmap-xxhdpi/ic_news_gray.png app/src/main/res/mipmap-xxhdpi/ic_news_gray.png
new file mode 100644
index 0000000000000000000000000000000000000000..250de6df0a469b276d120d6621e24f9f97c7e22b
GIT binary patch
literal 678
zc$@*I0$KfuP)<h;3K|Lk000e1NJLTq002k;002k`1^@s6RqeA!0007QNkl<ZcwX(B
z-%$cF5XO@U?`j8jAQ^JcVkJ_7Rv;Z{30R5voMR#tXbJjGCQe4sK`(?gd*=;)_q^F`
zzWnwN$D9;+b}AsD&u#@EP=*i)1cAzm2nhNuL3Le+GVT9%wK0a}@{>*=(8mQsAf#AX
zs)Ha9)G<L^-JvY(uhpq$!WAbu#ke+xKwJuB{D2?`RE8P|0zvH%MD?0#J_p;yAkbO?
zt{>H{6T}s0>gH1i;Mx}gWpWMzL7;5~s44mH2!cSFE(U=hP&+k+`rD0dlIEI6xaOeV
zr5JUz=dz~~LA7Tii0i;qKhy(L?IF<mMp~bPs5j4LPbGqC4}w6@HmiR|5ZZhOMF<3e
z%5oJ1fgljnG@D@#!W>kV86c=Dg3!g##maIO1c4wB)ao3B6w9O-*Be5rAL{!Zsy*hQ
zuI3=>&2!mPiJ;npAP`j6ok0*cK}x9;t@SHc4Jq|g*L95L=)0e$IGuB+-uvgKJ%97Z
z;gb;J?7K55<@IPZx+^^x*LrL1R7!cXPn?Uz;wpr2+pzc27&D{}iZda^Wy7L)V^gKn
zeIH12&K-O2Um7U-j5D6Wdmqm-6+#?0oax>eGa(6NtsP4#AGmJ1&wfG(7gbfwNdiS<
zYwcW0dEV#4mBtoAc&w^wobt2t+wyf$i?!%S5iAX?C+pvoQbVnEOwq<C`|-VVZs@&_
z_#K)^QJk^XIs%Y<vI51Gk)+jXH9M4ai)l3&3?{qC*(kP`KpW$A;f~clw!|MJKu^*p
z6~<Bs@f1Rsr3x~+Nca4}orFgssFR3#wh08vTnGe$KxH`#f-?HO19{rWXGAo3l>h($
M07*qoM6N<$f|h$M)&Kwi

